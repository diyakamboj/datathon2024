<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='RankingMetricWorkbook' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='UrbanEdgeApparel (Copy of UrbanEdgeApparel Data)' inline='true' name='federated.0qskgvq0czc2rs1fbl7no1j2bz3z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of UrbanEdgeApparel Data' name='excel-direct.0u7z61119w4n2s1b9z61a1waqk17'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/diyak/Downloads/Copy of UrbanEdgeApparel Data.xlsx' interpretationMode='1' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0u7z61119w4n2s1b9z61a1waqk17' name='UrbanEdgeApparel' table='[UrbanEdgeApparel$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:1' header='yes' lost='0' outcome='1' processed='89102'>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='string' name='Order Status' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Day of Week' ordinal='3' />
            <column datatype='string' name='Order Month' ordinal='4' />
            <column datatype='integer' name='Order Year' ordinal='5' />
            <column datatype='string' name='Customer ID' ordinal='6' />
            <column datatype='string' name='Company ID' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Product Variant ID' ordinal='9' />
            <column datatype='real' name='Product Unit Selling Price' ordinal='10' />
            <column datatype='integer' name='Product Quantity' ordinal='11' />
            <column datatype='real' name='Total Selling Price' ordinal='12' />
            <column datatype='string' name='Payment Status' ordinal='13' />
            <column datatype='integer' name='Shipment ID' ordinal='14' />
            <column datatype='integer' name='Shipment Number' ordinal='15' />
            <column datatype='string' name='Shipping Address Type' ordinal='16' />
            <column datatype='string' name='Shipping City' ordinal='17' />
            <column datatype='string' name='Shipping State' ordinal='18' />
            <column datatype='string' name='Shipping Postal Code' ordinal='19' />
            <column datatype='string' name='Shipping Country' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0u7z61119w4n2s1b9z61a1waqk17' name='UrbanEdgeApparel' table='[UrbanEdgeApparel$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:1' header='yes' lost='0' outcome='1' processed='89102'>
            <column datatype='integer' name='Order ID' ordinal='0' />
            <column datatype='string' name='Order Status' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Day of Week' ordinal='3' />
            <column datatype='string' name='Order Month' ordinal='4' />
            <column datatype='integer' name='Order Year' ordinal='5' />
            <column datatype='string' name='Customer ID' ordinal='6' />
            <column datatype='string' name='Company ID' ordinal='7' />
            <column datatype='string' name='Product ID' ordinal='8' />
            <column datatype='string' name='Product Variant ID' ordinal='9' />
            <column datatype='real' name='Product Unit Selling Price' ordinal='10' />
            <column datatype='integer' name='Product Quantity' ordinal='11' />
            <column datatype='real' name='Total Selling Price' ordinal='12' />
            <column datatype='string' name='Payment Status' ordinal='13' />
            <column datatype='integer' name='Shipment ID' ordinal='14' />
            <column datatype='integer' name='Shipment Number' ordinal='15' />
            <column datatype='string' name='Shipping Address Type' ordinal='16' />
            <column datatype='string' name='Shipping City' ordinal='17' />
            <column datatype='string' name='Shipping State' ordinal='18' />
            <column datatype='string' name='Shipping Postal Code' ordinal='19' />
            <column datatype='string' name='Shipping Country' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>89102</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Status]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order Status</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Day of Week</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Day of Week]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order Day of Week</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Month]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Year]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Order Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Company ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Company ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Variant ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Variant ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Product Variant ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Unit Selling Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Unit Selling Price]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Product Unit Selling Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Product Quantity]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Product Quantity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Selling Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Selling Price]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Total Selling Price</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Payment Status]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Payment Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipment ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shipment ID]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipment ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipment Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shipment Number]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipment Number</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Address Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Shipping Address Type]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipping Address Type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Shipping City]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipping City</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Shipping State]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipping State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Shipping Postal Code]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipping Postal Code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Shipping Country]</local-name>
            <parent-name>[UrbanEdgeApparel]</parent-name>
            <remote-alias>Shipping Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales Volume' datatype='integer' name='[Calculation_1300695887056949254]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Product Quantity])' />
      </column>
      <column caption='Total Revenue' datatype='real' name='[Calculation_1300695887057018887]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Selling Price])' />
      </column>
      <column caption='Order Frequency' datatype='integer' name='[Calculation_1300695887057096712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Order ID])' />
      </column>
      <column caption='Customer Repeat Rate' datatype='real' name='[Calculation_1300695887057399819]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1300695887106576400] / [Calculation_1300695887105720334]' />
      </column>
      <column caption='Repeat Customers' datatype='integer' name='[Calculation_1300695887069429772]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF { FIXED [Product ID], [Customer ID] : COUNT([Order ID]) } &gt; 1 &#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
      </column>
      <column caption='Normalized Sales Volume' datatype='real' name='[Calculation_1300695887099559949]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1300695887056949254] - WINDOW_MIN([Calculation_1300695887056949254])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887056949254]) - WINDOW_MIN([Calculation_1300695887056949254]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Unique Customers' datatype='integer' name='[Calculation_1300695887105720334]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Customer ID])' />
      </column>
      <column caption='Total Repeat Customers' datatype='integer' name='[Calculation_1300695887106576400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1300695887069429772])' />
      </column>
      <column caption='Cancelled Orders' datatype='integer' name='[Calculation_1300695887107227666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Order Status] = &quot;Canceled&quot;&#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
      </column>
      <column caption=' Total Cancelled Orders' datatype='integer' name='[Calculation_1300695887107309587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1300695887107227666])' />
      </column>
      <column caption='Customer Refund Rate' datatype='real' name='[Calculation_1300695887107436564]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1300695887107227666]) / COUNT([Order ID])' />
      </column>
      <column caption='Normalized Total Revenue' datatype='real' name='[Calculation_1300695887110017045]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1300695887057018887] - WINDOW_MIN([Calculation_1300695887057018887])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057018887]) - WINDOW_MIN([Calculation_1300695887057018887]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normalized Order Frequency' datatype='real' name='[Calculation_1300695887110086678]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1300695887057096712] - WINDOW_MIN([Calculation_1300695887057096712])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057096712]) - WINDOW_MIN([Calculation_1300695887057096712]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normalized Refund Rate (Inverted)' datatype='real' name='[Calculation_1300695887112470552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - (([Calculation_1300695887107436564] - WINDOW_MIN([Calculation_1300695887107436564])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887107436564]) - WINDOW_MIN([Calculation_1300695887107436564])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normalized Customer Repeat Rate' datatype='real' name='[Calculation_1300695887114006557]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_1300695887057399819] - WINDOW_MIN([Calculation_1300695887057399819])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057399819]) - WINDOW_MIN([Calculation_1300695887057399819]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Final Ranking Indicator' datatype='real' name='[Calculation_1300695887116501023]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(0.167*[Calculation_1300695887099559949])+(0.167*[Calculation_1300695887110017045])+(0.167*[Calculation_1300695887110086678])+(0.222*[Calculation_1300695887112470552])+(0.222*[Calculation_1300695887114006557])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' hidden='true' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Order Day of Week]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Order Month]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Order Year]' role='dimension' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Shipment ID]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[Shipment Number]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Shipping Address Type]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Shipping City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[Shipping Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Shipping Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[Shipping State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='UrbanEdgeApparel' datatype='table' name='[__tableau_internal_object_id__].[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/diyak/AppData/Local/Temp/TableauTemp/#TableauTemp_0mtzfdu0dm9yp81ad2dac0n37xr2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/19/2024 05:17:53 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>0</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16966</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Status</remote-alias>
              <ordinal>1</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Day of Week</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Day of Week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Day of Week</remote-alias>
              <ordinal>3</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Month</remote-alias>
              <ordinal>4</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Order Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Year</remote-alias>
              <ordinal>5</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>6</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company ID</remote-alias>
              <ordinal>7</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1860</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>8</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>600</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Variant ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Variant ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Variant ID</remote-alias>
              <ordinal>9</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1461</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Unit Selling Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Product Unit Selling Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Unit Selling Price</remote-alias>
              <ordinal>10</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>264</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Product Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Quantity</remote-alias>
              <ordinal>11</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Selling Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total Selling Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Selling Price</remote-alias>
              <ordinal>12</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Payment Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Payment Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Payment Status</remote-alias>
              <ordinal>13</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipment ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Shipment ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipment ID</remote-alias>
              <ordinal>14</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16966</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipment Number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Shipment Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipment Number</remote-alias>
              <ordinal>15</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16966</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Address Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Shipping Address Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Address Type</remote-alias>
              <ordinal>16</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Shipping City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping City</remote-alias>
              <ordinal>17</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1629</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Shipping State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping State</remote-alias>
              <ordinal>18</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>120</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Postal Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Shipping Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Postal Code</remote-alias>
              <ordinal>19</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2339</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Shipping Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Country</remote-alias>
              <ordinal>20</ordinal>
              <family>UrbanEdgeApparel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='UrbanEdgeApparel' id='UrbanEdgeApparel_A3C5CE48BA14498ABDC3FED32D7E6372'>
            <properties context=''>
              <relation connection='excel-direct.0u7z61119w4n2s1b9z61a1waqk17' name='UrbanEdgeApparel' table='[UrbanEdgeApparel$]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:1' header='yes' lost='0' outcome='1' processed='89102'>
                  <column datatype='integer' name='Order ID' ordinal='0' />
                  <column datatype='string' name='Order Status' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Order Day of Week' ordinal='3' />
                  <column datatype='string' name='Order Month' ordinal='4' />
                  <column datatype='integer' name='Order Year' ordinal='5' />
                  <column datatype='string' name='Customer ID' ordinal='6' />
                  <column datatype='string' name='Company ID' ordinal='7' />
                  <column datatype='string' name='Product ID' ordinal='8' />
                  <column datatype='string' name='Product Variant ID' ordinal='9' />
                  <column datatype='real' name='Product Unit Selling Price' ordinal='10' />
                  <column datatype='integer' name='Product Quantity' ordinal='11' />
                  <column datatype='real' name='Total Selling Price' ordinal='12' />
                  <column datatype='string' name='Payment Status' ordinal='13' />
                  <column datatype='integer' name='Shipment ID' ordinal='14' />
                  <column datatype='integer' name='Shipment Number' ordinal='15' />
                  <column datatype='string' name='Shipping Address Type' ordinal='16' />
                  <column datatype='string' name='Shipping City' ordinal='17' />
                  <column datatype='string' name='Shipping State' ordinal='18' />
                  <column datatype='string' name='Shipping Postal Code' ordinal='19' />
                  <column datatype='string' name='Shipping Country' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='All Products Ranked'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Product Performance Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UrbanEdgeApparel (Copy of UrbanEdgeApparel Data)' name='federated.0qskgvq0czc2rs1fbl7no1j2bz3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0qskgvq0czc2rs1fbl7no1j2bz3z'>
            <column caption='Sales Volume' datatype='integer' name='[Calculation_1300695887056949254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Product Quantity])' />
            </column>
            <column caption='Total Revenue' datatype='real' name='[Calculation_1300695887057018887]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Selling Price])' />
            </column>
            <column caption='Order Frequency' datatype='integer' name='[Calculation_1300695887057096712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Order ID])' />
            </column>
            <column caption='Customer Repeat Rate' datatype='real' name='[Calculation_1300695887057399819]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1300695887106576400] / [Calculation_1300695887105720334]' />
            </column>
            <column caption='Repeat Customers' datatype='integer' name='[Calculation_1300695887069429772]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF { FIXED [Product ID], [Customer ID] : COUNT([Order ID]) } &gt; 1 &#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Normalized Sales Volume' datatype='real' name='[Calculation_1300695887099559949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887056949254] - WINDOW_MIN([Calculation_1300695887056949254])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887056949254]) - WINDOW_MIN([Calculation_1300695887056949254]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Unique Customers' datatype='integer' name='[Calculation_1300695887105720334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Customer ID])' />
            </column>
            <column caption='Total Repeat Customers' datatype='integer' name='[Calculation_1300695887106576400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887069429772])' />
            </column>
            <column caption='Cancelled Orders' datatype='integer' name='[Calculation_1300695887107227666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Order Status] = &quot;Canceled&quot;&#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Customer Refund Rate' datatype='real' name='[Calculation_1300695887107436564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887107227666]) / COUNT([Order ID])' />
            </column>
            <column caption='Normalized Total Revenue' datatype='real' name='[Calculation_1300695887110017045]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057018887] - WINDOW_MIN([Calculation_1300695887057018887])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057018887]) - WINDOW_MIN([Calculation_1300695887057018887]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Order Frequency' datatype='real' name='[Calculation_1300695887110086678]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057096712] - WINDOW_MIN([Calculation_1300695887057096712])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057096712]) - WINDOW_MIN([Calculation_1300695887057096712]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Refund Rate (Inverted)' datatype='real' name='[Calculation_1300695887112470552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - (([Calculation_1300695887107436564] - WINDOW_MIN([Calculation_1300695887107436564])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887107436564]) - WINDOW_MIN([Calculation_1300695887107436564])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Customer Repeat Rate' datatype='real' name='[Calculation_1300695887114006557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057399819] - WINDOW_MIN([Calculation_1300695887057399819])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057399819]) - WINDOW_MIN([Calculation_1300695887057399819]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Final Ranking Indicator' datatype='real' name='[Calculation_1300695887116501023]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(0.167*[Calculation_1300695887099559949])+(0.167*[Calculation_1300695887110017045])+(0.167*[Calculation_1300695887110086678])+(0.222*[Calculation_1300695887112470552])+(0.222*[Calculation_1300695887114006557])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Product Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Selling Price]' role='measure' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1300695887099559949]' derivation='User' name='[usr:Calculation_1300695887099559949:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110017045]' derivation='User' name='[usr:Calculation_1300695887110017045:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110086678]' derivation='User' name='[usr:Calculation_1300695887110086678:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887112470552]' derivation='User' name='[usr:Calculation_1300695887112470552:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887114006557]' derivation='User' name='[usr:Calculation_1300695887114006557:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887116501023]' derivation='User' name='[usr:Calculation_1300695887116501023:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887099559949]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887114006557]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110017045]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110086678]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887112470552]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Prod_1009&quot;</bucket>
              <bucket>&quot;Prod_1140&quot;</bucket>
              <bucket>&quot;Prod_1000&quot;</bucket>
              <bucket>&quot;Prod_2015&quot;</bucket>
              <bucket>&quot;Prod_2024&quot;</bucket>
              <bucket>&quot;Prod_5060&quot;</bucket>
              <bucket>&quot;Prod_2600&quot;</bucket>
              <bucket>&quot;Prod_7900&quot;</bucket>
              <bucket>&quot;Prod_5100&quot;</bucket>
              <bucket>&quot;Prod_3508&quot;</bucket>
              <bucket>&quot;Prod_7930&quot;</bucket>
              <bucket>&quot;Prod_7820&quot;</bucket>
              <bucket>&quot;Prod_3500&quot;</bucket>
              <bucket>&quot;Prod_5002&quot;</bucket>
              <bucket>&quot;Prod_7550&quot;</bucket>
              <bucket>&quot;Prod_1005&quot;</bucket>
              <bucket>&quot;Prod_5240&quot;</bucket>
              <bucket>&quot;Prod_3013&quot;</bucket>
              <bucket>&quot;Prod_9431&quot;</bucket>
              <bucket>&quot;Prod_5310&quot;</bucket>
              <bucket>&quot;Prod_53102&quot;</bucket>
              <bucket>&quot;Prod_6008&quot;</bucket>
              <bucket>&quot;Prod_73112&quot;</bucket>
              <bucket>&quot;Prod_73910&quot;</bucket>
              <bucket>&quot;Prod_86312&quot;</bucket>
              <bucket>&quot;Prod_5830&quot;</bucket>
              <bucket>&quot;Prod_62035&quot;</bucket>
              <bucket>&quot;Prod_3516&quot;</bucket>
              <bucket>&quot;Prod_3517&quot;</bucket>
              <bucket>&quot;Prod_6340&quot;</bucket>
              <bucket>&quot;Prod_5040&quot;</bucket>
              <bucket>&quot;Prod_53101&quot;</bucket>
              <bucket>&quot;Prod_1171&quot;</bucket>
              <bucket>&quot;Prod_5080&quot;</bucket>
              <bucket>&quot;Prod_7000&quot;</bucket>
              <bucket>&quot;Prod_10150&quot;</bucket>
              <bucket>&quot;Prod_6440&quot;</bucket>
              <bucket>&quot;Prod_7300&quot;</bucket>
              <bucket>&quot;Prod_2025&quot;</bucket>
              <bucket>&quot;Prod_4999&quot;</bucket>
              <bucket>&quot;Prod_5022&quot;</bucket>
              <bucket>&quot;Prod_9423&quot;</bucket>
              <bucket>&quot;Prod_3510&quot;</bucket>
              <bucket>&quot;Prod_5300&quot;</bucket>
              <bucket>&quot;Prod_7840&quot;</bucket>
              <bucket>&quot;Prod_5309&quot;</bucket>
              <bucket>&quot;Prod_4402&quot;</bucket>
              <bucket>&quot;Prod_30712&quot;</bucket>
              <bucket>&quot;Prod_5001&quot;</bucket>
              <bucket>&quot;Prod_5900&quot;</bucket>
              <bucket>&quot;Prod_8072&quot;</bucket>
              <bucket>&quot;Prod_5905&quot;</bucket>
              <bucket>&quot;Prod_1500&quot;</bucket>
              <bucket>&quot;Prod_3507&quot;</bucket>
              <bucket>&quot;Prod_70009&quot;</bucket>
              <bucket>&quot;Prod_32812&quot;</bucket>
              <bucket>&quot;Prod_1079&quot;</bucket>
              <bucket>&quot;Prod_5051&quot;</bucket>
              <bucket>&quot;Prod_1091&quot;</bucket>
              <bucket>&quot;Prod_8050&quot;</bucket>
              <bucket>&quot;Prod_73712&quot;</bucket>
              <bucket>&quot;Prod_4100&quot;</bucket>
              <bucket>&quot;Prod_5813&quot;</bucket>
              <bucket>&quot;Prod_60100&quot;</bucket>
              <bucket>&quot;Prod_3503&quot;</bucket>
              <bucket>&quot;Prod_8090&quot;</bucket>
              <bucket>&quot;Prod_10250&quot;</bucket>
              <bucket>&quot;Prod_4400&quot;</bucket>
              <bucket>&quot;Prod_2312&quot;</bucket>
              <bucket>&quot;Prod_2040&quot;</bucket>
              <bucket>&quot;Prod_34610&quot;</bucket>
              <bucket>&quot;Prod_1083&quot;</bucket>
              <bucket>&quot;Prod_78710&quot;</bucket>
              <bucket>&quot;Prod_7910&quot;</bucket>
              <bucket>&quot;Prod_64400&quot;</bucket>
              <bucket>&quot;Prod_2000&quot;</bucket>
              <bucket>&quot;Prod_5805&quot;</bucket>
              <bucket>&quot;Prod_5006&quot;</bucket>
              <bucket>&quot;Prod_7905&quot;</bucket>
              <bucket>&quot;Prod_5909&quot;</bucket>
              <bucket>&quot;Prod_2012&quot;</bucket>
              <bucket>&quot;Prod_5901&quot;</bucket>
              <bucket>&quot;Prod_1082&quot;</bucket>
              <bucket>&quot;Prod_53008&quot;</bucket>
              <bucket>&quot;Prod_6400&quot;</bucket>
              <bucket>&quot;Prod_1144&quot;</bucket>
              <bucket>&quot;Prod_3000&quot;</bucket>
              <bucket>&quot;Prod_9460&quot;</bucket>
              <bucket>&quot;Prod_2010&quot;</bucket>
              <bucket>&quot;Prod_9430&quot;</bucket>
              <bucket>&quot;Prod_53000&quot;</bucket>
              <bucket>&quot;Prod_6800&quot;</bucket>
              <bucket>&quot;Prod_7350&quot;</bucket>
              <bucket>&quot;Prod_5000&quot;</bucket>
              <bucket>&quot;Prod_6001&quot;</bucket>
              <bucket>&quot;Prod_5308&quot;</bucket>
              <bucket>&quot;Prod_5801&quot;</bucket>
              <bucket>&quot;Prod_5802&quot;</bucket>
              <bucket>&quot;Prod_5803&quot;</bucket>
              <bucket>&quot;Prod_6012&quot;</bucket>
              <bucket>&quot;Prod_1030&quot;</bucket>
              <bucket>&quot;Prod_7400&quot;</bucket>
              <bucket>&quot;Prod_5400&quot;</bucket>
              <bucket>&quot;Prod_53030&quot;</bucket>
              <bucket>&quot;Prod_53050&quot;</bucket>
              <bucket>&quot;Prod_1200&quot;</bucket>
              <bucket>&quot;Prod_6601&quot;</bucket>
              <bucket>&quot;Prod_7100&quot;</bucket>
              <bucket>&quot;Prod_4800&quot;</bucket>
              <bucket>&quot;Prod_6100&quot;</bucket>
              <bucket>&quot;Prod_5804&quot;</bucket>
              <bucket>&quot;Prod_3022&quot;</bucket>
              <bucket>&quot;Prod_3505&quot;</bucket>
              <bucket>&quot;Prod_3010&quot;</bucket>
              <bucket>&quot;Prod_7940&quot;</bucket>
              <bucket>&quot;Prod_3040&quot;</bucket>
              <bucket>&quot;Prod_94232&quot;</bucket>
              <bucket>&quot;Prod_3514&quot;</bucket>
              <bucket>&quot;Prod_5004&quot;</bucket>
              <bucket>&quot;Prod_1031&quot;</bucket>
              <bucket>&quot;Prod_5700&quot;</bucket>
              <bucket>&quot;Prod_48016&quot;</bucket>
              <bucket>&quot;Prod_1017&quot;</bucket>
              <bucket>&quot;Prod_2004&quot;</bucket>
              <bucket>&quot;Prod_5401&quot;</bucket>
              <bucket>&quot;Prod_8060&quot;</bucket>
              <bucket>&quot;Prod_53039&quot;</bucket>
              <bucket>&quot;Prod_1095&quot;</bucket>
              <bucket>&quot;Prod_3560&quot;</bucket>
              <bucket>&quot;Prod_6204&quot;</bucket>
              <bucket>&quot;Prod_53016&quot;</bucket>
              <bucket>&quot;Prod_6207&quot;</bucket>
              <bucket>&quot;Prod_1076&quot;</bucket>
              <bucket>&quot;Prod_3511&quot;</bucket>
              <bucket>&quot;Prod_79006&quot;</bucket>
              <bucket>&quot;Prod_40002&quot;</bucket>
              <bucket>&quot;Prod_7700&quot;</bucket>
              <bucket>&quot;Prod_7904&quot;</bucket>
              <bucket>&quot;Prod_2050&quot;</bucket>
              <bucket>&quot;Prod_6300&quot;</bucket>
              <bucket>&quot;Prod_1161&quot;</bucket>
              <bucket>&quot;Prod_9421&quot;</bucket>
              <bucket>&quot;Prod_2100&quot;</bucket>
              <bucket>&quot;Prod_7450&quot;</bucket>
              <bucket>&quot;Prod_1007&quot;</bucket>
              <bucket>&quot;Prod_5302&quot;</bucket>
              <bucket>&quot;Prod_2070&quot;</bucket>
              <bucket>&quot;Prod_6203&quot;</bucket>
              <bucket>&quot;Prod_3501&quot;</bucket>
              <bucket>&quot;Prod_1012&quot;</bucket>
              <bucket>&quot;Prod_6205&quot;</bucket>
              <bucket>&quot;Prod_5402&quot;</bucket>
              <bucket>&quot;Prod_73520&quot;</bucket>
              <bucket>&quot;Prod_83510&quot;</bucket>
              <bucket>&quot;Prod_7200&quot;</bucket>
              <bucket>&quot;Prod_30200&quot;</bucket>
              <bucket>&quot;Prod_53318&quot;</bucket>
              <bucket>&quot;Prod_5306&quot;</bucket>
              <bucket>&quot;Prod_11431&quot;</bucket>
              <bucket>&quot;Prod_1330&quot;</bucket>
              <bucket>&quot;Prod_2019&quot;</bucket>
              <bucket>&quot;Prod_54026&quot;</bucket>
              <bucket>&quot;Prod_87812&quot;</bucket>
              <bucket>&quot;Prod_1143&quot;</bucket>
              <bucket>&quot;Prod_8080&quot;</bucket>
              <bucket>&quot;Prod_6000&quot;</bucket>
              <bucket>&quot;Prod_5812&quot;</bucket>
              <bucket>&quot;Prod_4000&quot;</bucket>
              <bucket>&quot;Prod_7001&quot;</bucket>
              <bucket>&quot;Prod_5030&quot;</bucket>
              <bucket>&quot;Prod_2103&quot;</bucket>
              <bucket>&quot;Prod_1147&quot;</bucket>
              <bucket>&quot;Prod_7351&quot;</bucket>
              <bucket>&quot;Prod_1003&quot;</bucket>
              <bucket>&quot;Prod_6010&quot;</bucket>
              <bucket>&quot;Prod_1163&quot;</bucket>
              <bucket>&quot;Prod_7101&quot;</bucket>
              <bucket>&quot;Prod_10161&quot;</bucket>
              <bucket>&quot;Prod_6206&quot;</bucket>
              <bucket>&quot;Prod_4310&quot;</bucket>
              <bucket>&quot;Prod_7907&quot;</bucket>
              <bucket>&quot;Prod_8703&quot;</bucket>
              <bucket>&quot;Prod_5410&quot;</bucket>
              <bucket>&quot;Prod_50062&quot;</bucket>
              <bucket>&quot;Prod_7750&quot;</bucket>
              <bucket>&quot;Prod_4110&quot;</bucket>
              <bucket>&quot;Prod_52518&quot;</bucket>
              <bucket>&quot;Prod_94002&quot;</bucket>
              <bucket>&quot;Prod_1151&quot;</bucket>
              <bucket>&quot;Prod_94000&quot;</bucket>
              <bucket>&quot;Prod_2104&quot;</bucket>
              <bucket>&quot;Prod_10021&quot;</bucket>
              <bucket>&quot;Prod_94001&quot;</bucket>
              <bucket>&quot;Prod_2016&quot;</bucket>
              <bucket>&quot;Prod_1085&quot;</bucket>
              <bucket>&quot;Prod_53118&quot;</bucket>
              <bucket>&quot;Prod_5082&quot;</bucket>
              <bucket>&quot;Prod_4401&quot;</bucket>
              <bucket>&quot;Prod_2002&quot;</bucket>
              <bucket>&quot;Prod_5003&quot;</bucket>
              <bucket>&quot;Prod_13220&quot;</bucket>
              <bucket>&quot;Prod_94004&quot;</bucket>
              <bucket>&quot;Prod_11408&quot;</bucket>
              <bucket>&quot;Prod_6501&quot;</bucket>
              <bucket>&quot;Prod_9400&quot;</bucket>
              <bucket>&quot;Prod_3011&quot;</bucket>
              <bucket>&quot;Prod_74003&quot;</bucket>
              <bucket>&quot;Prod_3033&quot;</bucket>
              <bucket>&quot;Prod_94016&quot;</bucket>
              <bucket>&quot;Prod_1032&quot;</bucket>
              <bucket>&quot;Prod_1024&quot;</bucket>
              <bucket>&quot;Prod_6050&quot;</bucket>
              <bucket>&quot;Prod_2011&quot;</bucket>
              <bucket>&quot;Prod_10160&quot;</bucket>
              <bucket>&quot;Prod_2014&quot;</bucket>
              <bucket>&quot;Prod_94017&quot;</bucket>
              <bucket>&quot;Prod_8073&quot;</bucket>
              <bucket>&quot;Prod_94007&quot;</bucket>
              <bucket>&quot;Prod_3041&quot;</bucket>
              <bucket>&quot;Prod_1300&quot;</bucket>
              <bucket>&quot;Prod_5031&quot;</bucket>
              <bucket>&quot;Prod_1023&quot;</bucket>
              <bucket>&quot;Prod_80903&quot;</bucket>
              <bucket>&quot;Prod_73501&quot;</bucket>
              <bucket>&quot;Prod_94018&quot;</bucket>
              <bucket>&quot;Prod_2017&quot;</bucket>
              <bucket>&quot;Prod_3020&quot;</bucket>
              <bucket>&quot;Prod_94005&quot;</bucket>
              <bucket>&quot;Prod_8100&quot;</bucket>
              <bucket>&quot;Prod_5083&quot;</bucket>
              <bucket>&quot;Prod_3023&quot;</bucket>
              <bucket>&quot;Prod_4403&quot;</bucket>
              <bucket>&quot;Prod_1018&quot;</bucket>
              <bucket>&quot;Prod_9100&quot;</bucket>
              <bucket>&quot;Prod_80010&quot;</bucket>
              <bucket>&quot;Prod_3030&quot;</bucket>
              <bucket>&quot;Prod_1310&quot;</bucket>
              <bucket>&quot;Prod_70018&quot;</bucket>
              <bucket>&quot;Prod_8020&quot;</bucket>
              <bucket>&quot;Prod_7500&quot;</bucket>
              <bucket>&quot;Prod_2102&quot;</bucket>
              <bucket>&quot;Prod_99300&quot;</bucket>
              <bucket>&quot;Prod_94103&quot;</bucket>
              <bucket>&quot;Prod_8110&quot;</bucket>
              <bucket>&quot;Prod_30221&quot;</bucket>
              <bucket>&quot;Prod_94006&quot;</bucket>
              <bucket>&quot;Prod_94003&quot;</bucket>
              <bucket>&quot;Prod_6051&quot;</bucket>
              <bucket>&quot;Prod_4210&quot;</bucket>
              <bucket>&quot;Prod_1350&quot;</bucket>
              <bucket>&quot;Prod_14010&quot;</bucket>
              <bucket>&quot;Prod_7903&quot;</bucket>
              <bucket>&quot;Prod_14020&quot;</bucket>
              <bucket>&quot;Prod_10240&quot;</bucket>
              <bucket>&quot;Prod_1331&quot;</bucket>
              <bucket>&quot;Prod_6053&quot;</bucket>
              <bucket>&quot;Prod_80240&quot;</bucket>
              <bucket>&quot;Prod_9300&quot;</bucket>
              <bucket>&quot;Prod_8023&quot;</bucket>
              <bucket>&quot;Prod_2088&quot;</bucket>
              <bucket>&quot;Prod_40010&quot;</bucket>
              <bucket>&quot;Prod_2006&quot;</bucket>
              <bucket>&quot;Prod_1150&quot;</bucket>
              <bucket>&quot;Prod_10201&quot;</bucket>
              <bucket>&quot;Prod_94250&quot;</bucket>
              <bucket>&quot;Prod_30202&quot;</bucket>
              <bucket>&quot;Prod_1020&quot;</bucket>
              <bucket>&quot;Prod_1321&quot;</bucket>
              <bucket>&quot;Prod_2022&quot;</bucket>
              <bucket>&quot;Prod_8021&quot;</bucket>
              <bucket>&quot;Prod_11800&quot;</bucket>
              <bucket>&quot;Prod_5210&quot;</bucket>
              <bucket>&quot;Prod_62062&quot;</bucket>
              <bucket>&quot;Prod_8002&quot;</bucket>
              <bucket>&quot;Prod_3700&quot;</bucket>
              <bucket>&quot;Prod_1390&quot;</bucket>
              <bucket>&quot;Prod_20063&quot;</bucket>
              <bucket>&quot;Prod_74010&quot;</bucket>
              <bucket>&quot;Prod_1320&quot;</bucket>
              <bucket>&quot;Prod_10270&quot;</bucket>
              <bucket>&quot;Prod_1028&quot;</bucket>
              <bucket>&quot;Prod_1093&quot;</bucket>
              <bucket>&quot;Prod_13000&quot;</bucket>
              <bucket>&quot;Prod_75712&quot;</bucket>
              <bucket>&quot;Prod_143&quot;</bucket>
              <bucket>&quot;Prod_144&quot;</bucket>
              <bucket>&quot;Prod_7800&quot;</bucket>
              <bucket>&quot;Prod_1370&quot;</bucket>
              <bucket>&quot;Prod_88112&quot;</bucket>
              <bucket>&quot;Prod_86912&quot;</bucket>
              <bucket>&quot;Prod_100&quot;</bucket>
              <bucket>&quot;Prod_9450&quot;</bucket>
              <bucket>&quot;Prod_132&quot;</bucket>
              <bucket>&quot;Prod_136&quot;</bucket>
              <bucket>&quot;Prod_131&quot;</bucket>
              <bucket>&quot;Prod_113&quot;</bucket>
              <bucket>&quot;Prod_105&quot;</bucket>
              <bucket>&quot;Prod_1087&quot;</bucket>
              <bucket>&quot;Prod_74012&quot;</bucket>
              <bucket>&quot;Prod_7902&quot;</bucket>
              <bucket>&quot;Prod_53518&quot;</bucket>
              <bucket>&quot;Prod_9801&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' value='166' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</rows>
        <cols>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1106AC98-FBC2-48A7-94C6-A2E5C33DCB7F}' />
    </worksheet>
    <worksheet name='Top Products Rank'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1'>Product Performance Ranking: Top 10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UrbanEdgeApparel (Copy of UrbanEdgeApparel Data)' name='federated.0qskgvq0czc2rs1fbl7no1j2bz3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0qskgvq0czc2rs1fbl7no1j2bz3z'>
            <column caption='Sales Volume' datatype='integer' name='[Calculation_1300695887056949254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Product Quantity])' />
            </column>
            <column caption='Total Revenue' datatype='real' name='[Calculation_1300695887057018887]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Selling Price])' />
            </column>
            <column caption='Order Frequency' datatype='integer' name='[Calculation_1300695887057096712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Order ID])' />
            </column>
            <column caption='Customer Repeat Rate' datatype='real' name='[Calculation_1300695887057399819]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1300695887106576400] / [Calculation_1300695887105720334]' />
            </column>
            <column caption='Repeat Customers' datatype='integer' name='[Calculation_1300695887069429772]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF { FIXED [Product ID], [Customer ID] : COUNT([Order ID]) } &gt; 1 &#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Normalized Sales Volume' datatype='real' name='[Calculation_1300695887099559949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887056949254] - WINDOW_MIN([Calculation_1300695887056949254])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887056949254]) - WINDOW_MIN([Calculation_1300695887056949254]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Unique Customers' datatype='integer' name='[Calculation_1300695887105720334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Customer ID])' />
            </column>
            <column caption='Total Repeat Customers' datatype='integer' name='[Calculation_1300695887106576400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887069429772])' />
            </column>
            <column caption='Cancelled Orders' datatype='integer' name='[Calculation_1300695887107227666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Order Status] = &quot;Canceled&quot;&#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Customer Refund Rate' datatype='real' name='[Calculation_1300695887107436564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887107227666]) / COUNT([Order ID])' />
            </column>
            <column caption='Normalized Total Revenue' datatype='real' name='[Calculation_1300695887110017045]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057018887] - WINDOW_MIN([Calculation_1300695887057018887])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057018887]) - WINDOW_MIN([Calculation_1300695887057018887]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Order Frequency' datatype='real' name='[Calculation_1300695887110086678]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057096712] - WINDOW_MIN([Calculation_1300695887057096712])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057096712]) - WINDOW_MIN([Calculation_1300695887057096712]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Refund Rate (Inverted)' datatype='real' name='[Calculation_1300695887112470552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - (([Calculation_1300695887107436564] - WINDOW_MIN([Calculation_1300695887107436564])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887107436564]) - WINDOW_MIN([Calculation_1300695887107436564])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Customer Repeat Rate' datatype='real' name='[Calculation_1300695887114006557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057399819] - WINDOW_MIN([Calculation_1300695887057399819])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057399819]) - WINDOW_MIN([Calculation_1300695887057399819]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Final Ranking Indicator' datatype='real' name='[Calculation_1300695887116501023]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(0.167*[Calculation_1300695887099559949])+(0.167*[Calculation_1300695887110017045])+(0.167*[Calculation_1300695887110086678])+(0.222*[Calculation_1300695887112470552])+(0.222*[Calculation_1300695887114006557])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Product Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Selling Price]' role='measure' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1300695887099559949]' derivation='User' name='[usr:Calculation_1300695887099559949:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110017045]' derivation='User' name='[usr:Calculation_1300695887110017045:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110086678]' derivation='User' name='[usr:Calculation_1300695887110086678:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887112470552]' derivation='User' name='[usr:Calculation_1300695887112470552:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887114006557]' derivation='User' name='[usr:Calculation_1300695887114006557:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887116501023]' derivation='User' name='[usr:Calculation_1300695887116501023:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887099559949]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887114006557]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110017045]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110086678]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887112470552]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prod_1009&quot;</bucket>
              <bucket>&quot;Prod_1140&quot;</bucket>
              <bucket>&quot;Prod_1000&quot;</bucket>
              <bucket>&quot;Prod_2015&quot;</bucket>
              <bucket>&quot;Prod_2024&quot;</bucket>
              <bucket>&quot;Prod_5060&quot;</bucket>
              <bucket>&quot;Prod_2600&quot;</bucket>
              <bucket>&quot;Prod_7900&quot;</bucket>
              <bucket>&quot;Prod_5100&quot;</bucket>
              <bucket>&quot;Prod_3508&quot;</bucket>
              <bucket>&quot;Prod_7930&quot;</bucket>
              <bucket>&quot;Prod_7820&quot;</bucket>
              <bucket>&quot;Prod_3500&quot;</bucket>
              <bucket>&quot;Prod_5002&quot;</bucket>
              <bucket>&quot;Prod_7550&quot;</bucket>
              <bucket>&quot;Prod_1005&quot;</bucket>
              <bucket>&quot;Prod_5240&quot;</bucket>
              <bucket>&quot;Prod_3013&quot;</bucket>
              <bucket>&quot;Prod_9431&quot;</bucket>
              <bucket>&quot;Prod_5310&quot;</bucket>
              <bucket>&quot;Prod_53102&quot;</bucket>
              <bucket>&quot;Prod_6008&quot;</bucket>
              <bucket>&quot;Prod_73112&quot;</bucket>
              <bucket>&quot;Prod_73910&quot;</bucket>
              <bucket>&quot;Prod_86312&quot;</bucket>
              <bucket>&quot;Prod_5830&quot;</bucket>
              <bucket>&quot;Prod_62035&quot;</bucket>
              <bucket>&quot;Prod_3516&quot;</bucket>
              <bucket>&quot;Prod_3517&quot;</bucket>
              <bucket>&quot;Prod_6340&quot;</bucket>
              <bucket>&quot;Prod_5040&quot;</bucket>
              <bucket>&quot;Prod_53101&quot;</bucket>
              <bucket>&quot;Prod_1171&quot;</bucket>
              <bucket>&quot;Prod_5080&quot;</bucket>
              <bucket>&quot;Prod_7000&quot;</bucket>
              <bucket>&quot;Prod_10150&quot;</bucket>
              <bucket>&quot;Prod_6440&quot;</bucket>
              <bucket>&quot;Prod_7300&quot;</bucket>
              <bucket>&quot;Prod_2025&quot;</bucket>
              <bucket>&quot;Prod_4999&quot;</bucket>
              <bucket>&quot;Prod_5022&quot;</bucket>
              <bucket>&quot;Prod_9423&quot;</bucket>
              <bucket>&quot;Prod_3510&quot;</bucket>
              <bucket>&quot;Prod_5300&quot;</bucket>
              <bucket>&quot;Prod_7840&quot;</bucket>
              <bucket>&quot;Prod_5309&quot;</bucket>
              <bucket>&quot;Prod_4402&quot;</bucket>
              <bucket>&quot;Prod_30712&quot;</bucket>
              <bucket>&quot;Prod_5001&quot;</bucket>
              <bucket>&quot;Prod_5900&quot;</bucket>
              <bucket>&quot;Prod_8072&quot;</bucket>
              <bucket>&quot;Prod_5905&quot;</bucket>
              <bucket>&quot;Prod_1500&quot;</bucket>
              <bucket>&quot;Prod_3507&quot;</bucket>
              <bucket>&quot;Prod_70009&quot;</bucket>
              <bucket>&quot;Prod_32812&quot;</bucket>
              <bucket>&quot;Prod_1079&quot;</bucket>
              <bucket>&quot;Prod_5051&quot;</bucket>
              <bucket>&quot;Prod_1091&quot;</bucket>
              <bucket>&quot;Prod_8050&quot;</bucket>
              <bucket>&quot;Prod_73712&quot;</bucket>
              <bucket>&quot;Prod_4100&quot;</bucket>
              <bucket>&quot;Prod_5813&quot;</bucket>
              <bucket>&quot;Prod_60100&quot;</bucket>
              <bucket>&quot;Prod_3503&quot;</bucket>
              <bucket>&quot;Prod_8090&quot;</bucket>
              <bucket>&quot;Prod_10250&quot;</bucket>
              <bucket>&quot;Prod_4400&quot;</bucket>
              <bucket>&quot;Prod_2312&quot;</bucket>
              <bucket>&quot;Prod_2040&quot;</bucket>
              <bucket>&quot;Prod_34610&quot;</bucket>
              <bucket>&quot;Prod_1083&quot;</bucket>
              <bucket>&quot;Prod_78710&quot;</bucket>
              <bucket>&quot;Prod_7910&quot;</bucket>
              <bucket>&quot;Prod_64400&quot;</bucket>
              <bucket>&quot;Prod_2000&quot;</bucket>
              <bucket>&quot;Prod_5805&quot;</bucket>
              <bucket>&quot;Prod_5006&quot;</bucket>
              <bucket>&quot;Prod_7905&quot;</bucket>
              <bucket>&quot;Prod_5909&quot;</bucket>
              <bucket>&quot;Prod_2012&quot;</bucket>
              <bucket>&quot;Prod_5901&quot;</bucket>
              <bucket>&quot;Prod_1082&quot;</bucket>
              <bucket>&quot;Prod_53008&quot;</bucket>
              <bucket>&quot;Prod_6400&quot;</bucket>
              <bucket>&quot;Prod_1144&quot;</bucket>
              <bucket>&quot;Prod_3000&quot;</bucket>
              <bucket>&quot;Prod_9460&quot;</bucket>
              <bucket>&quot;Prod_2010&quot;</bucket>
              <bucket>&quot;Prod_9430&quot;</bucket>
              <bucket>&quot;Prod_53000&quot;</bucket>
              <bucket>&quot;Prod_6800&quot;</bucket>
              <bucket>&quot;Prod_7350&quot;</bucket>
              <bucket>&quot;Prod_5000&quot;</bucket>
              <bucket>&quot;Prod_6001&quot;</bucket>
              <bucket>&quot;Prod_5308&quot;</bucket>
              <bucket>&quot;Prod_5801&quot;</bucket>
              <bucket>&quot;Prod_5802&quot;</bucket>
              <bucket>&quot;Prod_5803&quot;</bucket>
              <bucket>&quot;Prod_6012&quot;</bucket>
              <bucket>&quot;Prod_1030&quot;</bucket>
              <bucket>&quot;Prod_7400&quot;</bucket>
              <bucket>&quot;Prod_5400&quot;</bucket>
              <bucket>&quot;Prod_53030&quot;</bucket>
              <bucket>&quot;Prod_53050&quot;</bucket>
              <bucket>&quot;Prod_1200&quot;</bucket>
              <bucket>&quot;Prod_6601&quot;</bucket>
              <bucket>&quot;Prod_7100&quot;</bucket>
              <bucket>&quot;Prod_4800&quot;</bucket>
              <bucket>&quot;Prod_6100&quot;</bucket>
              <bucket>&quot;Prod_5804&quot;</bucket>
              <bucket>&quot;Prod_3022&quot;</bucket>
              <bucket>&quot;Prod_3505&quot;</bucket>
              <bucket>&quot;Prod_3010&quot;</bucket>
              <bucket>&quot;Prod_7940&quot;</bucket>
              <bucket>&quot;Prod_3040&quot;</bucket>
              <bucket>&quot;Prod_94232&quot;</bucket>
              <bucket>&quot;Prod_3514&quot;</bucket>
              <bucket>&quot;Prod_5004&quot;</bucket>
              <bucket>&quot;Prod_1031&quot;</bucket>
              <bucket>&quot;Prod_5700&quot;</bucket>
              <bucket>&quot;Prod_48016&quot;</bucket>
              <bucket>&quot;Prod_1017&quot;</bucket>
              <bucket>&quot;Prod_2004&quot;</bucket>
              <bucket>&quot;Prod_5401&quot;</bucket>
              <bucket>&quot;Prod_8060&quot;</bucket>
              <bucket>&quot;Prod_53039&quot;</bucket>
              <bucket>&quot;Prod_1095&quot;</bucket>
              <bucket>&quot;Prod_3560&quot;</bucket>
              <bucket>&quot;Prod_6204&quot;</bucket>
              <bucket>&quot;Prod_53016&quot;</bucket>
              <bucket>&quot;Prod_6207&quot;</bucket>
              <bucket>&quot;Prod_1076&quot;</bucket>
              <bucket>&quot;Prod_3511&quot;</bucket>
              <bucket>&quot;Prod_79006&quot;</bucket>
              <bucket>&quot;Prod_40002&quot;</bucket>
              <bucket>&quot;Prod_7700&quot;</bucket>
              <bucket>&quot;Prod_7904&quot;</bucket>
              <bucket>&quot;Prod_2050&quot;</bucket>
              <bucket>&quot;Prod_6300&quot;</bucket>
              <bucket>&quot;Prod_1161&quot;</bucket>
              <bucket>&quot;Prod_9421&quot;</bucket>
              <bucket>&quot;Prod_2100&quot;</bucket>
              <bucket>&quot;Prod_7450&quot;</bucket>
              <bucket>&quot;Prod_1007&quot;</bucket>
              <bucket>&quot;Prod_5302&quot;</bucket>
              <bucket>&quot;Prod_2070&quot;</bucket>
              <bucket>&quot;Prod_6203&quot;</bucket>
              <bucket>&quot;Prod_3501&quot;</bucket>
              <bucket>&quot;Prod_1012&quot;</bucket>
              <bucket>&quot;Prod_6205&quot;</bucket>
              <bucket>&quot;Prod_5402&quot;</bucket>
              <bucket>&quot;Prod_73520&quot;</bucket>
              <bucket>&quot;Prod_83510&quot;</bucket>
              <bucket>&quot;Prod_7200&quot;</bucket>
              <bucket>&quot;Prod_30200&quot;</bucket>
              <bucket>&quot;Prod_53318&quot;</bucket>
              <bucket>&quot;Prod_5306&quot;</bucket>
              <bucket>&quot;Prod_11431&quot;</bucket>
              <bucket>&quot;Prod_1330&quot;</bucket>
              <bucket>&quot;Prod_2019&quot;</bucket>
              <bucket>&quot;Prod_54026&quot;</bucket>
              <bucket>&quot;Prod_87812&quot;</bucket>
              <bucket>&quot;Prod_1143&quot;</bucket>
              <bucket>&quot;Prod_8080&quot;</bucket>
              <bucket>&quot;Prod_6000&quot;</bucket>
              <bucket>&quot;Prod_5812&quot;</bucket>
              <bucket>&quot;Prod_4000&quot;</bucket>
              <bucket>&quot;Prod_7001&quot;</bucket>
              <bucket>&quot;Prod_5030&quot;</bucket>
              <bucket>&quot;Prod_2103&quot;</bucket>
              <bucket>&quot;Prod_1147&quot;</bucket>
              <bucket>&quot;Prod_7351&quot;</bucket>
              <bucket>&quot;Prod_1003&quot;</bucket>
              <bucket>&quot;Prod_6010&quot;</bucket>
              <bucket>&quot;Prod_1163&quot;</bucket>
              <bucket>&quot;Prod_7101&quot;</bucket>
              <bucket>&quot;Prod_10161&quot;</bucket>
              <bucket>&quot;Prod_6206&quot;</bucket>
              <bucket>&quot;Prod_4310&quot;</bucket>
              <bucket>&quot;Prod_7907&quot;</bucket>
              <bucket>&quot;Prod_8703&quot;</bucket>
              <bucket>&quot;Prod_5410&quot;</bucket>
              <bucket>&quot;Prod_50062&quot;</bucket>
              <bucket>&quot;Prod_7750&quot;</bucket>
              <bucket>&quot;Prod_4110&quot;</bucket>
              <bucket>&quot;Prod_52518&quot;</bucket>
              <bucket>&quot;Prod_94002&quot;</bucket>
              <bucket>&quot;Prod_1151&quot;</bucket>
              <bucket>&quot;Prod_94000&quot;</bucket>
              <bucket>&quot;Prod_2104&quot;</bucket>
              <bucket>&quot;Prod_10021&quot;</bucket>
              <bucket>&quot;Prod_94001&quot;</bucket>
              <bucket>&quot;Prod_2016&quot;</bucket>
              <bucket>&quot;Prod_1085&quot;</bucket>
              <bucket>&quot;Prod_53118&quot;</bucket>
              <bucket>&quot;Prod_5082&quot;</bucket>
              <bucket>&quot;Prod_4401&quot;</bucket>
              <bucket>&quot;Prod_2002&quot;</bucket>
              <bucket>&quot;Prod_5003&quot;</bucket>
              <bucket>&quot;Prod_13220&quot;</bucket>
              <bucket>&quot;Prod_94004&quot;</bucket>
              <bucket>&quot;Prod_11408&quot;</bucket>
              <bucket>&quot;Prod_6501&quot;</bucket>
              <bucket>&quot;Prod_9400&quot;</bucket>
              <bucket>&quot;Prod_3011&quot;</bucket>
              <bucket>&quot;Prod_74003&quot;</bucket>
              <bucket>&quot;Prod_3033&quot;</bucket>
              <bucket>&quot;Prod_94016&quot;</bucket>
              <bucket>&quot;Prod_1032&quot;</bucket>
              <bucket>&quot;Prod_1024&quot;</bucket>
              <bucket>&quot;Prod_6050&quot;</bucket>
              <bucket>&quot;Prod_2011&quot;</bucket>
              <bucket>&quot;Prod_10160&quot;</bucket>
              <bucket>&quot;Prod_2014&quot;</bucket>
              <bucket>&quot;Prod_94017&quot;</bucket>
              <bucket>&quot;Prod_8073&quot;</bucket>
              <bucket>&quot;Prod_94007&quot;</bucket>
              <bucket>&quot;Prod_3041&quot;</bucket>
              <bucket>&quot;Prod_1300&quot;</bucket>
              <bucket>&quot;Prod_5031&quot;</bucket>
              <bucket>&quot;Prod_1023&quot;</bucket>
              <bucket>&quot;Prod_80903&quot;</bucket>
              <bucket>&quot;Prod_73501&quot;</bucket>
              <bucket>&quot;Prod_94018&quot;</bucket>
              <bucket>&quot;Prod_2017&quot;</bucket>
              <bucket>&quot;Prod_3020&quot;</bucket>
              <bucket>&quot;Prod_94005&quot;</bucket>
              <bucket>&quot;Prod_8100&quot;</bucket>
              <bucket>&quot;Prod_5083&quot;</bucket>
              <bucket>&quot;Prod_3023&quot;</bucket>
              <bucket>&quot;Prod_4403&quot;</bucket>
              <bucket>&quot;Prod_1018&quot;</bucket>
              <bucket>&quot;Prod_9100&quot;</bucket>
              <bucket>&quot;Prod_80010&quot;</bucket>
              <bucket>&quot;Prod_3030&quot;</bucket>
              <bucket>&quot;Prod_1310&quot;</bucket>
              <bucket>&quot;Prod_70018&quot;</bucket>
              <bucket>&quot;Prod_8020&quot;</bucket>
              <bucket>&quot;Prod_7500&quot;</bucket>
              <bucket>&quot;Prod_2102&quot;</bucket>
              <bucket>&quot;Prod_99300&quot;</bucket>
              <bucket>&quot;Prod_94103&quot;</bucket>
              <bucket>&quot;Prod_8110&quot;</bucket>
              <bucket>&quot;Prod_30221&quot;</bucket>
              <bucket>&quot;Prod_94006&quot;</bucket>
              <bucket>&quot;Prod_94003&quot;</bucket>
              <bucket>&quot;Prod_6051&quot;</bucket>
              <bucket>&quot;Prod_4210&quot;</bucket>
              <bucket>&quot;Prod_1350&quot;</bucket>
              <bucket>&quot;Prod_14010&quot;</bucket>
              <bucket>&quot;Prod_7903&quot;</bucket>
              <bucket>&quot;Prod_14020&quot;</bucket>
              <bucket>&quot;Prod_10240&quot;</bucket>
              <bucket>&quot;Prod_1331&quot;</bucket>
              <bucket>&quot;Prod_6053&quot;</bucket>
              <bucket>&quot;Prod_80240&quot;</bucket>
              <bucket>&quot;Prod_9300&quot;</bucket>
              <bucket>&quot;Prod_8023&quot;</bucket>
              <bucket>&quot;Prod_2088&quot;</bucket>
              <bucket>&quot;Prod_40010&quot;</bucket>
              <bucket>&quot;Prod_2006&quot;</bucket>
              <bucket>&quot;Prod_1150&quot;</bucket>
              <bucket>&quot;Prod_10201&quot;</bucket>
              <bucket>&quot;Prod_94250&quot;</bucket>
              <bucket>&quot;Prod_30202&quot;</bucket>
              <bucket>&quot;Prod_1020&quot;</bucket>
              <bucket>&quot;Prod_1321&quot;</bucket>
              <bucket>&quot;Prod_2022&quot;</bucket>
              <bucket>&quot;Prod_8021&quot;</bucket>
              <bucket>&quot;Prod_11800&quot;</bucket>
              <bucket>&quot;Prod_5210&quot;</bucket>
              <bucket>&quot;Prod_62062&quot;</bucket>
              <bucket>&quot;Prod_8002&quot;</bucket>
              <bucket>&quot;Prod_3700&quot;</bucket>
              <bucket>&quot;Prod_1390&quot;</bucket>
              <bucket>&quot;Prod_20063&quot;</bucket>
              <bucket>&quot;Prod_74010&quot;</bucket>
              <bucket>&quot;Prod_1320&quot;</bucket>
              <bucket>&quot;Prod_10270&quot;</bucket>
              <bucket>&quot;Prod_1028&quot;</bucket>
              <bucket>&quot;Prod_1093&quot;</bucket>
              <bucket>&quot;Prod_13000&quot;</bucket>
              <bucket>&quot;Prod_75712&quot;</bucket>
              <bucket>&quot;Prod_143&quot;</bucket>
              <bucket>&quot;Prod_144&quot;</bucket>
              <bucket>&quot;Prod_7800&quot;</bucket>
              <bucket>&quot;Prod_1370&quot;</bucket>
              <bucket>&quot;Prod_88112&quot;</bucket>
              <bucket>&quot;Prod_86912&quot;</bucket>
              <bucket>&quot;Prod_100&quot;</bucket>
              <bucket>&quot;Prod_9450&quot;</bucket>
              <bucket>&quot;Prod_132&quot;</bucket>
              <bucket>&quot;Prod_136&quot;</bucket>
              <bucket>&quot;Prod_131&quot;</bucket>
              <bucket>&quot;Prod_113&quot;</bucket>
              <bucket>&quot;Prod_105&quot;</bucket>
              <bucket>&quot;Prod_1087&quot;</bucket>
              <bucket>&quot;Prod_74012&quot;</bucket>
              <bucket>&quot;Prod_7902&quot;</bucket>
              <bucket>&quot;Prod_53518&quot;</bucket>
              <bucket>&quot;Prod_9801&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' included-values='in-range'>
            <min>0.49399999999999999</min>
          </filter>
          <slices>
            <column>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</column>
            <column>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' value='170' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' num-steps='4' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' />
              <text column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</rows>
        <cols>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{012200E9-3229-484B-88AC-D03AADCB981A}' />
    </worksheet>
    <worksheet name='Worst 10 Products Ranked'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1'>Product Performance Ranking: Worst 10</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UrbanEdgeApparel (Copy of UrbanEdgeApparel Data)' name='federated.0qskgvq0czc2rs1fbl7no1j2bz3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0qskgvq0czc2rs1fbl7no1j2bz3z'>
            <column caption='Sales Volume' datatype='integer' name='[Calculation_1300695887056949254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Product Quantity])' />
            </column>
            <column caption='Total Revenue' datatype='real' name='[Calculation_1300695887057018887]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Selling Price])' />
            </column>
            <column caption='Order Frequency' datatype='integer' name='[Calculation_1300695887057096712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Order ID])' />
            </column>
            <column caption='Customer Repeat Rate' datatype='real' name='[Calculation_1300695887057399819]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1300695887106576400] / [Calculation_1300695887105720334]' />
            </column>
            <column caption='Repeat Customers' datatype='integer' name='[Calculation_1300695887069429772]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF { FIXED [Product ID], [Customer ID] : COUNT([Order ID]) } &gt; 1 &#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Normalized Sales Volume' datatype='real' name='[Calculation_1300695887099559949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887056949254] - WINDOW_MIN([Calculation_1300695887056949254])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887056949254]) - WINDOW_MIN([Calculation_1300695887056949254]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Unique Customers' datatype='integer' name='[Calculation_1300695887105720334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Customer ID])' />
            </column>
            <column caption='Total Repeat Customers' datatype='integer' name='[Calculation_1300695887106576400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887069429772])' />
            </column>
            <column caption='Cancelled Orders' datatype='integer' name='[Calculation_1300695887107227666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Order Status] = &quot;Canceled&quot;&#13;&#10;THEN 1 &#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Customer Refund Rate' datatype='real' name='[Calculation_1300695887107436564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1300695887107227666]) / COUNT([Order ID])' />
            </column>
            <column caption='Normalized Total Revenue' datatype='real' name='[Calculation_1300695887110017045]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057018887] - WINDOW_MIN([Calculation_1300695887057018887])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057018887]) - WINDOW_MIN([Calculation_1300695887057018887]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Order Frequency' datatype='real' name='[Calculation_1300695887110086678]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057096712] - WINDOW_MIN([Calculation_1300695887057096712])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057096712]) - WINDOW_MIN([Calculation_1300695887057096712]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Refund Rate (Inverted)' datatype='real' name='[Calculation_1300695887112470552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - (([Calculation_1300695887107436564] - WINDOW_MIN([Calculation_1300695887107436564])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887107436564]) - WINDOW_MIN([Calculation_1300695887107436564])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Customer Repeat Rate' datatype='real' name='[Calculation_1300695887114006557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_1300695887057399819] - WINDOW_MIN([Calculation_1300695887057399819])) / &#13;&#10;(WINDOW_MAX([Calculation_1300695887057399819]) - WINDOW_MIN([Calculation_1300695887057399819]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Final Ranking Indicator' datatype='real' name='[Calculation_1300695887116501023]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(0.167*[Calculation_1300695887099559949])+(0.167*[Calculation_1300695887110017045])+(0.167*[Calculation_1300695887110086678])+(0.222*[Calculation_1300695887112470552])+(0.222*[Calculation_1300695887114006557])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Product Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Selling Price]' role='measure' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1300695887099559949]' derivation='User' name='[usr:Calculation_1300695887099559949:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110017045]' derivation='User' name='[usr:Calculation_1300695887110017045:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887110086678]' derivation='User' name='[usr:Calculation_1300695887110086678:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887112470552]' derivation='User' name='[usr:Calculation_1300695887112470552:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887114006557]' derivation='User' name='[usr:Calculation_1300695887114006557:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1300695887116501023]' derivation='User' name='[usr:Calculation_1300695887116501023:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887099559949]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887114006557]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110017045]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887110086678]' ordering-type='Columns' />
              <table-calc field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Calculation_1300695887112470552]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887099559949:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110017045:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887110086678:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887112470552:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887114006557:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Product ID:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10021&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1003&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1005&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1007&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1009&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1012&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10150&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10160&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10161&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1017&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1018&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1020&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10201&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1023&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1024&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10240&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10250&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_10270&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1028&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1030&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1031&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1032&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1076&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1079&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1082&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1083&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1085&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1091&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1093&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1095&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1140&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_11408&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1143&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_11431&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1144&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1147&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1150&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1151&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1161&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1163&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1171&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_11800&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1200&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1300&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_13000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1310&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1320&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1321&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_13220&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1330&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1331&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1350&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1370&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1390&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_14010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_14020&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_143&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_144&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_1500&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2002&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2004&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2006&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_20063&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2011&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2012&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2014&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2015&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2016&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2017&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2019&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2022&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2024&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2025&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2040&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2050&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2070&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2088&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2102&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2103&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2104&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2312&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_2600&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3011&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3013&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3020&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_30200&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_30202&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3022&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_30221&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3023&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3030&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3033&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3040&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3041&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_30712&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_32812&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_34610&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3500&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3501&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3503&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3505&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3507&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3508&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3510&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3511&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3514&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3516&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3517&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3560&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_3700&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_40002&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_40010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4110&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4210&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4310&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4401&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4402&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4403&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4800&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_48016&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_4999&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5001&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5002&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5003&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5004&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5006&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_50062&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5022&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5030&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5031&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5040&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5051&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5060&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5080&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5082&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5083&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5210&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5240&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_52518&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5300&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53008&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53016&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5302&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53030&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53039&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53050&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5306&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5308&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5309&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5310&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53101&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53102&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53118&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_53318&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5401&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5402&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_54026&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5410&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5700&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5801&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5802&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5803&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5804&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5805&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5812&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5813&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5830&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5900&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5901&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5905&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_5909&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6001&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6008&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_60100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6012&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6050&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6051&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6053&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6203&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_62035&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6204&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6205&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6206&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_62062&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6207&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6300&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6340&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6440&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_64400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6501&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6601&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_6800&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_70009&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7001&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_70018&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7101&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7200&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7300&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_73112&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7350&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_73501&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7351&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_73520&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_73712&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_73910&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_74003&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_74010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7450&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7500&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7550&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_75712&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7700&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7750&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7800&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7820&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7840&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_78710&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7900&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_79006&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7903&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7904&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7905&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7907&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7910&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7930&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_7940&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_80010&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8002&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8020&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8021&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8023&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_80240&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8050&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8060&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8072&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8073&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8080&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8090&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_80903&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8110&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_83510&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_86312&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_86912&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_8703&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_87812&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_88112&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9100&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9300&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9400&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94000&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94001&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94002&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94003&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94004&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94005&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94006&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94007&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94016&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94017&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94018&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94103&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9421&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9423&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94232&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_94250&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9430&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9431&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9450&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_9460&quot;' />
                <groupfilter function='member' level='[none:Product ID:nk]' member='&quot;Prod_99300&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prod_1009&quot;</bucket>
              <bucket>&quot;Prod_1140&quot;</bucket>
              <bucket>&quot;Prod_1000&quot;</bucket>
              <bucket>&quot;Prod_2015&quot;</bucket>
              <bucket>&quot;Prod_2024&quot;</bucket>
              <bucket>&quot;Prod_5060&quot;</bucket>
              <bucket>&quot;Prod_2600&quot;</bucket>
              <bucket>&quot;Prod_7900&quot;</bucket>
              <bucket>&quot;Prod_5100&quot;</bucket>
              <bucket>&quot;Prod_3508&quot;</bucket>
              <bucket>&quot;Prod_7930&quot;</bucket>
              <bucket>&quot;Prod_7820&quot;</bucket>
              <bucket>&quot;Prod_3500&quot;</bucket>
              <bucket>&quot;Prod_5002&quot;</bucket>
              <bucket>&quot;Prod_7550&quot;</bucket>
              <bucket>&quot;Prod_1005&quot;</bucket>
              <bucket>&quot;Prod_5240&quot;</bucket>
              <bucket>&quot;Prod_3013&quot;</bucket>
              <bucket>&quot;Prod_9431&quot;</bucket>
              <bucket>&quot;Prod_5310&quot;</bucket>
              <bucket>&quot;Prod_53102&quot;</bucket>
              <bucket>&quot;Prod_6008&quot;</bucket>
              <bucket>&quot;Prod_73112&quot;</bucket>
              <bucket>&quot;Prod_73910&quot;</bucket>
              <bucket>&quot;Prod_86312&quot;</bucket>
              <bucket>&quot;Prod_5830&quot;</bucket>
              <bucket>&quot;Prod_62035&quot;</bucket>
              <bucket>&quot;Prod_3516&quot;</bucket>
              <bucket>&quot;Prod_3517&quot;</bucket>
              <bucket>&quot;Prod_6340&quot;</bucket>
              <bucket>&quot;Prod_5040&quot;</bucket>
              <bucket>&quot;Prod_53101&quot;</bucket>
              <bucket>&quot;Prod_1171&quot;</bucket>
              <bucket>&quot;Prod_5080&quot;</bucket>
              <bucket>&quot;Prod_7000&quot;</bucket>
              <bucket>&quot;Prod_10150&quot;</bucket>
              <bucket>&quot;Prod_6440&quot;</bucket>
              <bucket>&quot;Prod_7300&quot;</bucket>
              <bucket>&quot;Prod_2025&quot;</bucket>
              <bucket>&quot;Prod_4999&quot;</bucket>
              <bucket>&quot;Prod_5022&quot;</bucket>
              <bucket>&quot;Prod_9423&quot;</bucket>
              <bucket>&quot;Prod_3510&quot;</bucket>
              <bucket>&quot;Prod_5300&quot;</bucket>
              <bucket>&quot;Prod_7840&quot;</bucket>
              <bucket>&quot;Prod_5309&quot;</bucket>
              <bucket>&quot;Prod_4402&quot;</bucket>
              <bucket>&quot;Prod_30712&quot;</bucket>
              <bucket>&quot;Prod_5001&quot;</bucket>
              <bucket>&quot;Prod_5900&quot;</bucket>
              <bucket>&quot;Prod_8072&quot;</bucket>
              <bucket>&quot;Prod_5905&quot;</bucket>
              <bucket>&quot;Prod_1500&quot;</bucket>
              <bucket>&quot;Prod_3507&quot;</bucket>
              <bucket>&quot;Prod_70009&quot;</bucket>
              <bucket>&quot;Prod_32812&quot;</bucket>
              <bucket>&quot;Prod_1079&quot;</bucket>
              <bucket>&quot;Prod_5051&quot;</bucket>
              <bucket>&quot;Prod_1091&quot;</bucket>
              <bucket>&quot;Prod_8050&quot;</bucket>
              <bucket>&quot;Prod_73712&quot;</bucket>
              <bucket>&quot;Prod_4100&quot;</bucket>
              <bucket>&quot;Prod_5813&quot;</bucket>
              <bucket>&quot;Prod_60100&quot;</bucket>
              <bucket>&quot;Prod_3503&quot;</bucket>
              <bucket>&quot;Prod_8090&quot;</bucket>
              <bucket>&quot;Prod_10250&quot;</bucket>
              <bucket>&quot;Prod_4400&quot;</bucket>
              <bucket>&quot;Prod_2312&quot;</bucket>
              <bucket>&quot;Prod_2040&quot;</bucket>
              <bucket>&quot;Prod_34610&quot;</bucket>
              <bucket>&quot;Prod_1083&quot;</bucket>
              <bucket>&quot;Prod_78710&quot;</bucket>
              <bucket>&quot;Prod_7910&quot;</bucket>
              <bucket>&quot;Prod_64400&quot;</bucket>
              <bucket>&quot;Prod_2000&quot;</bucket>
              <bucket>&quot;Prod_5805&quot;</bucket>
              <bucket>&quot;Prod_5006&quot;</bucket>
              <bucket>&quot;Prod_7905&quot;</bucket>
              <bucket>&quot;Prod_5909&quot;</bucket>
              <bucket>&quot;Prod_2012&quot;</bucket>
              <bucket>&quot;Prod_5901&quot;</bucket>
              <bucket>&quot;Prod_1082&quot;</bucket>
              <bucket>&quot;Prod_53008&quot;</bucket>
              <bucket>&quot;Prod_6400&quot;</bucket>
              <bucket>&quot;Prod_1144&quot;</bucket>
              <bucket>&quot;Prod_3000&quot;</bucket>
              <bucket>&quot;Prod_9460&quot;</bucket>
              <bucket>&quot;Prod_2010&quot;</bucket>
              <bucket>&quot;Prod_9430&quot;</bucket>
              <bucket>&quot;Prod_53000&quot;</bucket>
              <bucket>&quot;Prod_6800&quot;</bucket>
              <bucket>&quot;Prod_7350&quot;</bucket>
              <bucket>&quot;Prod_5000&quot;</bucket>
              <bucket>&quot;Prod_6001&quot;</bucket>
              <bucket>&quot;Prod_5308&quot;</bucket>
              <bucket>&quot;Prod_5801&quot;</bucket>
              <bucket>&quot;Prod_5802&quot;</bucket>
              <bucket>&quot;Prod_5803&quot;</bucket>
              <bucket>&quot;Prod_6012&quot;</bucket>
              <bucket>&quot;Prod_1030&quot;</bucket>
              <bucket>&quot;Prod_7400&quot;</bucket>
              <bucket>&quot;Prod_5400&quot;</bucket>
              <bucket>&quot;Prod_53030&quot;</bucket>
              <bucket>&quot;Prod_53050&quot;</bucket>
              <bucket>&quot;Prod_1200&quot;</bucket>
              <bucket>&quot;Prod_6601&quot;</bucket>
              <bucket>&quot;Prod_7100&quot;</bucket>
              <bucket>&quot;Prod_4800&quot;</bucket>
              <bucket>&quot;Prod_6100&quot;</bucket>
              <bucket>&quot;Prod_5804&quot;</bucket>
              <bucket>&quot;Prod_3022&quot;</bucket>
              <bucket>&quot;Prod_3505&quot;</bucket>
              <bucket>&quot;Prod_3010&quot;</bucket>
              <bucket>&quot;Prod_7940&quot;</bucket>
              <bucket>&quot;Prod_3040&quot;</bucket>
              <bucket>&quot;Prod_94232&quot;</bucket>
              <bucket>&quot;Prod_3514&quot;</bucket>
              <bucket>&quot;Prod_5004&quot;</bucket>
              <bucket>&quot;Prod_1031&quot;</bucket>
              <bucket>&quot;Prod_5700&quot;</bucket>
              <bucket>&quot;Prod_48016&quot;</bucket>
              <bucket>&quot;Prod_1017&quot;</bucket>
              <bucket>&quot;Prod_2004&quot;</bucket>
              <bucket>&quot;Prod_5401&quot;</bucket>
              <bucket>&quot;Prod_8060&quot;</bucket>
              <bucket>&quot;Prod_53039&quot;</bucket>
              <bucket>&quot;Prod_1095&quot;</bucket>
              <bucket>&quot;Prod_3560&quot;</bucket>
              <bucket>&quot;Prod_6204&quot;</bucket>
              <bucket>&quot;Prod_53016&quot;</bucket>
              <bucket>&quot;Prod_6207&quot;</bucket>
              <bucket>&quot;Prod_1076&quot;</bucket>
              <bucket>&quot;Prod_3511&quot;</bucket>
              <bucket>&quot;Prod_79006&quot;</bucket>
              <bucket>&quot;Prod_40002&quot;</bucket>
              <bucket>&quot;Prod_7700&quot;</bucket>
              <bucket>&quot;Prod_7904&quot;</bucket>
              <bucket>&quot;Prod_2050&quot;</bucket>
              <bucket>&quot;Prod_6300&quot;</bucket>
              <bucket>&quot;Prod_1161&quot;</bucket>
              <bucket>&quot;Prod_9421&quot;</bucket>
              <bucket>&quot;Prod_2100&quot;</bucket>
              <bucket>&quot;Prod_7450&quot;</bucket>
              <bucket>&quot;Prod_1007&quot;</bucket>
              <bucket>&quot;Prod_5302&quot;</bucket>
              <bucket>&quot;Prod_2070&quot;</bucket>
              <bucket>&quot;Prod_6203&quot;</bucket>
              <bucket>&quot;Prod_3501&quot;</bucket>
              <bucket>&quot;Prod_1012&quot;</bucket>
              <bucket>&quot;Prod_6205&quot;</bucket>
              <bucket>&quot;Prod_5402&quot;</bucket>
              <bucket>&quot;Prod_73520&quot;</bucket>
              <bucket>&quot;Prod_83510&quot;</bucket>
              <bucket>&quot;Prod_7200&quot;</bucket>
              <bucket>&quot;Prod_30200&quot;</bucket>
              <bucket>&quot;Prod_53318&quot;</bucket>
              <bucket>&quot;Prod_5306&quot;</bucket>
              <bucket>&quot;Prod_11431&quot;</bucket>
              <bucket>&quot;Prod_1330&quot;</bucket>
              <bucket>&quot;Prod_2019&quot;</bucket>
              <bucket>&quot;Prod_54026&quot;</bucket>
              <bucket>&quot;Prod_87812&quot;</bucket>
              <bucket>&quot;Prod_1143&quot;</bucket>
              <bucket>&quot;Prod_8080&quot;</bucket>
              <bucket>&quot;Prod_6000&quot;</bucket>
              <bucket>&quot;Prod_5812&quot;</bucket>
              <bucket>&quot;Prod_4000&quot;</bucket>
              <bucket>&quot;Prod_7001&quot;</bucket>
              <bucket>&quot;Prod_5030&quot;</bucket>
              <bucket>&quot;Prod_2103&quot;</bucket>
              <bucket>&quot;Prod_1147&quot;</bucket>
              <bucket>&quot;Prod_7351&quot;</bucket>
              <bucket>&quot;Prod_1003&quot;</bucket>
              <bucket>&quot;Prod_6010&quot;</bucket>
              <bucket>&quot;Prod_1163&quot;</bucket>
              <bucket>&quot;Prod_7101&quot;</bucket>
              <bucket>&quot;Prod_10161&quot;</bucket>
              <bucket>&quot;Prod_6206&quot;</bucket>
              <bucket>&quot;Prod_4310&quot;</bucket>
              <bucket>&quot;Prod_7907&quot;</bucket>
              <bucket>&quot;Prod_8703&quot;</bucket>
              <bucket>&quot;Prod_5410&quot;</bucket>
              <bucket>&quot;Prod_50062&quot;</bucket>
              <bucket>&quot;Prod_7750&quot;</bucket>
              <bucket>&quot;Prod_4110&quot;</bucket>
              <bucket>&quot;Prod_52518&quot;</bucket>
              <bucket>&quot;Prod_94002&quot;</bucket>
              <bucket>&quot;Prod_1151&quot;</bucket>
              <bucket>&quot;Prod_94000&quot;</bucket>
              <bucket>&quot;Prod_2104&quot;</bucket>
              <bucket>&quot;Prod_10021&quot;</bucket>
              <bucket>&quot;Prod_94001&quot;</bucket>
              <bucket>&quot;Prod_2016&quot;</bucket>
              <bucket>&quot;Prod_1085&quot;</bucket>
              <bucket>&quot;Prod_53118&quot;</bucket>
              <bucket>&quot;Prod_5082&quot;</bucket>
              <bucket>&quot;Prod_4401&quot;</bucket>
              <bucket>&quot;Prod_2002&quot;</bucket>
              <bucket>&quot;Prod_5003&quot;</bucket>
              <bucket>&quot;Prod_13220&quot;</bucket>
              <bucket>&quot;Prod_94004&quot;</bucket>
              <bucket>&quot;Prod_11408&quot;</bucket>
              <bucket>&quot;Prod_6501&quot;</bucket>
              <bucket>&quot;Prod_9400&quot;</bucket>
              <bucket>&quot;Prod_3011&quot;</bucket>
              <bucket>&quot;Prod_74003&quot;</bucket>
              <bucket>&quot;Prod_3033&quot;</bucket>
              <bucket>&quot;Prod_94016&quot;</bucket>
              <bucket>&quot;Prod_1032&quot;</bucket>
              <bucket>&quot;Prod_1024&quot;</bucket>
              <bucket>&quot;Prod_6050&quot;</bucket>
              <bucket>&quot;Prod_2011&quot;</bucket>
              <bucket>&quot;Prod_10160&quot;</bucket>
              <bucket>&quot;Prod_2014&quot;</bucket>
              <bucket>&quot;Prod_94017&quot;</bucket>
              <bucket>&quot;Prod_8073&quot;</bucket>
              <bucket>&quot;Prod_94007&quot;</bucket>
              <bucket>&quot;Prod_3041&quot;</bucket>
              <bucket>&quot;Prod_1300&quot;</bucket>
              <bucket>&quot;Prod_5031&quot;</bucket>
              <bucket>&quot;Prod_1023&quot;</bucket>
              <bucket>&quot;Prod_80903&quot;</bucket>
              <bucket>&quot;Prod_73501&quot;</bucket>
              <bucket>&quot;Prod_94018&quot;</bucket>
              <bucket>&quot;Prod_2017&quot;</bucket>
              <bucket>&quot;Prod_3020&quot;</bucket>
              <bucket>&quot;Prod_94005&quot;</bucket>
              <bucket>&quot;Prod_8100&quot;</bucket>
              <bucket>&quot;Prod_5083&quot;</bucket>
              <bucket>&quot;Prod_3023&quot;</bucket>
              <bucket>&quot;Prod_4403&quot;</bucket>
              <bucket>&quot;Prod_1018&quot;</bucket>
              <bucket>&quot;Prod_9100&quot;</bucket>
              <bucket>&quot;Prod_80010&quot;</bucket>
              <bucket>&quot;Prod_3030&quot;</bucket>
              <bucket>&quot;Prod_1310&quot;</bucket>
              <bucket>&quot;Prod_70018&quot;</bucket>
              <bucket>&quot;Prod_8020&quot;</bucket>
              <bucket>&quot;Prod_7500&quot;</bucket>
              <bucket>&quot;Prod_2102&quot;</bucket>
              <bucket>&quot;Prod_99300&quot;</bucket>
              <bucket>&quot;Prod_94103&quot;</bucket>
              <bucket>&quot;Prod_8110&quot;</bucket>
              <bucket>&quot;Prod_30221&quot;</bucket>
              <bucket>&quot;Prod_94006&quot;</bucket>
              <bucket>&quot;Prod_94003&quot;</bucket>
              <bucket>&quot;Prod_6051&quot;</bucket>
              <bucket>&quot;Prod_4210&quot;</bucket>
              <bucket>&quot;Prod_1350&quot;</bucket>
              <bucket>&quot;Prod_14010&quot;</bucket>
              <bucket>&quot;Prod_7903&quot;</bucket>
              <bucket>&quot;Prod_14020&quot;</bucket>
              <bucket>&quot;Prod_10240&quot;</bucket>
              <bucket>&quot;Prod_1331&quot;</bucket>
              <bucket>&quot;Prod_6053&quot;</bucket>
              <bucket>&quot;Prod_80240&quot;</bucket>
              <bucket>&quot;Prod_9300&quot;</bucket>
              <bucket>&quot;Prod_8023&quot;</bucket>
              <bucket>&quot;Prod_2088&quot;</bucket>
              <bucket>&quot;Prod_40010&quot;</bucket>
              <bucket>&quot;Prod_2006&quot;</bucket>
              <bucket>&quot;Prod_1150&quot;</bucket>
              <bucket>&quot;Prod_10201&quot;</bucket>
              <bucket>&quot;Prod_94250&quot;</bucket>
              <bucket>&quot;Prod_30202&quot;</bucket>
              <bucket>&quot;Prod_1020&quot;</bucket>
              <bucket>&quot;Prod_1321&quot;</bucket>
              <bucket>&quot;Prod_2022&quot;</bucket>
              <bucket>&quot;Prod_8021&quot;</bucket>
              <bucket>&quot;Prod_11800&quot;</bucket>
              <bucket>&quot;Prod_5210&quot;</bucket>
              <bucket>&quot;Prod_62062&quot;</bucket>
              <bucket>&quot;Prod_8002&quot;</bucket>
              <bucket>&quot;Prod_3700&quot;</bucket>
              <bucket>&quot;Prod_1390&quot;</bucket>
              <bucket>&quot;Prod_20063&quot;</bucket>
              <bucket>&quot;Prod_74010&quot;</bucket>
              <bucket>&quot;Prod_1320&quot;</bucket>
              <bucket>&quot;Prod_10270&quot;</bucket>
              <bucket>&quot;Prod_1028&quot;</bucket>
              <bucket>&quot;Prod_1093&quot;</bucket>
              <bucket>&quot;Prod_13000&quot;</bucket>
              <bucket>&quot;Prod_75712&quot;</bucket>
              <bucket>&quot;Prod_143&quot;</bucket>
              <bucket>&quot;Prod_144&quot;</bucket>
              <bucket>&quot;Prod_7800&quot;</bucket>
              <bucket>&quot;Prod_1370&quot;</bucket>
              <bucket>&quot;Prod_88112&quot;</bucket>
              <bucket>&quot;Prod_86912&quot;</bucket>
              <bucket>&quot;Prod_100&quot;</bucket>
              <bucket>&quot;Prod_9450&quot;</bucket>
              <bucket>&quot;Prod_9801&quot;</bucket>
              <bucket>&quot;Prod_53518&quot;</bucket>
              <bucket>&quot;Prod_7902&quot;</bucket>
              <bucket>&quot;Prod_74012&quot;</bucket>
              <bucket>&quot;Prod_1087&quot;</bucket>
              <bucket>&quot;Prod_131&quot;</bucket>
              <bucket>&quot;Prod_113&quot;</bucket>
              <bucket>&quot;Prod_105&quot;</bucket>
              <bucket>&quot;Prod_136&quot;</bucket>
              <bucket>&quot;Prod_132&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]' value='152' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' num-steps='4' palette='purple_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' />
              <text column='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</rows>
        <cols>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D4ADEE40-ED67-4EEB-96E1-F9590F6844BD}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='All Products Ranked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{712D0AD7-C0CE-4738-9CEE-03B7FF698E41}' />
    </window>
    <window class='worksheet' name='Top Products Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1725B85-28BD-41ED-AB0B-E5761455ED60}' />
    </window>
    <window class='worksheet' name='Worst 10 Products Ranked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[usr:Calculation_1300695887116501023:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qskgvq0czc2rs1fbl7no1j2bz3z].[none:Product ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EAABB80-4668-44E6-84E7-8B864D5A8191}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='All Products Ranked' width='384'>
      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
      2tpKQEDATO/+rDGdTOD+/n6WLFlCYGAgbW1tuLm5zfAsZofp1LKvr4+5c+eyevVq8cv/Po+q
      ZXl5OS+88IKhic7S0pLNmzdTWlqKmZkZISEhsy8T+HHM3eeiKjjG//cv/0r+7S6kjB0Etnop
      /VN6J+My1Uxg0Qk8selkAotO4IlNp5Y9PT0kJyfz0UcfUVRUNNNTmDUmqqVEIsHNzY1jx47R
      2NhIcHAwAPv376ehoQGFQjEbM4GfMFFzN7799g/YtsiR0kYLdNpq+oa6qNPKcZnSOxmXqWYC
      35/FKnxtOpnAlpaW1NfXU1tbK27/3Gc6tfT19SUuLo7NmzfT3d0901OYNSaqpVarpba2ltde
      ew03Nzdu375NTEwMq1atwsPDA6VSOa1M4MfeAgKwdPLG7r5OYC9PbxwDI2jKOEmx2pNd62Px
      s9VyPDkP75AwaCnheNJl8vLyyKvrgZZ8rt/W01WTh5mDA0mHDiE1UZJX10O0j5Ljx07RYTmX
      HavmMNfXhsMnrrB+xy6cLEVu7aN4eXlx9OhRli5dip2dHUVFRURHR3P9+nUAYmNj8fb2NoxR
      KpXs27eP7u5umpubCQkJmeEZzA73ulczMzNJSEhgYGCArq4ugoKCSE1NJTg4mJCQEGQymWGM
      j48PxcXF6PV6YmJiRCfwXdOppaenJ1VVVVRVVbFixQqRVX3XRLXs7u7G19eXs2fPYm1tzdy5
      c7ly5Qp1dXWsW7cOhUJBcnIyAwMDLF26FLn8sQs9G4g+AEEQBCMlvr4IgiAYKZEJLAiCYKTE
      FYAgCIKReuxy0P2dTZRW1nCndxh7B1ukkse/WdPt2w89caLXamiqq0Jv7oRSDn3tjVTUNGNp
      54CJXk11WRkt3cM4ONgyomqntKIGE0s7zBVSetubaFfpsbFUPmKLxml4eJiysjLkcjnm5uYA
      6PV6bt68SW9vL7a2tmg0mnFjWlpaaGhowMHBQfzh8j5dXV3U1NRgaWlpWI54eHiYqqoqdDod
      FhYWdHd3G8bIZDJaWloMKVbC16Zay87OTm7evElraysmJiaGY1mYuJYqlYqqqiqkUinm5ubj
      aqnX66murmZgYABra2skkif8sr7rsSeAigt7KBr2RXLrMpU6b4JdH9+sseeLfcTFxo77WWNp
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Top Products Rank' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5xcZ2Hv/88p0/vslJ3tVauVtOpdlm25YzAYjKnG1ARC2g2QEMi9kIQA
      CU5uQi4JGIxNs6l2MAbj3qtsFaustCtt7zttp9dzzu+PlVxkybaMJMu/fd6vl19+eX3mzHOm
      PN8zT5UMwzAQBEEQFhz5jS6AIAiC8MYQASAIgrBAiQAQBEFYoEQACIIgLFAiAARBEBYoEQCC
      IAgLlAgAQRCEBUoEgCAIwgIlAkAQBGGBEgEgCIKwQIkAEARBWKBEAAiCICxQIgAEQRAWKBEA
      giAIC5QIAEEQhAVKBIAgCMICJQJAEARhgRIBIAiCsECJABAEQVigRAAIgiAsUCIABEEQFigR
      AIIgCAuUCABBEIQFSgSAIAjCAiUCQBAEYYESASAIgrBAiQAQBEFYoNQ3ugDCAje7F2K9fOmW
      3VQ97Zg7zuPj5zdS57OiAJCmUpjj8e9+i2zbxeTaL+bKLrAob3C5X7cR0rOz/P5fn8B10fnY
      V63g/OAbXSY48Ku/Y9zcTa/7Uj6w1kfQ+fKqoZIcpJIe5X/+5xHi2TLT6TJY/FjcAeq6N7Bh
      ZSNNES/e1/ze6ECc4aeeYPjpx4me/2UaahxsajiVV3YsjVJqltEHrudpaSPDyiL+9xVtxxwy
      B5VB7vnhXmJzMnUf+xCdTqi3vcanyBzCKEzwn/86Q+OWTha/YzUdgPlUX8opIAJAeGPlZyHW
      y8OPPkqlJoUj386V68LUeKzYZYASWjXNyPYHSGgdzHngik7gTRsAKcr5KXof2E5NWzeervm/
      6pUieqVAumxGVlWcTgsKIJ2hUsUPPMigrcr24Fbeudzz0v9pGGCUKcxNkxnro3ffXqLpEpPp
      MoY1gM0bYU6pp6UlgC94MgFgAHnmJvoY2f4Aw91fRDoDtaRezpEZfJL9lQA78FG5og2ZFz5S
      hl6Awih9O/cxFjXBB0+i8geoJCA/zPYHhsgHXQSA1lN/GaeECADh7NDUjSNdpvnhm9l+cSsx
      u5uL/G90oc6c7KGHSD7zY/700XOILOrkf//NRYSAk6l3ThujBIWHefyOp3nwp7vxf/1bbGpw
      c1mHEz07RmpijN233UU20cCO2QiNjW90gV+JgtXuYvm6jdx1d5HCgV0cYgM1QPjIEUZqDr13
      F31qHZO1YT7SADVvZJFPIxEAwtlBbiIQzLGuO8bUdALd5Gab379gOqksoUV4V72Ha4ONOP0+
      vJxFX07DgFSCfMFETAvT02CnpsaMDEhmD46ARMd5F1FuCCN5XvVsbzzVhFzXQI0yS2MmwXgS
      VCuEj6RtqVAgNjaMFDwfl63x7Ani0+Cs+YwJC5zUgL8myqpVMX4QnSOvpzDW+THe6HKdIZZA
      G5ZAG+9Z/kaX5DgMHTIpCiWFpB4iUmfDb58PAMxu7DVuWjef1ob7U0oyqUiRenzyOHXZSabS
      4Ifna/lSscDs5BiS34sjECHwRhb2NBMBIJw1rPVNBC9bQsvnnqKs9vPQWz7FMgt4j3dwJQ6F
      IX71XzdysG+ERwYzVExesPnZ9P7PsWVZkK0rwjiZYGz74zx2/beYeus3sLjcbOq7jlu3h9g7
      E+ALd/81PP4TeOi7fC9/IVIuQyTWS+9Mmazkwdz9Vi5YNMfiQJbbf/gQibJMtCzTfOUXWb2k
      iT++rA0raYrRcbbf8A3u74uyZzLDXBEUSxiTvZErP/8ZFjcFuKDBesJrzxy8j+SOn/LZ8XfT
      0tzEde9byuyD/8HIwR189qcjxxztAUK897p/ors1yAWhPId/+32Ge5/j/941SElXqegqdVs+
      xYb17Vx5xQrqFTBrWcgP88htv+Tgvl5+tX2GiupGU52ElApKG6jH65CWVajrIlxzL0tdj/CD
      f9/Eqp5GLBd1EbEqWOSX91TEd99BfO+d/OOvDpPMV8mUNBRbLd6GTta8/39x5TIXy2pNJ/4w
      aJMkxwd55PpvcV9/kr7ZAkXViX/xeQSXXMg/fGwFPruCDZ2pR7/PYF8v/+8Xu5irQF6TsPqW
      sGzbpay6/EquagP7i2s6yQH2LXQt3o45dYh7d8Zxd9pY67MDh0kmxtn+ODR9oBFP99EO4iKG
      XmTHf3+Bpwfi3LN/mlTJgsnXSM2SC/nAey9gcXuERc4TXdAkk3sP8uB/3Awf+Euc3ct5Rx1A
      Eshwyyf+EWPt+XD5NbwtAsbYM+z/6Wf5TXEtYyUPLZNPM5qsMpmpYl35fpbVFTm/M8X9t21n
      OpZjrKBQu/Va6hev5J8+tAwzGiYMhn/7FZ7ZO86tDx5itqRgWIPYms7lvddexsqVHSIAhLOI
      4kC2NtNct51UOUnfcJam+upxOhULZOOTxHqfZEILUgz52NRsAqoYGJT7H2PKsZLnAn421Oro
      WoVqMc/c0EFwhzisdhFeWourq4YAkNMqZMt5ioYbj89PZ2sN3vQsqUyV/sFBcg1hZtVmVm29
      gFwmSiY1zYHRKZIeGwnaCGIgqWbM4W46LB3YO6qUqwYUCxi5PMOHJjBpBhsaGjlRBBh6FaNa
      pFCuUqroAFhDi/BXTVxwQTugATozux8ijoMJmgg5THiNNIXh3QykLIxIHWw8vwVDB8MwKJUO
      oiVVtve3cFm7DaOQILb3MQaSCuNqBxvPX4qkWpFkM4XeIbJ2mDte4SQFzHVEOjpZfV6KdPYg
      6UOTPFwewO8P43Z7aWprJehUcZql+bJavciedlZsrKNU1alqBlIxQUWWmXr2IDORLsK1Nbw8
      bwzAIDW4j+jUJKOuFTSsqBLWNKpSmYquU55+it6JRdT7Jbo9SUb6MkyMmajftI12CUyALNsJ
      N/jwyMcZ6y5JgBW310241sfsdJR0rZ8KdtRcnFKuyHQuRK3TSsA3/+hyfIRKepwnp+xknR6W
      bOrGzPyPo0qln4GBdnIVmda14RN03hsYuka1WARNp2q88HcwqBSLUK5w9CevYeho5Twl3Ypm
      DtG5biuh3BzZYpo9B4ap2r1MS010rDHRmE7SHh1iJDtHcmCCBMtw52ZxFWbZPupgztzKinMb
      qWgSmmZQKUwTnZxkh9khAkA4i8g+sPSwesWPGI1luPHZOCtt0PSyWiJDYvQAO355C4ea/xrX
      qqV85uourIVe9LkhrvvEPzFoVOm39bAq8EIjUvK5R8h62siecxVXXRRhTYsXOzAKZAHs7dQu
      auWyt3XjV3aSGBjgm9feQmnl+xh1beFv/roFaeoJlLEHuOYfDxO3KIyxARdgtbrxrbqKSyJB
      nH43brNG4dBDFPbdwYfu2U8mUeDyrY0n1ZnoXno57qXw9xcDFIEyj3x5B8/Sxt1sY1mtnVpt
      mPSOX/J0YhtTzo189a9WYyOPjSIPfvUa9kar/PzRxWyqDVFNjLLvjh/yjPn9JAPn882/OBeH
      VMYhVbn7739FnxOePl5BJBUsXXRvUlm8vJnJf/42h55Kc8NP0yitG4i0L+bKD0TY1GTDaVaB
      Coq3DVOLjw9u68RuVvFaFCp9N9O3f5IvXPcQg6u8uJaeKAB0pp6+m+FYgd6WL/DBjX7Wt1gx
      VwbY/ds72Hn7z7l//5UsbarSvaSPnU9kmc0FOefbn2W1A5pMGoWZvSS1WuLa8QaMyYCFYDCE
      ta2ZoacGiTYYlAmhJMfIJnIcznbR5bfTWDv/iOLoDrKHH+WW4cVcsG0F73nXOSxxZsgc3sGe
      n1/HTdvrKB6u8Pa1YcycwqYVaz1Wz0ou+8Q6XPJhnPIYf3fut9ADGxm0b+WPPlZPSJ9EOfgT
      /vGmJPuGDjDGpTQk+3HMbOdnvfWsXdfBh96/gbBaoTrbx/id1/Ht/j4e6ddEAAhnn9o1m9EO
      RXHccBfTbcs56He99IBiP3PRPM/tX86Kd3dTv6QZtwKyvRVdruHtl9Vzn1bm988doHLOi6rc
      RRcSbF7Gn13cgt9hwnpMzWAPhHH7aghYFRTMSKoZEw58gSCelsj88Q4HBMPUGFO4NJ0qAAqU
      c1QP/Yo7fjNN3/gcs4UKeimDXkgRdy2iUZ8/9uT7NAxAY27fvWSHnuK/Jy9l6bolfOEtq2jw
      QGkkwYHn9jN8cJTDKQuffsyOjI6MTmY6QaEuSaYrRlVLkU3P8Nz2eto/uhz36lX4VFAkFVCx
      mcH8KsM3ZUcD2EK853MtFIt5stk5Rnbfx8TkIW7/6r+QuPa9LFrbw4VhFbk4iprcxQ03fJNE
      vkKsWMUoJigWrUQrPeR1A+24z5IDZhnon+XAwRH2Zz/Lv96m4rBISHqJfDpFfq5IKJaiscYO
      5jpCgQnm0jF+et1/crCjhZbaID1Ll+Bx2mh1gXKC67I1NqM4Ciy6fi9yp40D1W5aDh0knlMZ
      37iOBp+bLkUHSkyPjzO+7yDL3/K3LO1y0eVWMMkuvHUtrHv7ZTzy3TSTE30cYCuNQOik3+fj
      s3r8uIK1BKwKMipgwoQDq8uPr6UOh1XFopshGMajxvFpGlUgOT1BZd9OYr0P8cCAmd13OzBJ
      Bka1SDk1Q8zbjjlcIwJAOPuYvY04vBDRtpNNtzCaPKbhRC9Qqejk8k6cLjserxVVAhQbmHQC
      fgtK0iCbzGMY/hedN4wrEKHBb0Pm5U0DismMajJhkiVAAklGRsFkMmGxWpAl5msTsxkVUI5U
      50ZhjnJqlsGROIlchaJswmyWgTIYZiRpvknm9TD0KlpmnKnxKcb7oqj1W/DXNdAZcWFV8hS1
      KvlcHpQaTHYndssLX+ma5iVQ2wS1dixqlpJWJpe1ELY58fpcmGSefxVk6UjLyCuQFAsoFkKN
      LnStiF7JYsseQK0OI830MxtLYomXwJ8iHY0yOTBJuqpQlsBklpEkC4ZhQp1/dU8QhvMVbiGv
      USpK2JwOrFaJ+cuyYLa68YYaaaixEHRaQFYIt9WTk2QOV9IU41NEq3kOqVaCkRDF+gitPhPy
      cS5OcXhR9VrC1V7kUpqZnIZnNkqh6MVSF8FuNWOX5stULpXI5/I4/QEcDhW7KgEqstmCK+DH
      Wp1CzeXJw5GbglNDVk0oL/5MMv+ZVBUVq82CIoOMNP+ZlCRMR17USrlMKZfFsDpQLCYcVvN8
      s5TFgtXhwR2oxRXyiAAQzkKelfgiFt665js8PNvGsykTa0/BaYOhAP5w6NR/6MceJ3FoiP/8
      vZmLP/5O3n7xWi4LmWH8CRi8mytusbzuUxulNPnnfsA9j8Gdz0T44s/fQr1Fov6Yi6g776ME
      6zfxL1ecaFrxswy+7lK8nKxYkRUrrVvfhj30HJc8dDf7ZqfYuX+aj4V3sPPRXn5/yxA93/km
      XREX59VbUKZ+y+F9E/z9FyZxvOozWHHVdrPtE9/irW0yPYETDwje+vG/ZG02wZreHfTvOcjk
      8F5++JPrca2/Eu+51/CVSwJ4bcf5GeCoQzbZWFn/7+T0NnoPF6nuO0TK3knPisW4HdY373zD
      I+zn/iUXLo/wmcvbjts3IQJAOAvJWJxu2tet49FdCZJjSUY00I/eMlqacfuiLGrro3//ILGi
      iRVb6jCXx9GyUzz42AzZZhNLF7WiqvrpL261iqHrlC1OLDYLHruCVpolGZ0h1j9NpVL3uk6r
      z+1lbmqUH/8sSqFjM1s+tozFdrA/XyuZsdndtLY3c8/gfiZGCuzYdBUNDpmwTaZamCaVk4im
      ZFob/VisTuqbJ5mYnSDW20ApUotUzSBrOWJJyOpwnEZ5qBZh4CF2pnzsTXu4aGMbTrOMxyxR
      nj1ManKUfTNOzE4vgToPlMtomkoJFy6Pit2mIVdTzIxMMDk6QxIon/CqrUAt9U1mCuNpHrn7
      PjouXYrbWkezE6rFDFohw3jeg10tE7Gn6Z+RKWsqNW0bWR1czNLsHJ7SV+l1V3huZAZN83P8
      qeNOJFmhbZGFffIUBw4+jNTfiK29maXdFpyOo6FjIRAOI3W08p3HHqC+3MpQUzcN1iLF6BQj
      Dz7GuHs56UAzrYD7hNdWAZKkM0WqcxWo1clERyjMDXN4zsBdOHVNR+6aAIG2RUg/eIBJeRn3
      dYfYWG/DpRpQyZCIliiVDREAwtlIxmSxUdPSgeXJIYyJWaKATT8yVFvxY3PZqGsqcnB6hqLk
      Itptw1qcRMuMMzgjIbXYaI34UeT4GSiugiQrmMw6VItUc2mSxIknU0zHc2ja62v+qaRHycz0
      s31PirZOG/Vd9Zhyc1SRSCJjcTrAZKcmUo+8L0ohU2VgJo7iVjA7FSq5WRI5MxNzNhoiDswW
      B8G6KgPZOLmxSeIJC7KWRtaypAsGBfsJCqJrkBxiejLN3mkfS9o9eK0KulWiND1JIpYkbgRo
      d7oI+2yAiqyomMwqeilDKaeS1ovEYymSc1lK2DhxLJsAN/6wE3c2Q7z/AFOTPsZDVtwViWp+
      jmouyUzFgs9aJKImiUZlCpoFjy+CvcaOy+ujJWxjDIlisfgKzW8WQCIUsSEXM0THDzCVqKGu
      OUBnSMXy/LIUKg5vDdQ1UHyyn+S0yng0jN2RJzc7y8jgDEW3EyUQws+J1vyRkWRQzRXymRTl
      WIJk0iAdjZKLTzNXAtMpbDuyOL24w404k3sozLo5MB6lzeqiYtaRynNEoxrFsiwCQDhLWWug
      /Wq2tn2N+vguvvoodHbBIgACNPRspeFL9WT//Tv03vVdrv1WmrLJB3Y/W6/9N7YuD7FtlQMb
      idNf1s5z8ToG+ETkSzx40+/45Td0rN0XsTxcYnNjDZr0+uYz9z9yN4d2P0FfEfpu/jrc/HVu
      AOZnRoS55j+vY0lbK5dc8QU+XPkRA3v38p1PvZV8BYpVsPp6qF+xlq6L30aP7iPQuIwr/up/
      kbzxDnY+diNv/7aGJbQEc00HWyza/Eio41FM0LaW2pmn6Jm+iy9/dB+5kk6uAhZ3JzXNXWz6
      u//HFUu9LA6bgUtZsfZWfKXH+cofvYuiyQ/+ds7fGsRUchGg+goLo833znS97VPUjB1m7oYb
      ePTGX3PrbI5s1YTZE8biq+Odf/Elltaa6LZC/NEfcqB3gK/2TVGoKlRRcTVvYvX5S/nTy1fj
      OF7zz9Fnk2W6zrmQ/b/bC7/8KY8u/zQbWjv4iOOld/KunstxLr2Arw18lsf3PMRXbp5irmjB
      7GsmsPwqrv3gRSzprH++aevlkRPEW9PApova+Y87vsFzozl+ZWmgdf0a6pYspsUP1ldvF3vN
      5Pq1qPXL+fK1X2PngWe540s/4xe5ClXJgmqP0HLOlTR19YgAEN5g3jaQFD72Ti919X48HP2x
      LgEmansuxFLTxieX6NS0r8bfzJHOSztY6uk5/0oiy+ZoT5TQFBuYbDQtD9MUdhy5v/Pga1zO
      yqs+SXtXLdbjrC/kaV5F87ZP8nZPhJDv6G1wGKffwrZPXoV9dSvWo0scWELgWcnl17ZiCflp
      BmySC9zNLL/io7hTGpvzBmpNGyFnlUZ3lY+0hqgJ+vAAKmHs3qPnbcdy5LyWYAeelVfxwdYu
      fN75qW/h5Zejhnv4ZNexJbYCDpY3ugg6FZCd1C49B0twEde2x6hoUNVBtYVwh+uoafPgMCtI
      kgPZt4TVF6pEliZYkTVQHQEUm59GNUTZ2ULO78FzbIUpKeCoI7J4A4qnGVP7ZiqaQVkD1eLH
      5g3Q0Ook5FDnOySx4G1ehSTb+XA4Q1W2gc1HS5MdWZNZEtRp6wwTRAI81C45B0ny0dJuJXj0
      dTb5sQc6WHnpe/GvzZPIlSnrCorVgWp1sbjZSdBpgCnC4nPeQk1Xkkg8Q1WX0ZCxeBqItDTT
      4JNRXyl/JRmC6+ne0sIHvGvIh1dTV1eDjWMHCaggWanfdCWbuvIE12coVlUUqwd7uJ3uWjeB
      o6lmawDZylWfbCG0tJ5GQEUGVxjf8iu43JpgTaqMprrx1kVwBQM4ne9GbWjF7AGLDIavnuZt
      n+Qi5xLK9qNR5AdUzv/jqzA1N2P3gE0BZBd4VrLpbVk652SaAfeRrvbwiotZWZfG3pUkU9bR
      JQXZ5MTbuBh3IIRkvN7hCYIgCMKb2kJZa0sQBEE4hggAQRCEBUoEgCAIwgIlAkAQBGGBEgEg
      CIKwQIkAEARBWKBEAAiCICxQYiKYIAhnJ8MAqpRLOppmoNqtyIDyKquWnv0MDMNALxeoGCpV
      FBwWBSTpOBvJnF4iAARBODvpWcjt4rc37Wff7iTnf/OLNJmh5cQ7a75J6FSzM4zd9gVuzWzl
      4cIqbvvsahTp+EvWnU4iAAThOGZ2/5ZkpkCv+2JWN9hpqTnx6jVvmMxBZiZnefyRPjKcaIXN
      +f2DN797HQGfg/BrOzHZ2DQDjzxEru0iCLTySnu+F1PTzOy6gyHHRnL2Zt669MTrYb52ZYqZ
      BGOPPkrK2gIrO2gygyc3AjND/OShQQrlo1vKyEiKGbOrlsZFiwhEaukJvf4luE8/CdnswLv8
      PJqfzdE99ABPT62gzinT7jmzrfIiAAThOKZ3/obBqTi3NqzHZ1POzgBIH2Dm4D5uvf52xpnf
      S+vlmoAePBcsYfHJBED0ELtvvZ6Zi9uQFr9yAJRS04w8eD0PhOxEA95TFAAVipkEhx56hNSK
      Hli8Yf7Of2YYRh7kRzfdSyJ7NPIUZLMLR91KtlxhplvxneUBIKNY7PhXXUjLvp9TmL6fpyb/
      kpVhiXbPqz/6VBIBIAhvVrWXs+SyS/j2uX+Gzvyd+M7vfIhn/e9lv/tS/uvqBhRZAVRsbtub
      6suuHbqTmcPTfHfkrbzr8g4u2uR86QGtH2Rddwt/8kebCWklpMwMM8/+jNsf/iG//sX3mP7y
      9ayPmNjaeBYGNzBf9TawYtNyljQWufpHv4Nz2ljRtOLIkm9nrhSCILwZKRZUxYLbMr+OcJEC
      TgtYLFZUmwevz4cqv9l6TA3AID07SXouAfXrcLncBMzHNI0oVkxWJx6fD69WRrFKSG09tPVn
      KSST9PdP0GTyU2wMHFkV9mwjAQombw0qLYTnDiOlnIylwe0A9Qx1BohhoIIgnEUMQGdyoJ/Z
      qQkCm9cRDtZQ+0oPUcyYnCFCa97Dto2LePcGlR0P7WJwcIIUvMLmM288OdCI0rGW9amnsMeH
      eHYaCtqrP+5UEb8AhIVj+gmmx0e48WePE8uVyZY1qooNZ2QZroZVfOqDq/DZzTiP+2AD0MiM
      7iY9+BQ/uvMAsUyFZAmstT3465p45/veSpNTJmgx4LmbuPuQzM/3KFzWOk0+k2b3wSnyuhvF
      FWLxOz7G+e0uVtTZAY3CTB+58R3cfOsOpucKzBTB6q/HbHETkbwsvnwDzZuXsILXfzdbTU+S
      67uL2x85TN9okqlMCVQrKGa6L/tTlrb42LZi/o75qPTAw6SiQ/zjT7aTrMikKhLBDe+np6uO
      y87pwHvCO1Ud0Jl67EZ6D09z79PDJCsKusmLJbKGiy7fRHd3M10v2wQlA0xyqFdnMm2nc6sP
      t+u1VlMKgfZOrLYSdbceRl8bYrAKPkWjHBsgsf8ebn94kJHZLNECmGs6sHjrufaT7yVsk2lw
      yAz8+kv057zcyeX82YWNdNWqwBDbf34v/Y8/xwNL/4SLe0JcvbkRhQyJgf3sve1GJlf/OaZQ
      M1cHH+POO2Z55qk5uq9SiY3EmNg/SbSooNa0EFz3Dq7e0kBHxMn8YCY/4KZzSZwhS4w9B6K8
      I+ID85mpmkUACAuGXilQLWZJ54rkixVKFQ1NLpGcHSeVszCV6gHZjPM4wwwNA8jPkJyeYPDA
      EDOpPOmiRlmDamwMDI3egRi2FjeuoAVreozopMSegwpr/BWqxSKlcolCegItl2fvQIwlAROl
      iB1LKUZqdoKR3gHGY2mS+SolFMjFqOSy9E9k8GxYgu8PvH5D06jm0+TzebKFIuVyBaNaAslg
      eP8wXlUj0R0gZHrhMdVyiXIhT6lUnv+nXGX04EHcVoOxnhbsnuMngFHOQiXD4PAsEzNJsqUy
      xYqMVklTnhpgdKIdxeuno8OFxIuaIowK6ClSKTPZvI2A34zlNfXnzsei2eHA7vNiyx1ELxRI
      lUEjSiY2yaEDQ0zG08SzZcoaVJLTlApFegdiaBEHAYcLLTtJKpZn/1yUuU21lA0JczlGdHac
      w4PDDKuTzNRayQNOPUM+FWNk3zCpjgKOGg1KUWZHx+h/bhbfZY1k8kWKpTLFVJJKRSG2b4Lo
      8gCR5wPADJjx+iVQKszGMmjamesJFgEgLBgVUzPOpnqu+dIHqfWY8dok1Moenr71Lh6/5bvc
      s/cKuprsNC4+zoMNDe3gLTzxSJab7oRr/u+/0NngZWMAxn7/bxzuP8gX/+V2PvzJragXd81v
      XVnVoFjFv/mTdDT6+ZM6C4XHr2d4YISP372DtXUbWLTYT/Po7Tz78CQ33jzMpr//Ils76ri8
      3QXjv2d6cIjPfmaGSvYU7Ntk9kLwPN7yx9dwmd1Ni8uMlt+HUTzE5992CzOZrTy0cjGXv3hn
      8sAKnC3n8Hdf/AuU4gBKeYR//ug/kNHP5UbvMv7mPM9xN0HXo3swpp/km8+00rP8Qj7/V5sI
      qRX02ABjv/06390b4K6dGS74hwsw8aJ9dLUylBKkchGKupvWZnCeTEO1JIMsoTJFPp9mJgqV
      xP9wYHeMr/8S3v63n2Pb8jYurIWZx35E7MBjfOJfbuct71iB98MbaV2+lmhvEZ48RDTXzkwF
      GqcHmHEFObRoC1uHDuJb5uAQS1lW7COTTLGnfxObwn6au2SYhfnN34vYuj/Eys121oY9KH03
      sntnlH/65iOMXNSIY1GAmhcVOxSux0ipDI6OU67UcqKdhU81EQDCgiErBUqZSXY/+Gti2QrZ
      okZVTxAbmWBmrkpX1eCE++MZOtMDfeRM7ShrVtETclDvnL/79fcsp97uZultfWjxHgbiR/Yu
      Vu1gdRIK2qnxmlGQsVmt2Oy2l5w6driPuOYj3r2FdS1+WoLzM15RFRRVQeYUdWIaRRRtjH33
      Ps7YTJpYpoymzaFrafqqFVoMnSaNl2xo63C5Mfx+zDJIliCSyc6mtQH2yBL3DOZCi5UAACAA
      SURBVE9Q2nT8neSzyRiZgT5SQ/vYGXOSGbkbq2xgFNPkxiboN8coe8JkACcvqu4qFcikyeoG
      WUlGlkE6mYs3DNBBowar1YHfC/HdA6TKNpQ1W1lU76fbPf++uTu7UP0GS39yAGu8jsMxaKxt
      wjE+TWd8kGy6wERKxTc0ANYubB1r6K78DEltYWACOtOjZLJ5DnW0cYnDRv3zP4ZsgJfaeg9e
      szr/2tntmKw2rOTPqo5XEQDCAjBfo+lalmJmhuHdj9M3nWc6VaaIga5V0SsG7TonDADDMEhH
      Zyipi1FaFlHvMhO0zn/jHQ2NeEsV6nNPoGfzRI8OyJctYHbjdplx2k0ogGIyYTabXnxmctEZ
      ckYNuUgHLQEHjW7TfCUhyUjyqQoADfQS1cIsEwd30ds3zr7pPDoGGjplvZmAMR+AL34JLFYb
      ksM5v6+u7AbctDU7GJ6TiMbnqFarx322Ui5LOjpDIZkkFYPY6DFXUFvB6apSni/ZC3QNSmXK
      ukFZkZCkk7t2XdPQq1U02YNqtuByQDYRpVCtQ2lZRK3XQZ19/n2zhcOYvBXqcw+h5jJEc6DV
      BrHaU9QVZikUysSyVfKzs0im9dhqF9MQjTGrZhlPGJQTMYpFiXhtKzarBd/zBTUDdjw+O3aO
      VLJm8/x7z9k18kYEgLAAlIEsT/7k2wxM5jiw/ht85JwIWxa5satj7Ln9Vnb94hZGzvQ8/BeT
      ZVBVFKTTtBzAQSYP7+UXf3sLuSs/S/2FG/jXbQEUBlEY5yubb8D26icBoFQsoFUrmFQV6VVu
      z11v/Rqbl9bz+SvaUXgNlbnFCoEAfnUSWdfQNNBPIgFnD+5ltvdhhpa/m7V1YbpVSLy2h85T
      luILJFi3cSc7p2cYnpOxP5fBdY6Vdd0hVllbeLhq50B/gn2jz5A0N7B844cJeF3YKJzMM50V
      zqYwEoTTZH5RMa0Kui5js9kxmWRkqUouOk5qLs1sFvRXaGaXJAl/XSO2ahnt4G4G54pM5DVA
      Iz1wmOjhQQbdjcgeJ/UnNRFWwlkTxK5XMY/1M5wqMn7kvMVcjkImS4lj7pJfFw3DMKhWTJjM
      Fqx2M7JeoZRMMjc2ThLjuDOJNU1H0zRAR8tNU4ntY2dfiVjGTGtj6JhfMy+wudz4Iw1IQ3tI
      Dg+wa7pAtqKj6xp6JUsqliA6GSfPfIv5Cy+HAiY7NksKk5wgFodS6VUuTa+iFeeYG3qMvQcm
      eeKARveqLurrgtgBf20dDpMJ7eBuRmNphrPzr29ubIz4vn0Muhspu73Uu0GVVaxWB3X1ETLZ
      USamDzE5V49JdhDxSJhCYSSKVMZ3MzZmJZ1x09Rgw2r5w2I7k55DQifg96IqZ65aFgEgLAA6
      8wFgYOgKDqcLs1lBoUpuZpREfI7pDGiv1M8qyQSaWrFVSmj7d9AfLzB2pKJO9fcxe7Cfw95W
      FK+bRu/Jlc4TqsVhVLAOH+Bwosho7kgAZHPkUqc4AKpmTBYLNocFVa9QTCRIDo8R148fALqu
      o1WPBsAklehzPN1bJJoy0dkWwXKC4Yp2t5dAQzNS/w5ih/vYPlUgU9bRDQ29kiEVTTA7EaXA
      MQGgmMDswmaZwyzHicah+BoCoFqYI3n4QXbuHePBPVWWb1xGU1MYF1BT34TLZELbv4PhmRQD
      RwIgOzJEbOdODntbKXv9NPlAkc3Y7C4amxtIZYYZmTjI+FwzJsVFvRfMkXokClRGn2V4yEoq
      46WtxY7N9ocFQDqVRDI0woEaFOXM/RQVTUDCAmADLKy76Dz8/Qe4+/r38TWTF83soueCLZhn
      qnj9UH2l2yFJQen5I7aZnqQrdB/f/cYfc0e2SroM5sBi/HU9fP5r76cnbKX5JEunrPwwG/TH
      8RXv4KavfZxfllR0k5+uxR5sJsuR8v+huglGZN710VpueuTfePAXFX5jb6VlRQ313T7cwEuG
      5Kt28C6hsOsHxJ79Pld+PUVFtlGVrXS/88us7Irwtg02PCaJXPLlzyZHVkGoky9+8D/pHd7N
      /V/+PXdWdDTJhGoNUrf6YsJtS/j8umMrITewhJ5VMq54lt8fiLLG4QLvMWNzh3/KM30an7jT
      gmzIyGYHlkg3qzddyxUf7OLKHgXTkXpU6f4gy529/LPyS37xy//DY/9V4LoSqN5WLO5FfP5r
      76fdb6aNI6txuj34lq+m/q57iA5XuWv9n9Hp8tKGBLXLCOkPsHLgDu6yvosOzyLeEgC3DBy/
      O+RVzAJz7NsdRFsbZu2KWqzWM3dfLgJAWADmp93bwp0EqxbWr1XI4qSi2GlvbsHq0rGH7VRr
      LTS45h/haVlNnSfD+ho7Qac6PxLF7MIZaKBu0XJ6Jhwkc1VSZbAEu/CG6mgPO/DaJVQJCCyh
      qcPOBboLn1l9YXKVpwl7xM4F6wO0hV3YAUm2YPPVEmhfzvJynHRJoiI5CLvn0CsaJY8L1XKi
      CWovkM1WAksuoMvZgdVhP6bZ3ITZ4SeweC3LCtPYZ4pUTREi7TUE67yEt8m4lrYStINZtiI7
      QzSv3oi5kiFVLjLuyaGpdjTZRvfiBtoiHtwWGQUw2bwEllzAEk8Tadd8WEmKFRSF+sXLqThj
      JJUwyZJGFRXF4iPYFsFf50Hl2GaI+Z4CX7iGpJYhPTRGZnEzWazz128PQGAJW7dUyRQqzz9G
      NtuxhDpZ3N5IU2MQp/mFq5dMDmyeMHWLlrMk6cMTz5MogtnXjNldS3vYQcAivVAZmpxI3k6W
      rkxir6sSXxKhrsaOSQIUP/66Dro3bGbOupi6tnq8CpjmnwjszbQs9bG+XCAAL7xntno8dQ7W
      X+CnKeB8fk6HkU9iFMcYkZsJ2QK0+RVMZ7BdRjKMEw58EwThdDMMyE+TKqokChbCtU5MsoFJ
      LzH96PcYGhzmM09u5OPvW8UVFy0ixNm4rs2pVz34E/oPzfBXNzm55s+3sWnbIjre6EKdBtrI
      fRgzz3Lp91q46LxOPnbNGmoQi8EJwsJRGmJkZx9P3LeDA6kKRc3AQEKy+LB6GvnEx85lbav7
      D54J/GaiNG0lYAxwVe33Sc+2c99zDXSsOP6cgzenKhCj/7l+hh/bxforrqWr1YGPM7spjOgE
      FoQ3miyDoWFUCuSzGbKZDOlMjpLqR/Y0sKwzSNhrw8zCuPsHkOwhbN4w3c0yUj7N7NAMWQ3K
      Z/PKbq+ZgaFVKCVGmE4U6I9bWdQWJBJwnfH3WDQBCYJwdtIykNvFbf+/2xJSo5I5zpaQ8uma
      A3JiIgAEQTg76RWoxhjqT5KMl4lsWolTAdcbOWHvlNDRy0Wyw9sZrtQyVa3houUB5DdgU3gR
      AIIgCAuU6AMQBEFYoE56FFA+nyedTp+OsgiCIAhn0EkHQDabZXx8/HSURRAEQTiDTroPQNO0
      I4tDCQvJw794kGfu2v5GF0MQhFPopH8BKIpyRhcrEs4OWkWnkH7zLXcrCMKJiU5gQRCEBUoE
      gCAIwgIlAkAQBGGBEgEgCIKwQIkAEARBWKBO43LQBoZuYBg6hjG/K+sLJCTphX8AXmVv6VNT
      IsMAQ0dHwkBClV/fk86PnDUwDIPnB9HKCjLHuQ7DwMDA0F/0Orzo2uUXP+D5Y4/8e/5gJFlC
      OvLv+b8cvZZjX98XHSsdeZ7XdYWCILweR+szJDBeaZPpVzrH899zCePIN/tE55IkCaTXcyyA
      cToDYJRDD93Dk9+/npuHIFE+8mfFimrz0Xnup7jowi62bumgRTkzS6CWY4NM3/klvjm7jV3V
      JTz4hc2v6zyVeB/To4d5bvtDPPDAXtJyiIZP/5i3d8KayDEHZ3czsGsXd3zvxzw0kme2bEGt
      Xc+WK97K0vVr+FDPi3YQ18aY6t3Nkz+6kdueizKSMtAc7fRcdiVt6zbzuQsiR/a2Ai36FIP7
      9nDrTT/jqdE8s3kZnB0su/TttK0/h89tq0XmzK4tLggLlcVuweFxsvzc5dR3NFBTH+CBm+8j
      PhljamjqNZ3D5rLjCXi47KNvoaauBk/QS3wyRnwyzm+v/w2FTIFSYX6DZJPVjM1p45JrLyXU
      FKa2tZZMIkMqluLO7/2WVHSOTDIDgKzImMwmznvPNiJtEdpWtFMqlMin8mdmQ5iGtZfT6PCy
      NAiGUUSrVklOPc3ssML9dg8fWR1AVt4M96ppIM2eR/aSLGSYczThsh9E4XiLlFeAMkPbn2Bo
      LMVM6FzWddsxqSDnk+QSYxx8WGJ88fk4ZQOvYhDb9zijQ7PsNpbQfb6bZSYFSzlBqjxN4olH
      OLD2vQTMeSLWHL2P7mBsNkOh41I296jz+59WchSMWQpPP8DeFe8jaJVodIhWPkE4baT5uVF1
      7XW4/G5KhRKxyRiF3MnNmVFUBU/AQ1N3E9GxWeJTcaqVKmarGV3TaV7SwtTAJNHxKAAur5NI
      ez25dI7x/lGG9g1iMpkwMGjqbmJMgnw2j1bRsLvtBOqCACSmE0THZ+fncknSmQmAtguupb61
      g4+uAK00Ti4+yq++8FmeO+DgvkSED62swfSmCIA5YJgnfvMkBa8P84Xr8LoexqXpZF92bBnI
      cuC+33O42sBY0yf583e0ssiXhx3Xc8PvBnhw7zCDHz2fetXAq+hMPX0n/bM2Huct/PWVW1jR
      bCYweRs3/+ggDz3wJDs/9F66XTki1kmeveNhpk315C7/LFdvDtDl12D6Xu74yTM8ce/9PPH2
      97DcL9PoeFnBBEE4RWRJRjWrNC9txRf2MbxviHwmf9LNP4pJwR/x07V2MXsf3UNiKs7EoQk6
      VncSaAiweH03pXyJ+GQcAG/Ix6I1i4iOzZKYTtC3/SCRtgj+SA1rLl5LIVuYD6JKAZfPRWtP
      KwYGs6Mz7LxvB+4aN+4az5nfElI21+LwWnnnuzaR7DXx5J5eJvSl+JHfBFve1QFBPnzdUgy5
      hGTN8fAOG5Nx7eUBkBuHzD4e3bcItWMR73jPElr8Kh6TDTZdw6bBH+FLPMq9T3+OLY1x2jtn
      efJhg5Q/wmXXXMKieishOyit72Tjuu9TL+3mxvsPQfMM6xeP0ZdYjNLcwkWXRAhb5PlfAJFL
      WLN2knplL1998ADq8gDnRurO/MskCAuEruuUCiWeuuMJZEWmWq4SagrhDZ5cbVbbUovVYSUd
      SzHSO0wmkUHTNEZ6h0lMx6nvaMDqsOIOzDcZ2912VLPKwO7DzEXn0DSN6eFp0vE0rT2tqCaV
      YGOI6OgsLp+bmvoAz979DMmZJJVSheRMknz6DDUBvZgkqciKCZfLhipL6OUyVSCfmkafPsS0
      rRtFlmlUphifqZItyYR6evCoZdxqhen+fjLFMrFcGQ0F2WTH5m+gPuTC47RgkQGjCkaV+HA/
      6XyJ6VQRDYVqZob8ZJFURQfT6ym9Cqh4gjYgB1Qwy9Lxh1KVCpCOEVN8eG1ean0WrCZQZMAW
      wO1UCLgKPJvIkfWkIZ8gkXNQ9blpqnNgs4IqGyC7cbushGpMxGMpsqEyVcWMSS5i6EUymQpV
      1YyhyMiyGbvdit9nJzWWIJuxUQTMiOFegnDaGFDMFZ//T6168mulmW0WMCCfyVMulqlWqgCU
      i2WKueLz5zdbzRiGgSRLVEoVivki5eJ8B2u1UqVcLJOdy6LrOhabBUVVkJT5gSGFbOH58+ia
      TqVcOXs2hZ8beJr47V/hV/XfwGkz8Qn7rfz4N2kOzFh5+/X/zSp3luWuOZ7+8b+ydyzO/Ydi
      5LBj8TXTsvWjvP9tS1ndHaZWBvQCGFn2//pb7BqY5tc7J8lhR1EVwh6JREsJpf40X1AuC9OT
      TISaMAXDNFthfic7BfDhdNkIBBUmZ6KkHDMQmGSq3IDDHKGlCWwAR7p8HU43eiBActcsmQ4r
      pUAjdY6fEs1XePrJGN2bAwRCZszVAmaLHbu3lvxj46Q7HcSBECIABOFsZrFaqFY0EjPJlwSI
      rumUi2WSM0mqlSpWhw1d19F1g3Q8TblYfsnxWlV7vp/A5rShmFQMA0qFEqV8iUqx/KJzn9ZR
      QMenV6IU0lM8eu9uYtYLCS7rJixLpIE4UOy7i6S5lp/Xb2HF1XVcHPDSEdKoHHyCQ4fu53eV
      jUTWBPncHzfjJk4+OsOee3/AM0++l11Tq/i7S+pIH95O+tAD3DzSQU3TZv7sPR0ETBJSZprk
      Uz/h17qZ4TN94cdwuNz4g7XE4ynyheKrHOvCHAxDYo5SsZWUvIjzP7CN0dEZ7r33n/nu/RKG
      rKCafXjlWZxSEjQNQ9cR67YKwtlPNc9XxeVi+Tj9BxKKKmOxWag6qxRzRSQDquUKxy7mbGCg
      azo2hw2L/cgvAElC0zR0TUfX9ZccfUYCoJCYYs5uYmQE9GqUQmqGgagEHU6amoPYJImjVWAl
      l6SkeclYW6jvamdxiw+/qcBIcoqZA70kHBfS2tjC6vXLCDBJeqSXzAMTPDITJa4nqBAkm5gk
      fmgPk7yPmmAHK9evod5iYEQHGBk045574++HFVlBVdT5N0Y/3iiiF8iyjKKooOkYhglN9lLf
      3YmuSAT3HKIvViFVkVDtOhVrloqldGRCwpuhY10QBEmS5ivzVxjDL0kSsiw//7U+4Ur+xvxc
      gqOV/9G/HTsbC07rRLAXPHPDX5Eow80AZieq3c+SCz/DJVvb+fSG5vkOzCNKNecRau7mbz+x
      BhtgogoMMzWR4blnzWz7hwvoCtuJmAHqqAlXeffV57Drvhx7d+1hEhdDE5OMPDvF2g9fwbIm
      N+22I+eWTdjsKkpWguqZuPITS6eSzE6PE6rx43SUmf/9c3yZVIrM9AQEz8HqsOMHbG2XsKzt
      EpZd9umXHJt4+odkDt7D3U/ZMVnMOBDNP4JwtquUKigmFbPd8vxEsBcYVCsaxXyRXDqHrusY
      Epgs5hcq+CMkJGRVppgvUswXqVaqGIaBoirIioIsyy+64TxDw0A7LvoIFm+ADXWAYkYxWfE1
      dNJU58Etv/Q+1eH34vR5sfImn8Rks0MgSCgRxZb0MlUCrwmssgbkyOdKzCV1gh0+nP4K+IoE
      1GcwKh4mp2CRH7AYgE6hkCM1N4e7xo/DYcfM8e7tdSBLIpZgfGAGX30dbq8H+3GPFQThbFIu
      lXHazLhr3Mgv2m/l6CQud42bdDxFqVDCMAxkScLhcWAym5AVGV3Tnz/eF/aRSWbIzeXQqhqS
      BCarCbPVjGo2US6Wjhx7hgKgbvVl1Ld28L4Vr36szeXE7nRgPv3FOr0sFvD48GbGsWTSJKpQ
      VWH+Z1iBUrFMNqPj87ixuYvgzuFRk+SrKeJJqLgAy/zxpWKRbDaLw+PGarWeYACTDhRIp9PM
      TM7hWluDw+k40pksCMLZrFqpIisyTo8DWXnhN7ssyygmFceRv1fLFWC+iedoJ68svzQA3H43
      +UyeSrmCrmlISJjMJlSzCcWkcLS9XTpTE8H+MArQSWPLU6hby/yfW+5gelUHXVevIcwIyYl9
      /O7795Dq/BRNm9fTRB1KOIhtmYtfPHw/Wk8bW9tW4K7GKGRmGBpPk61WOO0J42wBZw2XrP4p
      h6tz3HzDSvzvaEU6MhHsgWc1Hjy4jb88106LqRloYNtlMrtmx/jB9/+Hto9tQTkyEezBR0d5
      6AEvb72pmyVHhhdPHNyLppox1bXjs+gohRjT9/4bdz9W5t79a/n0Py2iw36ar1EQhFNi4tA4
      NqcNT9BLx8oOElNxxvvHaV/ZQaAhAPx/7N13mF13Yef/92n3nntur1M1RTMqo94sybJs44IB
      YyBAKIYA60ASSn7ZJyG7qWTZ3SSbbLK/TTZLCCEQAqEbgyEGGxs32bJsSVaXRtKMpvfb+z11
      /xhJlqwCNtbEZs7refw89r3f+d5z7njO55xvhVqpRm46B0AoHsZoGPRt6yM7naX/2RO09rQS
      a4kTb00wfnqcqTOT1Eo1Cuk8M8PTrL5hNcV0gf0P7yOcCP/7TAR7eUT8LUtJbXwdax4ZQhqZ
      4+HvDKBSQi+XGY9up2tpJ6HuMAIigaYOmtbtoOvRY+inRvm3b/ejqRpCLY1Vh9rLbRMpTUBx
      nPufHaNu1IAyx4dy5MoWhV3f5LGTMBAWiax9A91xWJ7S6NyyHXPGYGh8F/sePsxJr42QMagn
      Olj+uiSdikBUcgCR+KrtLAkUWfv8CU7uyjP1vIyvMs600kp0ezerowLNZ2/prfwAc/kyJ/fu
      RxQEHLNBbRwayW5W3pKkR4OEx238cbmuJUEUkD0KXau7CEaDKF4P4UQIf2h+Cn5rbysdq7rI
      z+UoZUtMDkwQb03g888PCs/P5Snny1imRTFTZOzkGIn2JLHmGG3L2glEAkiyxMiJEYqZwvn2
      +3KuxNjJMWLNsfNrCKl+H7IyXzY/m8fU5zs6q6UqU2cm6ejrJNoU47o3bkPxKsiK9FoIgPmx
      8JHudUS6Otj5+Kc40p/hKz940TyAtX1s6ptf7yLSsZJIc4jV3/80p04X+fz360jJTYRDCtvb
      oeR9mYeSG4Thn/D3f/cImVLj4veG/opjgCB7WP6xrdy1JsTyVJTVd7wZ74EDDD7zFR5+6sLF
      4FayZetm+rxwrpu29fq3QPggNx34Ivd950WLwd24g+tTL7Tnm+kDjB8d4FsPnGKuIaGLGoH2
      zWx9w1q2bdvGhuDCrLDqci1mkiThC/jYfPsWOvs6CcSCly13av9JRo4PMzkwQduyNhKtibOv
      n5oPAMMiM5nB1M2LFoObHZ0hPZFm9w92U6/Uzo/8yc3lqe8/edFicMV0gfxcnn/73A8oZYsY
      jfnmolK2RL1cp6Ovi6bOJq5/6w7qlTqVQgXBueJYop+XgV6tUivkMYMtyIqH8FUuvGa9jF7O
      UFaSSLKHuP9F2eRYgEU5k6FhWlR1CwcRQZKRfWFCfg9ej4wsALYBjkU+nUE3beqmjSCriKKA
      Khs0BD8WIksaP+HHDx7moQcOMQKXXdINAMkDN36Sd26I8P4tUcYzVayrDNdSwi34vSIhVQK7
      jl5vUCkUqZoOliMgSCpqwI9X9RLyXtDV7RiYeoNasUC5YWHa4AgKXn8ARfUR1ea/EwEwymka
      ukGhomM788tbC7KK6tfwqCohj3jJCIGfx4P//COe/u6uV6w+l+sXhSiK+MN+ZI98Ufv9hfS6
      gakb1Mo1PD4vkjxfzqgb52f9CqJwvq75UTsilmFhmRaVQgXbsV8YySnMr0OkhTQkRUZWJGzL
      xrJsKmdnAl84n0AQBHxBH7Iio3gVbHt+ifpr+ASg4NHCeLTwz1RaVgPIaoArNlsLEiARSLQQ
      AOJXq0xUAIVI01Wm+9oGzAXwh+MkW1sx4cqTpiQPRFRCwSBoCdpfStu6qOLRVDxa+KevdSQo
      yF6FYDLA5e8jXqAEEihAIPYSjsXlcr3ibNs+v/Tyz0KvNS77umM7WPZ8U9BP5YDt2JTzly5D
      ednijkO1WL3k9Wv4BOD6ReI+Abhcv3jcOUIul8u1SLkB4HK5XIuUGwAul8u1SLkB4HK5XIuU
      GwAul8u1SLkB4HK5XIuUGwAul8u1SLkB4HK5XIuUGwAul8u1SLkB4HK5XIuUGwAul8u1SLkB
      4HK5XIuUGwAul8u1SLkB4HK5XIvUNdwPIMfcwClGntvDgRxUzbMviwqS4iPevZ3lvSm6uuLE
      xIXZvcqsZCideIinyr1M2Ck+emvXy6rHqsxSymeYHB1kcHCauhAgfP17WZWA9tDFZW0jT7WQ
      ZW54mIHhUYqmQqP3TrZ2avQmr7xDjjG1n9zcJN997AxGsAfb18IH7t6MF87umdCglp1m7uhu
      9g4VmC0Z6GKQROdKwk2d3L65GUkQrrCBvMvleiUpXgVfUGPFlhVoQQ2v5qVaqpGZSDM5OEEp
      Wzq/neOVaEGNYCzE0nVLUQMqitdDo9qgXqkxcOA0lUKVeqWGKImEk2FSHU2klqTweD1IHhnL
      sDAa+vyWkDM5CunCJZ8hiiIen5ee9T1EUpFrGQBFcqOHOfbAV/j2EGT1sy9LKrIvyrKbUuiq
      QrQzTpQXtjq8lqxqnuKxB3hs9hYOmKtefgDUshRnBhk89DiPPnqEopiifcl7ifsuEwBmkUpu
      nPFje3h617NMNXyUb99JU1C+agCYc0fJnjzMN7/yBLXUzZixdbzt7s0EORcAOo3CBNP7f8iP
      nxylf7pBRW6md/udtK/RuHFzMx5wA8DlWgCKVyEQDbDupvVEm2MEY0Fy0zlOHzhNKVea39Hr
      pwSAGvCRbE+y8bZNhBNhtJCfYqZIIV0gM5nBMq0XAiARYem6HlZe14c/7MereWnUGtSKVSzT
      wtRNipkiL97uRZBEVL/Ksk3LWbKyY2H2BN75O1+mtauHD6wFqzFBJTvO9z79Rxx86G18+9Ad
      3PuxNajKa6E1agwY4Z/+4H6qoQjyzbfQnhrCtE0u3WunCOR54M/+F7NChIneW2hecpik2WD3
      VT+jDEzx+P0nGB+Y5JfveSO7zyQ5OXNxqfSP/3/2Dlb58/2b+LX/+Ed8bGWCZTzPI197lP3f
      uJe/XXof17UqvKnn5W6A7HK5fhaiKLL+dRuJNcc4/swxxk6OMjc6R8/GXlIdTdx692386IsP
      UEgX0Gv6ZetIdaTo6Otk1fbV/OgLD8xvFp8tE2uJEUlFuendr+PorsMMHDiNXtMxdYPZ0Rn2
      PbiXWrlKvVJHC2kEoiFu/5XbEUUR2SMzenzkohAIxYJsfv0WDN1g9MTIwgSAKHuQFC9eL9hi
      FCHYYEVvkhEDStNpymcPUF2Ig/m5+IEUK3Zch6F5kDrjjPlkSlUuEwAK4GfJxq1EBD+p5lbs
      jIfCizeTfxG7VsacO864FGc67GFHQuDE5IXPRwagMzM2Q7HoJba0j1Q8SioYQGUJ7S0xar0+
      HhqaossbwehJIrMwT1gu12IjSiJenxfFo4AAc+OzlHNl9IZOdjqLFtQwGjpeTcXrq18xAFS/
      DwGoFCtUilVqpRqGblApVBAliXK2hGVayB6FaqFKpVBhbmyOSrGCXtcx5JZiAwAAIABJREFU
      DZN6pY4kS1QKFUzTQpaliz5DC2loIT+KV5l/IrGshQmAC4lKFDUgsmNHHwf2SlQOj5F5zQRA
      DIhx2z3LgQqQ5sH7PYzWzcuU9QE+Nr3z/edfOXRKY6h69b1DrWKG+tEnOeW9nkybn99p2cMz
      AxeWaAAFBk6MkpE76b3pRrqavbT6ZaCPZSsO0i4m+evnTtEb6ELfmkTCDQCX61qQFAl/2I+i
      KjiWzeiJUUzDxHEcZoan8QV8tORbCEQCmLpJKXv5v39/2I9tO2SnMpSzJeqVOgDlfBlDN5gZ
      maFRbeD1ealX69SrdXIzuYvq0Os6giCQnc6i1xrIysWX93AyQjgZxqN6mTozRaVYWfgAuJLM
      iccYeexzPJz6bTRV4R3qI3zv8TJnMl5e96k/YmWgwHKtxGOf/QwD03n2jOSo40MJt9C68W3c
      eXMvfd1x4jJgV8Cusv/rn6V/NM2jJ2ap40PAJOTMMdjUgOS/9xlfhnWaqdEhHv5qiZ67l7Kp
      I4Evv+dFv6QSMMbEaBOVeCvLenxo2guXd38whK+pBXlkgnpfhEmgE/As6Im4XIuDJEl4NZVq
      qUq9XMdoGOebXBzHoVIoM3lmEtkj49Wu3Bw7MzRN+8oOUp1NxNviSLMSpWyJSDJCMB4ikoow
      OzZDZipzyc8KooBH9dDW20YkFSWSjDA3NsvE4ASO4yCIApIs0bOhF0kSOfjY8zgOyB554QPA
      sRtYRpXp6RwNK4E3HEQF6rUilZkBxmoDKGqAgbBOHQWv34dHdLCKM5SyZzg5WWGu6qAEQvN3
      tmKd4shRhidCSJrG9W0+jNIcRnGU4yN5Jgsmoj+IX/Qi2jremoD0Kr0dbswNkc9lGDSb2BgN
      0Z70IeZfXMoCdPSGB8tS8Kki0gXdJ5LXixQIopUqCA2dKnD1rieXy/WyCQKiLGKbFrZjXdLp
      apkWel3H4/XMNxNdQa1So1qsUMwUSbQmCUSC1Mq18yOKStkS9XINo66f/VgBURJJtifxal68
      mkokGUH1qxTm8lQKFRrV+eZmxavgD/mRZRnTMMnP5fEFNCRFWvgAsI05qsVRfvzQAeY6emla
      v4YmUSQPzAC1/geYkjv52tI7ec97V7J+eYKEx2Ji11Oc2vNN7jd+lS1be/mjd22miRFyg0d5
      4C/+lD1PyTw8onD9h3opnNpD9vlv8aUzd7Bu8wp+554b6fLakB5k+Duf5rMFD0cW+sR/BnNP
      PcBwNsT+Lb/E29tSbAxfvb/gsgJBcJpoyZxBrVQp4AaAy3WtCIKALMvYpn3ZUT6OA47lEIgE
      sAzrivXUyjXG+kfJTKZ52yfeTqI9STgRJjOVITuV4QefvZ9qqYrRMACQvQq+gI83//pbSLYn
      8QU1Bg+eZnpomie/8wSGbpz/vGAsRNfqbkq5EqVcicJcAVlR8AV9CxMAJ+7/3xzx+DkRBkRw
      BBFa72bphi3csq4F+YJbcj28kWhqBR9860p6mkMEZRuYJDNb4dRxmc1v28zqrvmmHpkk4Vgn
      t9y6nv6hOkMnB5gjzPjcHOPH51i1cycre1O0eUQ8ooghyni8IpIovLquisYMGBM8/pRILhTl
      9ruWkoj6EHkZAVCpQGaOmWiIXp+PIO5sP5frWnEcB8u0ECQRSbr0L00Q5ptoKsUK1fKlQ0XO
      8Yf9pJakWLKykyO7DmMaJqZh4lE9yB6FjbduYuTECFNnpqgWK5i6QbVo85OvPYKqqSheBUmS
      EGWRbW++nolTY0wPT+M4DuF4iFhzjP7nTlDMFC/63AUJgOLESQqWRF4GPH4ULcqyG+6itaOD
      zd3Bi5tktDb88Q7Wr0iiAgomUKZaNcimRVo6WkkkNTQRQEP1hejubkIZNKlmslSpUqhWyaZr
      JNo7SKRChM6epYmILIsIIq+qALCNAk55iFMjBnarw7KgRb1SIGtloVinXq+BqZBLlxBUA39A
      QpItRMHCMGxsR+BcN6+tN3AqJSqBFiyvBw03AFyua8ZxsC0bURIRLjOb9dxwTL2uYzQuPwII
      wB/yE4yHiLXEGDx4mkKmQDlXJpKKEk6GWbp2KbnZPLmZHNViBcd2MHWT4aNDCMJ8G3+sJU44
      EaZ34zIq+TLF7Pw8AH8kQDgemg8jQSAQDeIP+9GC2sIEwLaP/wNt3b3cs/6nl421t5JobSZ4
      7Q/rVaMyMkjx+e+zN3+KubE9PPjs1y9b7iNvnOamu9fwS5/cQbJ7kqyscOJUjZ1hL2jzv8py
      IU9tcgJj6VZ8iSjtLFDKu1yLkGXNT87yh/14VQ8e1YNpmNiWff5i276sndMHTlOvXPmJfuX2
      VTQqdQaeP83cRBq9Nl82P5ujXq4xNzaLrEi0Lm0lN529qK/BcRxMw2R2dIbsdAavz4sW0ujb
      vhqA1p5WVl2/mvW3bLzkc18D1wYBiBOOqizpMnn40Ak8vc3km9oIkKdemKF/32nqUjuRjnYi
      hIgH/FSbvDw1NEBcaaHc24LXqWA0ymQLdXTdflXdFnuTywmt/2X+w0eyVBoXtBMaVZh4hieH
      NY7OqbzvXbexbHWSLkJova2cyimMHNzLRNcaov4gCcYZHhpnaN8MS3u7aUrGUHCHgLpc14pt
      2tRKNcyGgaqptPa0kp3OUsqWSLQliKQiaCE/1WKVaunKTUDlXAlVU2nubmZiYH70jlHX8fg8
      aGE/kaYo9UqdQr1AKBFGkiU8qkJuOoehG9iWjaRIqJpKU2cTekOnUa0zeWZyfkTQ6fGLPk8L
      +VH96mshAEQgTiis0tZhM3BsgIgHStva0ChQKc9y+NAQjWVvINTeSpggUb9GLeVlcnSElrBE
      1W5BNmsYeoVCSUc3rVfVuEhPogdPoof3rHnRG9U52DfH7K44x+ww7/zVmwgyPxtB62pixqox
      sfsQUzctobnZS5wRRkemeP5wmq7bOkgklFfTabpcv3Dml2eoYxomoijS3N1Co9qgkq8Qb03M
      L+kQ1M7O1q1dsZ5KoYwW0kh1NOEL+mjUGxh1/ezdvI9IMkJ6fA5DNwjFQ3h8HvwhP5Xi/BIT
      tmUjK/NDTZMdKebG56gUKoz1j+LYziWfF29NEEqEXgsBACDRsv0umjdv58N/9pf0P5Lj17+Q
      p4aKEm6jbcuf8M4717F+ZQsg0Lr5Nlr6lvGGP/5rznyrzHs+YyAn1xEKyGxOwpyXlxcAY0/D
      6OP80p8/RrbUABzMho7jONjP38QjAsgeD70f/iJvbB/nXd1D/O5v/Stj2QpTgGXU55NdeD+f
      +rzAf5VkuONPec+2Vj5xe/dLOpT47b/N9p6j/GXtC3zj737Il+d0alKCrk230fSu9/J7t/vx
      ubf+Ltc1Z1kWh544RLQpym3vv53td12PPxIgN53lzOEz/PjLD5GbzmEa8xNG1+xcS6w5BsDg
      wQEmBiY4/fxpipkipmHytk+8nUAkgFfzUq/UqBQqPPfDZ5kYmGB2dIZIMkI40cbyzcu57Vde
      j6qpSLKEUdepVeocefIww8eGmDg9ftmL/4WuYQAECDUvp+emu4h1BInErl7aF1tC04a72BZt
      JhDzXfDO/FVMlPwgQs+mHXi7yshLS+h4kf1xEss76UwGCHvm23VEJQj+NtZsv5lEoU48pyOG
      utBUiZ5YFwF5BTU1DuUBRobTDA/NUQKu+FUJIrRtpldR6UusYudNUK4Zly8qyTR3aiyJJ0Cz
      2bDzZpaU6+QuW1iEVQmWNfkv/7mSCk0bWLsuQCOp4QfOTSURZA1fpJX2tTewzZtlScGgIYZp
      6llJtK0FvwTyQiyx6nK50OsNSrkSgwcH8EcC+PwqpWyJmZEZSrkStvXCqJPCXB7rbBhUy/NP
      BbZlUylUmB2Z4fT+U/OrgXoUjIZOvVJnbnyOaqGCbdnUq3XyszlGjo9QLdVQvAqiKGIaJkZd
      Z/LM5PkwuZJGtU45JyA4L565sFhYDRj/Bvd96zm+881nGWB+itVlSV544//gnhuXvOQ79V8U
      D/7zj3j6u7v+vQ/D5XK9gl4jTUDXgKhA813c+sFb2HhXhfkGnSsQRAi1Eg+4Leoul+sXx+IN
      AEEEb5xIU5xI07/3wbhcLtfCexUNhnS5XC7XQnIDwOVyuRYpNwBcLpdrkXIDwOVyuRapxdsJ
      7HpJmlJx+lYu/fc+DJfL9QpyA8D1M0klY7DCDQCX6xeJ2wTkcrlci5QbAC6Xy7VIuQHgcrlc
      i5QbAC6Xy7VIuQHgcrlci5QbAC6Xy7VIuQHgcrlci9Q1nAdgYxkGpt5At+GFXQcEBEFAlL3I
      sogsS4jAQuxd4tgWtlGn4chYSATVl3f6jm3h2DamZWAaNo4gIHr8KBLIL45Ux8SyLIyGjmk7
      OAggSMiKgijLeCXhwoqxbROzoWNYDrYDCCKSoiBKMl5lvvL5n3CwLQvbaKCbNpYDDgKSrCCI
      Mj6PCILg7gfsci0A23FwbJu60cCxHWzHRhRFZElCkeY3bBGucpGzHRvLsjEtE9My55emdxwE
      Yf566VW8SKKIKIo4joNlW5iWNV/WcXAuKOuRFSRRQhRfuBg5joNu6li2jWXP73wiIFzLABhj
      cNePeeYLn+OrQ5DVz74sqci+KMtu+ii337aCG2/opUtamI3L9cww0z/8E/529hYOmKt47A92
      vKx6jOxppkcHOPTc4zz66BGKYor2j3+Fty6DzS0vKlw+wtCBA/zg81/h8ZEqs7oXuXkrN7zl
      zazeupkPrA29UNYaZ/r4QZ758he579AcIwUHy9/D2jf+Ekuv28Hv3tqCAEjzFVMcPcKp732W
      Lzw5Sv90g4rcTO/2O2lfs51PfXAtHsCHy+W61grlApOZaf7m2//I2OwE6XyG9lQr21dt5q7r
      72DZkh68ypX3E8kV8xwcOMZjB57imWP7KNcqGKZByB8kGYnz8bfdQ09bFx1N7TQMnaND/Tx+
      8GmeOPA0+XKBSr2G5lUJB8Lcfds72NC7hlXdKxCAaqNGoVzkSw9+g4GJIY4N9QPgkZWFmQnc
      ueMdLA3G2NAEtl3DMhrMDO5iesDhASXAR7c1IUqvhXvVApBn/8PPk2tUyQa7CflPomBfpqwO
      6Jx+6nEGJypMtryeGzYGUBUHoTRNNj3M0R+bjKx4PSHJISo5zB54lKHhDHuddax9Q5wtXhG1
      McNcbYL0Y49wZNMHSHqh3QfVgd2MnZngwckWOrZvoNvnISSUyOVylI88xJ7RlXQERfpi7mRv
      l+taOXf3fWrsDBPpKbqal7CqczlexUOhUsLn9fFc/wGaYinCgRAeWblsPXW9gerxsiTVRku8
      GZi/ozdMA9u2OXzmOF7FS9gfQhAEZFEiGohw5/bbmW9XELBsC8u2GZudIBlJEA1FSIRjTGdm
      OXzmOPFQlJA/yHUrNsw/cdj2AgXAznfT1t3LPevBaoxTyYxy7x98kkOno/QXl/Br16VQXjMB
      MMLeh/ZRi0Tx3HYd4YCHgGVTvqSsAVQ4/eRPGDDbmWz/Dd75tm6WR6uw/3P80wPD7DkyxshH
      X0+b4xCVbGae/wmDsz6e4038pzfdwPpOD4nJ+/jql/t5/NHnOPyRD9AXPBcATzE6WONHk0v4
      xNvuYuOqFCvYy4Nfeoi9T+9l9/DHMNsUNwBcrmvIYb655+TYAGOzk/S0drGhdw09bV3sPrqX
      k2ODPHfiADdv2IGm+q4cAEYD1euls7mdzcvWE9D8eD1eJtPTTKWn+Yfv/wtN0RTtqVZ8Xi+S
      JBEPRdm8Yj3hQIiQFiBXyjOXz/A33/4cTbEk8XCUkBZgKjvDs8f3s2XFBtpTrWxevh7DMqjU
      Kgu/FpDoaSEQ1Xj3e3aSP6Sw++ARxu3VxBD5KfvGvwq0Ac185P9sArEOSoFHn9eYSJuXBkB5
      DEqHefzwSjzLV/DO969haUgiImuw8x52Dn+BZP4xfrT7k9zYmaFn+TRPPWpTirdy14fvZOUS
      hSY/iEvfzc7tn6NbOcDf/fgk9hoPW69Xee7JI4zTznXvfD/re0KsiMhI7OT6GyZYE5vlfQ/u
      Rru+g9f1rsSH29vvcl0LDV0nXchQrpZRZJk3brsVn0dFlmS2rd6CR/Ewl08zMTeFbdssa7/8
      elpdTUuwU+04jo0syef7C5pjKVSPl45UG5rqo2E0aEs2Ew1GWN6+FFmWEYT5v+6wP4QkSqzu
      XkkkEKbWqKF6VK5buZF1S1fhUTxIZ/slZElCFqWFDwBBkECUUFUPkijgmBYWUM2OY04cY0zb
      gCKJLJXGODNhUKxLtF23hajSICIbTBw9Qr7aYKbUwERG8vjRkt10toaJhVRUEXAMcExmTx8l
      V6oxkathImOVZ6mP1shaFnhfztFLgIQW8jDfa1FBFq7Qf9GoQSFDxhMlpoVJBRQ8MoiiBJ4I
      fr9MLGiSzlWoRItQyZGrhbCEMK1NXlQPSIIDsg/NrxKNqBSyRSpVDyYNclkPdU0jkQrgUyVk
      UQQ8aH4NKRbEzORpVBJUmD9VNwBcrleebdvUdR1FVtC8PjSvD0ma76XzyAp+VSMeimKYBg2j
      ccV6JEk627f3Qr26aTCbT5MuZPEoHnxeFb+qIQoigiggS/OXb9ux0U2TXClPrpSnYcwfTzQQ
      RhQFJEFBORsq54LFsi0My3z1rAZaGN5P5v7/zr1t/5OAT+Ej2nf41veLnJhReevntrAxVCES
      zLPvm/+XI2MZfnI6TQUNb7STrhvv4e67VrOpT6VZBOw6OGX6H/g8Bwan+d7zk1TQkGSJprBA
      tktHarvGJ1StwOw0U8kOvIkkS1RQgfkQiRAIqMTiItNzaYrBWUhOM2O04vc00dF+rux8l6/f
      H8SOx8gfmKNcUmjgZXYqTqMpQecSFZ/6wsf6ND++RBJpapZGoZk0EMZd9tXluhYs26LWqBHU
      /AQcP54LOnoFIOQP0tm8BN00qDXqP3O9pmVSqpbZe+J5xuemUD1ewv4gqWjikrK2bVNr1Dk2
      1M/43CSZQpZ1S/vobumcDwtBuGSYpWGaVGrVhb8uWPos9cIkj/5wP7OBO2hav5pmUaAIZIDa
      iR+QVVr4SvvNbHpfO29pjtHdZFI79iT9/Q/xPX0nHVub+OP/2EOEOSozE+z//ud4Ztf7eXZs
      M//1zjYKp3ZT6H+Yfx5aQVPXzXzyQytJeUSEwgTpXV/kXsvDmYU+8RcJhMLEUy2k5/JUq7Wr
      lw2G8KZaIJOjUQ2Sx3vZbuezhSHRRGtmFl+lSh6uXNblcv1cbMfBME0kSUYULn3OFgQBSZSY
      yc0ii9JlanhBoVxkrpDhn3/0ddKFLLqhs7JjGa2JZm5at51IIIx0to663qBar/KPP/gyk+kZ
      ipUSnc3tpKJJfuWOXyYRjqN6Lm3mqOt1prOz7Dm2n5nc3MIEwFN//T4yusA/CIAngKJFWXHz
      J7n9pl4+trWLoAznLoEVbSPRjlX81q9twi8IKFgIwin2HB9i/7fH2PQnf8XKZj+3tgmAA8Ux
      dmoD/PGjYzx9uMzInTcwfPwQw999nM4PPMKajhBvXjmffno6yNSQSnhOAnMhzvzKysUCmdlp
      4tEwmnb1ACiXi5RmpyF2I17NQ5irNOlUypCeYSoWZaVfu3pZl8v1cxEFAVmSsCwL07n0onJu
      zH48FCMSDF+1rpA/SMgf5L/d83uYtkW90eDE6CmmMtN87vtf5tZNO9m6ahNBXwCv4sGrePhP
      7/3N+SYgQ2dkZpzp7Bz/9G9fZee6bVy3cgOtiRZwHBxg95HnmM7OMjg5zB3XvY4373j9wgRA
      87pbadbCrIgDshfJ46d5RQfLWkIEpYsnK6nBIFowgCqKSFzYvu6AI5yfUDH/RDPfAC+IIgIv
      TDZzHAccEATx7D/n6hCuOhnjFeXxQihMuFTAWy6RNSAmgSraQJ1G3aBctol0BvEFqxAIE5Ly
      SFaBTBaMIKA4gEOjXqdSLqOFQqiqgoJKKFKm4C2TyRroUQl885d5vVHHLJewIp3IPpUgbgC4
      XNeKKIp4FQ91vY5xdhLX+WYXoNaoky5kaYomrzgC6JxzPyNJ0vy/e6A5mkQSRY4Pn6Zh6Mzm
      0gR9gYvLOgIePMSCUUCgPdmCbVuMzkzQEm+mptfJl4sUqyVEUWR9z2oS4The2bMwAdB7x0fO
      DwP9aQKxKMFo5LU/gUnTINlEU/YIvmyUKR06VJhvkClRrdTJZy2aEnECcQviBkllmqoeYXIa
      Gh5AmS9fq1bI53OEk3H8fg9efCSSORpyiMEpnUb7C9289WqVWi6L1RTHE/QTB67+4OlyuV4u
      URTxqT4q9SrVeg3DNFFkGUmQcIByrcLE3BRLkq2oHvWn1ndhvV6Ph66WDuLhGAdOH6WuNxid
      GWdpS+dFN7KiICLKIs3xFJFgmDVL+8iVCpwYOcXWvo2UqmXOTA6TKWSJBMLccd3rzncIvwZu
      DiWgk+a2IOs26zzxwGPse+4YUzoY+iSZmdPc952nKSkaLRvW0kKKjniUpcv8HNm3h/7+fjI6
      NOo5apUM49NlqrUFaP/R2iC1nR2rTpOQDvODe08wMl0iX8qS3/N1nj1m8/2hrezY4qNrSSuw
      lq07RVJN0/z4O49wejLDbLWMPnw/z+2f4huPhbj5+h56ujuAFBuv76O1WeXAD+7l6NAkA/kK
      Zn4P+/Ye4ev3DbBtx3X0Lu3Ax8LMsna5FiOv4iEVSeBX/RiWxU/272J0ZhzLttjff5ATI6eY
      mJuiOd5EUyx1xXqeObaPvf0HOTxwnFK1jGEaAGSLeSbmpjg2dIJSrYzf5+f0+BkODhxl1+E9
      ZAo5Gvr86KJqvUqmkOXpI8+RK+WIBsMYhsF0dpb9Jw+xZmkfm1esvyg8XiODQ1QCiWaaVq4g
      9PwQtbEKh/ZXCJGmOjfNGb2JaCpJsjOGBw/BWIpkz3L8R05RGc7z/L4ifsnBLkyQrtnUHefs
      3fVLVM9BLceBoSyGWQPyDKYrzBYs0qeeo78K9riIr301Cb9EcyhG58o2zLzCqdHDnDo0Q96v
      IwynyUtR1K4OOoIiUVkBZFLLe0hP6IROn2LkGJgzMsHsEJMNP3qqj+VJL6nA/KGEO1aQNLK0
      948yPXCYw+UQc8IQZ3IiaW83qzuCtEbl10LCu1yvWaIg4pEVUtEEumkwOjOO7VjM5OYYnBim
      UqvQHG8i4POf75RNF7LnL9rhQIiAz49xdtRPpVYlXymgSDKSJFGuVSlV5y/8IS1IxB/Gsi1K
      1TJjsxMYpolX8aDIMrqhU23UsB0bv6qRiibPjyaazMwwNDlKrpRnfG7y/PG/BgJgfihkYvUN
      JFat5i1HPsWRfRn+8usXDgP9MHfvWM2mviYAkiu2kOxuZdtTn+ZUf5E/+dc6UnIT4ZDC9nbI
      ezk3zvKlmT0Cwz/h9//LI2RKLxrTe/zjPAsIsoflH/s6d60JcffmKNvedw/xAweY+fw/8PWH
      L1wL6DZuvXsz1/ngXPPN0jf9KurxgzQGvsh9f//Vi9cCumcHdy554W4+fN17WJ04wm9OfZYv
      fPsRvn3hWkC3vZv3b1HxLFR/h8u1SAmCgCRJXL96y/m1gL6/+0HS+QydzUvYsfo63vW6t5CK
      xM8PEX3uxPOMzU4AcP3q61jXs4pYMMLh2eM8cXA3J0ZOUWvUsGybkD9IIhzjQ298L32dy1ja
      2sVkeorR2XEODx7nCz/8GuXq/LpBmlcl5A/x9pvupK9rBWuX9pEvFZjJznF8+CSPH3ga07q4
      9UNwnBfW6XxlVSnPzZIdGabWtgVVC9B5lU7wen6K8tRJJn1r8PgCrGx60RXa0cExmOo/QbGm
      M1fWsZAQPRpavIP25iDhwNmJYFYN7DpDx/op1w2ydRvBG0GRBaJqjYLUhCFq7IwdY8/u0+ze
      dYoprjJcUlJg4we4rVvgzl6B3f1z6OYVSgsige4tNIdk2iMeMPOU8wWmR8ZIVy10W0RQo8Sa
      mwhFIiwJX/AoYleplwpkx0aZLDSoGuDIfsJNLWiRGL1JFYFzIWBiVIqUp4YYyVQpNWwsQcUf
      bcIXirJiSQhREF6x9v+J5waYPTL6CtXmcv1i0U2Dul5ncGKYWqOObuhoqo9YMEpzLIWm+s6v
      zjmTnaV6dk5ALBQl7A9SrJQoVkqkC1lKtTKWbeE4oEgyHkVhSaqdoObHr2rU9QbFaol0PkO+
      XMS0TGzHQRJFFFmmJd5EJBAmpAUxTIN0McfozDi6oWO/6HJ/DQPgVc7WYfJ+HnzgEA98/wAj
      gHWlspIHbv593r2tlQ/tXLKAB/nq4QaAy/WLZ/EGgOslcQPA5frF4/YRulwu1yLlBoDL5XIt
      Um4AuFwu1yLlBoDL5XItUm4AuFwu1yLlBoDL5XItUm4AuFwu1yLlBoDL5XItUm4AuFwu1yLl
      BoDL5XItUm4AuFwu1yLlBoDL5XItUm4AuFwu1yLlBoDL5XItUtdwR7AyhalJ5k6d5EwZGuf2
      TxEkBMlDqHkFrS1hmlIhAgIsxOZVVr1IbfwAx+stZO0Ib1x35T06L88GHKrTJ8nlSgyNZSjp
      NiYiohwg1t5FMJFgVbP2wsYtRoZiJsvYqUGmKyZ1W0JQEzQtaSeSjNMT9VxQfR29VqWSnWVy
      eppiwyHr72N1e4iupHbxoVRGyKRzHD08RhW4ZJfj9uvoSmisXRJ6iefocrleqoahU63XOD58
      kmq9Sl1voKkaqUic9lQrIX8QSbz69kyGaaKbOuNzk/NbQ5aLLG3pIBKMEAlc/HdcrVcpVEqc
      Hj9zdjN6A031oakaq7tX4FW8eM/uQGbbNpZtc3p8kEKlRLqQQRbnN5q5hgGQYebEEzzzhc/x
      1SHI6mdfllRkX5RlN32U229bwY2JEH5pYTYuN0tzZJ7+R74xewsHzFUvIwAcwCJ38mGOHBnk
      W98/wGCxQcVWUPxLWX/XL9OzeSsrzwaABFAfZfbUAX78+a/w+MiFW0K+mdVbN18cAGaZem6C
      iYPP8NATjzOYtTiw5P/jd9/ce2kA5Pcxtv8o//jnP2AcqLz4UO8RbzK0AAAgAElEQVT8X7x7
      W5sbAC7XAqjWq0xmpvnSg99gbHaCdD5De6qV7as2c9f1d6Cp2k8NgIahU6gUefzgbsZmJjg+
      fIq7b3s7a5b2XRIAuVKBU2OD/NMD/8pUZoZipURrooW2RDO/e/cniAWj5wPAsm10U+fhfU/Q
      PzrA3v4DaF4fkUB4YfYE3vTB/0GstZ23LAPbSFMvzfHUl/6J/qffxK4xm8+8txev/BpojSqf
      gdIJvvIjHSmykTf84Yfpjomodon66OM88dRhBj5zjMc3/CGd3hrLfFWe+uJnGSwFOd7329zz
      4RZaAzrCwI94+Og+Hnz6JKs/81FSMrQrcPS7/5fRosAeYw1dyTjrwg2eM6+wVeXsDLW6h+HO
      9/DBD22jb1mS5IXvh9uJ+pXL/aTL5XqFOI6DZVs8eWgP43OTXLdyA++55W00x1IcHzlFppDl
      m4/ez6+99QMkw3F83stvRp4p5jh65gRPHt7DuqV9JMNxkpE48XD0krIjM2P0jwzw9JHn+JU7
      3kU0ECHkDzKTm6NQLvK1h+9j57ptbFm5gYCqMT43yb6ThwDYvHwdH33rh8iXCxQrpYUJgEBz
      N8nOXvr6wNJnqeeDTIZrTFYLnBlKU7d7EIFX/eXKAWwRNdKCv6WN7uUrWB6X0MhT145z8MnT
      2BM5ZioQd2ogphkdzJP2hNE2r6RrRStLgzUQDvP88SnkuUlGchZKQKBdEREVFcXnJRRsIilq
      1GsW5C9/KHqlTEO3aPjbae7qYVlfGy0L+mW4XC7LtmkYOtlijmKlxObl6+ht76Y92Ypumhim
      Sf/oAOVqhYDPf8UAEARQZBnN6yMVTWLbNqVqGUW69KpYrJSo6fN7Cnc2LaE5liISDJ8PgWeP
      76dSq1KpVVAVL6Vqmcn0NJFAmOZYipWdy8iV8mQK2YUJgAtJnhRa2Mub7tzMmb0yxcOnmXa2
      EgcSC30wL5W3EyKt/Pp/nt/g+YVfpQ/P8uU0hU/Q6owxOQ3t/ikIHuS5k0vRVq3gDW9dzhIV
      QpIKm9/B5mN/R2jqGZ46WEfqllkb8rLqHb/PKuD1wMyPdzEwUr1iAGQzsxRKAvg1vJLE5f+3
      crlc15Ju6qQLWaqNKrIkceP661FkGUmU2LBsDZZtMTY7wWxuDkkUiQUjl60nFoyyY81WdqzZ
      CsBUZoahqVGEy3SOzuTSqIqXrX0bWZJqJagFAGhPthANhlnR0YsoCozOjOOVPWSLecbnJrl9
      8020JZrxKh6aYylC/uDCB8CVFIb2MbfvPp6NvQ/VI3OL51meeL7GRF5h00c+TLevTIevwr57
      v81YusSR6RI6XuRAguSKm7lhUztdbREiEmDXwKlz4sF7GZ7Js3coh44Xx6zgzec4E9Lh8r+H
      q5NlEEU8gnBBn4WNWS1TOrGPkaLCaW0572qFeLkCM1NMJZppiSdp94JXhPmBV2H8AZVYQmJq
      do5iMgR4X9Kh1GtVGpYXQkF8soz/ZZyOy+X6+ViWRbVeJeALoHpUFFlBPHvRFoCQFqCjqR3d
      1M/ftf+8/KrG+Owk/aOnWd29EkkU0VQNwzBo6DqmbVKpVxEFEb3ZQBBA8/rwqz7UC55AJFFa
      +ABwHAvHtqjXdWwHREVGAhq5CdJHf8z+phvQfCpr/MfoP1zjTMZHS90hRgnDnmXw0H5OzxTY
      N1Gkjhcl2EKT3kFbe5hgLEgkIGEbVWw9w8jxA5wYy7D3VIYGPiQJot4GRcV+eQEgiiCK81+a
      4wAOZqNMo5hjdmCMnBmiHE3SHIJgVYdyiZK/g7jfT1g+N+RKBFS8qodAQCZfKlNvvPT7d13X
      MQ1AMGmUS1RyEhVBQBQVBFFC07wIgoC0EL3rLtci5TgOumHgVTx4FQ+ydHFHr9fjJRoMo5sm
      DUO/Qi0vjeb1YTk2c/kM6XwaSRQJGjq6YVCpVdANg1qjjiiIWJYFgoBHUfAoHhTphUu+KAgL
      HwC2PkUlN8q933yKyY530X79dbSLInkgDVQOfJUJuZP/s/QtvOcTK/n48gQJj8XErh9xeM83
      +ZL+q2y5tZfPvGszTYyQGzzKA3/xpzzy4Ef57rEb+JcP9ZI9/DDZ57/FX524g3WbV/A//+JG
      urw2pAcZ/s6n+WzBy5Gf90QcA+wy/ff/b/qPD/K3j/q48UNv5d0fv4Hr/YDn6j8ejsax2zqY
      HcpSqvhe8seXinkqI2Ow5zn+8BFAEEGNkOjcTKR5JX/wqQ+S8EDbS6/a5XL9jGzHwbBMZFlB
      Ei4dyCIKArIkM5keR3yFbsbW9qxC9aqYpsmf/+vfki5kqNRrhLQAmqqxJNVGa6KZ5lgS3dBx
      bBtFVpAlGemigFqgABh56luMH4rReAYc6limwVziNlqXrWJlXxzpgm/G9C8jGFvGG27ooCul
      oUk2kKaQqzM2LLF82wq6ulKEJJCIEAg2sXFTD8fyOuNjE+RJMFvIMzWcp2vtOjqWtpJQRGRB
      wBIkFEVEFIUrDK35GTWmSI+P0v/csxwcVihKa3nz+1ezZkM3HbGrD/U6p16rUirkCPg1vJ6f
      khaX0br1PQg9RX5j/bkTsbGsCrmJNOX0Xn7wxA42dUdIrk2isDDDbF2uxUYQQBJFbNvCucxF
      xXHAsi2CWgC/+so01ApAIhRjXc8qPLJCtVFFNw28ihdwGJkeJxlNEA1GkCQJQRCwLAvbtrBt
      G1E8F1TOAgXA7vvI6rAPwBNA1mKsuu036evp4eaNcaQLgtP0LyPW3Mfrd3TiAxRMIEuxUGdi
      VGL5h5fT2aQRlgDC+EMpNm7s4d5HdAqTExToYjZfYHy0SMcta+joCJE825FuCxKKR0QU+fkC
      QJ8mM3KIZ+77Ovtib8XXsZrfed9baVch9jNey+u1KuVinmBMw+t56eOfWra+ixZg09n/dqwG
      RuU0e+/9OidH9/P5XYPIdic3r00i4waAy3UtCAhIojQfAM6l7zs4OI5DUAugqa/M47ggCMTD
      UeLhKOt6Vl30XqVW5RuPfpdIIETIH0KWZARBwHbs8/+IFywAsSABsOO3vkBzZzfvWw0wP+1X
      kr0oioj8oklgsSWtJNpaCC7Egb1Udh7sPN/97/+Nk41mdq34L/znX9lEX2eEmPqidTXCEejq
      oXesH39Q5kQFAiqo0nyg5XNlJsdNeja0k4i+9CeAS4gelGAf23ZsY8sSh89+eZZKIUYGaMFd
      88PluhZkSSbkD5It5anW69Qa9fOjgBwgXchy9MwJtqzcQNAXuKbHohs65VqF/rEBtixfT1u8
      GVXxYtsOhXKRfLmEpvrPTyozLXNhAkBW/Xi1EKGfYVKqKIqIonhBKAhAEM3vIZGyODg8TpQ4
      leY4KhWMap7xgUl0sRV/Mo4fH0HVSyiikJ6dIhe0qFtRFKeOadQoV3RM82Xe/lfzUB7k5Iyf
      fCTJyvVdpOIBQj7PpV+kEoRAG22R3ejOLIMDWVZ0BwioOmT7mUrbDOSbaG/xEA6+lF9DHagx
      PlAF2UOgKYrmEZFFB6wyuWyOwtgcsn8THq8HD+7dv8t1rUiShKb6kEQZy5of8pmMxAn7Q8zm
      02QKWQqVEn7Vj9+n/fQKfwaWZWFa853KmupDEERwHCbS08xkZxEFEZ9XJRQI4lE8+LxeAlqA
      ycw0AEGfn7reoFgtvRZuDEWghXhSo3elxcHdBzhxYpisBZaVppAb48knjlKTVeLLekgQoykc
      om2JjzMnjjM6MkrRAkMvo9eLzOXq1HXr5R1KfhzO7OapqR6y2mre9vaVtCS0y4/B9yUgtoa1
      XeOEpUF2Pz7CTLZKpVakcvwnHD9j89TkKtb2qTSnXkoAlIBRDj55mIN7TjOe16kaDrZjYeuT
      nD55miefOIovlUQLBgji3v27XNeKIsvEghF8XhXTtnj+1GFmsnNYtsXJ0QFGZsZJF7LEw1Fi
      oUtn9b4cpmVSqlWYyc3R0HUsy8KwTA4PHmP30b34POr5SV+a6iMcCNEcS3FsqJ8jZ45jWCbp
      YpbxuclXzzyAq5NIrruZSFcn7/j77zK952E+/RMDCxHRE0bt/Cg33rSd3uXtgERq1TYizSFu
      +JvvkXnI4nd/KOGJ9KB5LJaKkPPwU0fpXE65WKA0Ooyuj9P/7PP8za/+EE04u+bPWaLs4frf
      /DzrUyrb2jzs+A+/QerkEIUf/g1fOuhQd2REb4LWNTt4w+tXsk0FrzALTPD1T36RkXSRE4BR
      mKSh66BP8eVjKv/m90Dnu9i5vYm77uygs3kv42P7+dqf/Qu5mk7DtDFFEW+gE6X5Q/zePRtZ
      EvKg4j4BuFzXyrk+gJ3rtjGZnua7T/6Qxw48Ra1RJ+Dzs2xJD3ff9naaoklUz/yt4u6je5nJ
      zgLzI3p627oZGB/iwOkjPLz/CRp6g4ahU6yUzg4tlfF5VdYs7WNZWzdv3HorY7MT7Dq0hxOj
      p6g15ucXxILz/QJ33/52EuH4+bWH2pOtvGHrLXxv1/9j777D5KoPe/+/T5/ey+7O7s52lRXq
      EkUI0Qw2GFyC7bgkLnHc4yTXTnJz87v5xTf5Jb8k9yZxikvs2AkYG2OawXQwICQkEKqrtr23
      2dmZnd7PuX+skAVIwggkY/a8nofn4Zk9851zZh59P+fbzvch9vUd4me7HkeRFlcdn8cA0LC4
      QgTau9G9Fl75LLNXUmxenJFuoiEnHs+pg6KL1ZfqDKLaLSxr9iHNppjKL1BERba6CbZ1E20I
      0Ba0/OJYDZY17mB0PsfCXBlBlJE1K85gFy1qiIDNDqU5EokcifksJRaf9HBaggjuRqwFFZsz
      Qtcyg0zxtVoREiDhaVpGOA/t4WOkZopUqgqSK0J9tJHWFU2LC9dOOPXzFXcDCtD9ilINFMCG
      J+ghm8tiVUTSxcVnjwqiBUewEVe4i+URJ05J4Jebk2Qymc7FSyt1A24/GOBzeanWqhRLRZw2
      ByGPn9b6ZjRFQzpl9s3p6pqX/fuXFfxu38v/Ziy+TxAEZEnComqIgnjyHLzOxbv+SLAeVVZP
      vm5RNUKeAGFviGK5xEwihqqo2Kw2BMM43dj1ElArwcQd3HPnC9z94+cZAM5YpUsavPNv+OTW
      Jr54besFPMm3jskXBoj1jP2qT8NkMr2Jfk26gM4DUQb/5Wy8cQWh7hvJ8BotgIZltIfMBy6Y
      TKa3j6XbAjC9LmYLwGR6+zEniJhMJtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQyLVFLdxaQ6XVR
      LRo291vyCU0mk+kcmQFg+qXYPS7kZnNZmcn0dmJ2AZlMJtMSZQaAyWQyLVFmAJhMJtMSZQaA
      yWQyLVFmAJhMJtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQyLVHncSHYBIM7nmHvj27j3nFIlk+8
      LFmQLS5aL/5trtjaweZNLTRJIF6AfQvL8yPEnvx7vhvfwuFaJ3f93qbXWUINqDGz61aOHRvh
      /scOM5otU9AVJGsz3e94N9HV6/jMZSFETqRr9jDDhw/z+O0/4bmJIvMVDSm4hs3XXUvX2tXc
      suIXq2srs88z0nucR+59mP1jWeZzOiXZSnDF1Xija/mzz23BJoDzleux5rYTG+vja392F3G6
      SNHE//vwV6kTBJbm9jUm04WVTCWZmJ3i7//jnxifGSc2P0dzfSOXrbuU91xzI8tau9BU7Yzv
      13Wd6bkZBseG+M5d/8nk7CSz8RhWixWf28unb/kEq5etoqulE0EQmE/OMzY9wb/c/k1Gp8aZ
      jc9it9rwuX189jc/zcr25XRG20/uCmYYBk+/8CxHBo5xx0N3kivk0XX9fAZAjVo5T2Ehjui/
      GLdqJ+oGgxogUJs9wNSYwh6vh0iXG1E4/wlg6DVqhQXSuTzz1crrL6CShvI8xwYyTKVUXC0r
      6DRq6LqOUS5jzE0ytU9jakMIl1TFI1eZPnaAydEZxoVGQm0yAVFE1PMUZyfp22dhrnMDVrGC
      QywzdXyQ6akkWVcLkU6DUE2nZpSpCvPUJl/k8NRGmpwSTu9LP5sO6CQnR5kbHaTotFOc1ymm
      s5Q5yw5nJpPpTWEYBoZhMDo1xujUOBZNo7Wxheb6JgDKlRKHeg/TGI4giRKyfPoqdyGdYnpu
      hv7RAYLeADaLdbEMA2RZZnB8iLA/RF2gDoumMZuYo6fvCB6XB1mWaa5vRBAEFFmhf6Qft8OJ
      z+0l4PVTKBZIZdIMjA0ST8bpaunEMEAUhAvzKIgV7/lDIq0dfHIN1EoT5ObHuOtPv8LB/TUe
      mvLw7vaLkC9EE+CNyo/Dwn4e2F7G1bKCyz97I+vqZZx6glzvj/nhf/XxwsMH2PPhK+mylPDI
      WfbfcwcD1UaG2j/L772nlS5vHvZ+m+8+eISnHjrO5e/dQEQu4NCS7HnwWea1Orjis3x0TR3N
      bgE1d4xn7rydnmcf4K49H+OqDgtdLwuAEkN79zE2dBz/te9Gei6D40jhV/ktmUxLhmEY1HSd
      HXt3MTwxwsZV67l4zWZWtC3jyd1PcbjvCHc/dh8bV21AUVScsuO05YxMjtLTd4TtL+7kU7/x
      cZrrG4k2NDM7H2Nidoq/+fbf43P7CfgCBL1+jg8e574n7+d3P/gp2hpb6WrpYHY+xlRsmv/1
      b3+NJMmoqobP4yWRSnK4/yg79+7C7XLz/3z+vxPyBbColgv/LCBRCWJzSVx3/TrmhmWeP97P
      rN6NBxH3hT6Z10trBreL3/mqgGKxEQhpOFUBybDi7Ogg5BqnngmmpqHOPgOO4+zpa8WIdnLt
      jR1EQlacqgrr3sO63ntR5/aw40CBixtE2lvdXPKJP6Aqa4iBMAGHiiYLiM4OwkE3hQg8PjXN
      QtAPLG5NaeTnqMV2smumlYl8A+/dbOXZwQKHjvxqvyaTaakoVcrMJ+fJFnLIisw7Lr0an8eH
      LElsWrUBvVZjdGqMqdg0oijitHectpz2aBt1wTAXr95EQ6geTdMQBAGf24coiKxdfhE+t4di
      qUgsEadaqxEOhOmMthMJNZw8VpEVrrn0KvweH6lMimq1xmRsmu0v7mDb5q1E6hpoCNahKAqi
      IF74ABBEDUmxUVfnxTIuUs3mKAKFQgopFSOl1COJAl4xRTJdo1QVcUYiWMUqVqlGanaWYrlK
      tlxDR0SUFBS7D49Tw2pRUATAqAE62fjisalCBR2R6sIEyYUKhbJxbsPfkh1UlbYuK6IgsNij
      Zyx+nKGjC6CLAgIglHOQmWWm5MMl+2lucOLQQJEAb5SAW6TRmeTpuSIptwSoBNo6EQQR7URX
      obFYMIYhoOsSggC/6CmrUimmyYz1kxKaKbistPgyHLT8GrSkTKa3iVqtRq6QA0BTNeqCYRRZ
      OVEhe/F5fPg8PvLFPPlC/ozlOGx2HDY7dYEwgiCc7LsXBBBEAYtmRVVUFFlGAERRRJEXK/GX
      jhVFAUmSsFltaKqGLMlUa1XyhTzx5DzbNm0l2tCM1WI9+blvmaeBzh97mr6f/iV3Rf4Oh1Xh
      07a7+d79aY7NWrj5299gnSvNaucCT//L/6RnfJ4n++PksKF5o7Rs/SQffnc361eEqZMBPQ9G
      ln23/S/2D85w374pctiQZImwWyDRUkSKnMNJKgooCtaXvVijmk0R3/40fQmNg4613NQKdTNp
      mBhltKGZlvoGOmyceJ8M+HG5bYTrJEYnp0kGfUAdFssrPq+WpxZ/ht6+eXbtt7Ph5lYaG176
      yRaYnxrluR89jfMdXyMQ7aKBB7Cdw2WZTKZzU61WSGcz+FwevC7PyypXQRAIeAOs7lpFsVQk
      k8+csRxJPP2TdqfnZpicnWZ4YoSVHctpbWxBFEQmY1PkCjl6+o6QyWVZvWwV8eQ8s/Mx9vTs
      5aqLt7GifRm5fJZSuYgoijTXN9EYfnnFd8EDQK8kKWVnePG54yT1Lfg62/ALAllgHiiNPEtW
      DfFw3XqWX+9no8vNSl8NaXQ/o+M7eaa6Ble3i0+9J4yNNMV0iuH999JzwGA4LfDFLSGyY4fI
      ju7igalmrPWr+Mh/i+BRJIRcnFzP/TwmK0y90QsxqqCXmNz3GFOjozz4VJ5adB2XblxGpwr2
      13hyss3uwO0NsJDOUCye2i9oADrFqQMkZsZ44P4nmKg1U7h0NR/sVKmzLzZdysO7iU3G2M5W
      Lg/7aWmUoPhGL8pkMr0ehmFQqVaRJPm0E1lEQUASJeYSc1i0V97hnZ6u6yxkUhwdOM7wxDD5
      YoFbrn8vbU2taKqGKIh0Rju55br3ceD4IZ4/tIfv33MrkiShKhqXr7+MrpYOfG4v2VyOUrlM
      Np/jnsd/iiSKzCXjGIaxOCj9Zn8hp72gaoVapUSpBLVyknxmjt6BGIUWCU9jHU5BoHri2Mpc
      Pym1whHXO/nAFcu5qMNPQK0wkRhh+tBOevk0G5vbufKm9YQZY2HwCA8/+2P2jG4kXW3mC1uC
      FObGWDi2kwOpG1jd3sXWG7cQ1XSIDzKSepx9KemNBYCho9fK6OUMcwP7GO4d4Zljdi7f2MTy
      LWuoV4DXCABF1bDZHRTmSlSqL129gaHXMPQy+blB4sPH2f7MMbTL1qKtuJx19QqiYYChU5rp
      Izlfo0/q5iavi1afwBtPNZPJ9HoYgG7oiKKIJJ6mX/lEd06ukKdQPPvkDMMwAKjUKqSzafpG
      +hmZHEUURT5604dQFRVVUTEMg7A/iNVi4ZFnH+PYUC+H+4/ic/uoD4Z5zzU3EvIHsVlspLMZ
      qrUapXKJfUf3k8ll6R3uQ9d1FFm5MAGw4x9+i0QZvgWgOpBtPlZe8zWuu6KdP7g4utgvfkIx
      9E7qoyv4689swAooVIEBJkZT7N2hcsPXbmRZ2EaTCtBMKAIf/8S19D2R5cjuPYx9UmV4bIzR
      HeNc/vEPsarZxfIT/SIlUcVml5FyAicT51xkD9K/Zw/3f/P7vOi7GWvzB/j6fTfTaAGf+ssV
      kUrOMz0xQn0ogNPxUsdNloWh/fTf+y98Y5+XWSnCb379Pi5usLA8cKJgIwH6LPfd+iJJRytX
      f/Im2iIiAbJv4IJMJtO5EAUBTVGpVMqUT/N3Xdep1qo01TcSDoTOWlatVqNSrfDPP/gGpXKZ
      zmgHv/uBTxIJNyCeEi6pbJrdB1/g3sfv55br38cXP/o5OqPtzM7HmInH+Nfbv8klazazfuVa
      6gJhZEnCZrHx6Vs+TjTSTCTcQK2mky/mL0wANG2+iajDw6ogIGlIqo1QRzNdERd2AU5tOFld
      TmwuBypvwWXKRhGMIsef3U7vaIoR/xVs3LyW+miUoAqWU+/6NQt4vHjTSSzpFPEy+GSwiDpQ
      oFgok0nreFtd2CwaoJPu3clo/yhPjvhpXLeRzroo3UEVn/WUbyK3AAu9DCxkmE0MU3n0B9y/
      V8CnliF1mH1DORIUeeq2B+loa6F40So6HaCZm3mZTG86UZSwqBr5YoFypUKlUkGSpJMDs7l8
      jqnYNM0NTWddCGYYBrPzMfpHBwn5Qlg0C8vbunDanSfLesnk7CT5Qh6P003IF8Tn9gBgt9rx
      ub20N7UBi1NLm+ubsGoWrJoFTdUWB6gRkEQRVVYvTAC0XvnRk+sAXovd68bhdvPL9ZZdYEYB
      9CSHHnmY3kozA+GP8VtXr2ZVi4dXze61WsEfJJjswbLgZ7YCLRIszt3PUsiXSC3oBH1e7DYJ
      0FnoeYz+3jz3D4T59G9exep17Wx8ZcGZOIwf5kgixfj8NLXBPg6e5lR/9s8/ZPW7rqPWtIom
      mxkAJtP5IEkiNquNbCFHLp+jUq2AALIkYxgGmVyG8ZkJOprbsahnrtUMw2Bidopn9jzLJWs3
      Ewk1sKpz5WmPHZ4YJZvP4ff6aQjXE/QGAHA5nCiyTHfHCmLzcwyMDnLdlmuwWW3YbTYsmgVV
      UU+2JjT1AgXAGyMBrTQ0utA3l/nf9z3BwupWVt58EQEmSc8c58k7tpNp+DiRDWuJEMYI+FCW
      Objv+R2I2Ra2ta3EWUtQyMYZm86QL1dBOYdTme2DyR3cNbgO/6rlfOnLm+lwqaefeWNvBKuD
      K1bdxZiY594fbSJ0fTOSpwCHbmXnIZ1nBy/lYxdbabPMApM8et8Ac7YOtn7py1yyzEXH6QoO
      rwX/cr5122eo6sYvXq9mYfYR7r4jyTNPZfjoA39Mk9XCMgdYzcrfZDovLKqFhlADLruThdQC
      9zx+P+u719IZ7WDH3p0c6jvMyMQoze9tIhJuOGM5A2ODzCXm0HWd7vYVBH2BMx7bGI4wl4iz
      98h+tqy7hFKpREOonlwhRzyZ4OHtjxONNNEQrseiWQh6A6xsX84DTz1EOBDiwzd+AEmSKZfL
      vw4BAKBiD0UIda8mvHuYyniKF3bM4yRBYT7OiNBKsL6OxhYvMgrOQD3BrlV49/aSH4qza3sM
      myJiZGZIFQwKGOcUAJVCjkpilkwxA/EJxg7sRhLBdkoLTRAlQiu34rdqhOxuoqs6qCRk+if2
      cXTPGLO2KuL4AhlrEO8KN1G7iNcoQT5BPF0iXkyQGztAjygyZz+16SdAuJtGn5WOsJtA6BXL
      5ippqDlxWEsoVPHU+XEJwoklYyaT6XwQRBFFUWiqa0TXdYbGhylXygyODTEwNkShmKcj2o7L
      4Tw5C2hydurkmoCAL4DX5SGVSTMbjzE0McKzL+7E5Xh1108k3EDIH8Lr8hDw+qkP1nFk4Bhj
      0+M47U4q1QqFYhFZlvG6vTTXNSEKIk6Hk5ZIC7Pzc8wl4jzx3FOIoki1Wv11CAABkPAvvxj/
      smW8c+//pGf/PF+/8xXrADYvrgMA8Hesxd8cYuNTf0Ffb5q/vqOIFFyP26VwSSOkNDiXPqZ8
      NsPC9CSVygBDB/cwdPDeVx0jKhrv+tudbGm0cF2bhQ23fAT3/v1Mfef73P3zPLGyhly3mS03
      reWKD25gnQVI5yA5zUylzMjUYSa//yfsPd33cOP/4cOXRPjKu9pf/8mbTKY3nSgIiJLEFZu2
      MDbVzJ//y19x5yN3MxOfpaO5nWsuuZKP3vSbhP2hk2MAz48n6oQAACAASURBVO3fzdD4MABX
      X3Ilmy7awEx8lp7+Izy8/VEefPrh037Wh951C+/c+g5uuuoGBFFAlmX+6b/+jbGpMWbnY9it
      NrwuD7/1no9yUWc3G1etRxRFwv4Qfo+fselxDh7v4Zs/+g6VamVxUZnx0tyjN12RfGKehalJ
      SqFVaFYbDc4zH11Kz5GPDxPTOlE0G22BVwyYGBUwqswND5ItVkjkK9SQEBULVk894YAdp11D
      EwC9CHqJif5h8uUqqZKOoDqRJQG3ViQtBqiKFjbY97HjmeNsf+oYU5zl4WmSCht/h2vbBG7o
      EDg2XaBaO/3XJggi/o6NuC3gtwLVDPlMhvjUNMmiTlkXEVQXnqAfu8tFvUNe7L6ppOk9Pk2x
      UqN0pvMIdBJ2aUQDp+kb0qtQijE9VWF+vkZkUyuaILxpC8PyYylKM7k3qTST6e2lUqlQLBcZ
      HB+mWCxSqpSxnXiSZzgQwmaxnex7n52PnZwS6nN7cTlczCXjJFNJpudmWZxc+mqLFbmPgDdA
      qVwim88xPjNBsVSkXCmffNhcfaAOt8uN65QBZMMwmInPks1nic3PYRjG4orj8xcAb3F6GWYe
      4olHenj04UOMsTg8e1qSCpf/Ie/bUMdHLm28gCf51mEGgMn09rN0A8D0upgBYDK9/bzlptqb
      TCaT6cIwA8BkMpmWKDMATCaTaYkyA8BkMpmWKDMATCaTaYkyA8BkMpmWKDMATCaTaYkyA8Bk
      MpmWKDMATCaTaYkyA8BkMpmWKDMATCaTaYkyA8BkMpmWKDMATCaTaYkyA8BkMpmWqPO4I1iG
      5PgYM0cP05eB4ku7rQgSoqzhbriIpiYvDfVuXAK8Yvez86JWSJEb2c3BQiNzuo/3b6w/p3Jm
      9v2U2YUix+de+Rcbgmjlouuvxa9CyAKU51iYm2P4yHEmM1UKuoRoC1Pf2oIvFGJ5QD31DKnk
      FsjO9tM3OEciXSRdBcniQFKtdF9yJR4NQjaAMqX0PAuDPRydypLIV6mKdtx1URy+OjYt9yMJ
      wq/Dlm8m06+9YqlIJpdh98E9pHMZ8oU8LruTxroIndEOfB4fsnT2zbmLpSK5Qp7dB14glU2T
      K+RwO1y4HC62rL8UTVVRlcX6Qtd1DMOgd7ifeDLO4Pgwuq4jCAIhf5DOaDvRSJR0JsX49CQ9
      /UeoVCu88un/57F+SDDX/xwv3Pptbh+GRPnEy5IF2eql84rPce01y9gaduOUFjd+PN+q2TjJ
      F27l3thV7K+uPOcAGH7yG+zpn+fWfa/8SxhZDfH5zdeyynUiAEoTxAf38/Rtt/H06KlbQt5I
      92bXqwKglJlm7vBDPHj3Xo4PJxjKg+ZrRHOH+EzblXR5XwqAEoX5YUafvo07to9xfKZETq6j
      45IbaFx1CRct96NyXn9gk8l0Qq6QY2Jmkn+/83sMT4wwE5+lNRLlqou38aEbbsHlcL5mAOQK
      eabnZvjOT77P0PgwU3PTtDW20NbUSnfnCtxO98kAMAyDaq3GrgMvcKi3h3ufuJ9SuYQsSWxc
      tZ4PvPM3CPlDjE1P8MRzP+ebd3yXXCGHrr9826vzuCHMKH0/f4xd//Ft+q75RwKNzbx/GeiV
      GIXULD//xjcZb7mRqcar+O5vLUOTz39vVGlukJmH/pyvnwiAp/70stdZQgZIc8/vf5xp2wqG
      NnyVW5ZzylaXMoIg4a6vQxPzWKQ8z/z9VxjIe9lpeRe3bIvQ5CrBsfv42V47B0ZtfPU7XyYs
      Q7MKud3/xt4j0/zD3dOs/+CHaOpsYVujgl6Io5cypFxXE3ZBsx+S2/+R/UMp/mm7lZvet5WO
      Fi9RjvL8I/s5+nw//j/+PmvCMldF1bNczy/P3BDGZHo1Xdep6To/fOAORiZHcTpcdHesINrQ
      zJ7De5mcmaR/dID/8dk/pi5Yh916+k1ac/kcO/fv5t7Hf8q67rXU+cN0tXbyYs8+pmJTzCXj
      3HDF9Vy+YQuyJDEwOsjzh17kxcP78Djd3HT1DVgtFkRRYiGdoi4QJujzI4kS+UKehUwKwzAw
      TtluslAsXpgbRKuvHk84SjQKesVGYUGjIwST5RwTo3HyehcC8OZUVedTGciSzUhULU7c9VEa
      miDqPs2h1TwUY4yOlEhaNXzd7TS21BF1FqEcJdgzhiM7yeh8FdWp06zWiI0MMRcrkXW1EW6K
      0tEWJVovU8tZ0YtppqpgV6tAlfj4CMl5iYpvFeHGFtqiHhopMRM8Rs6VZd9onDrFSTWqInFh
      Wlgm01Kj6zqFYoFEeoFsPsf67nV0NLcTbWginUtTKBYo9BVJZdM4Hc4zBsBCJkUmlyFfLBBt
      aCZa30RHczupTApFkTk+3Ec6l6FQLGDVLCxkUoxOjuLzeGkMR+hobsdisSAKAvHkPDaLFVmS
      URUVi2bB5/G97PMq1QqZXPbC9xCIShCbS+Xad6yld49M5tAQMeNS/EDgQp/M61YA5onHNAqa
      itUC4pkaLoVZSB9g30ALtpXLuPpdHUQs4JIssPYm1h76F+yTe9jVU0JtzbPGk2fvrqOMSa20
      vO/TXN7tobtOA0Cy14G9jjYAikCKo/sHmZWjrLz6XXQ1akRdMrCWVauP0W4d4Vu7e4hILZTW
      ebFiBoDJdD6UKiXmEnPkCjlkWeaaS65EURQkSWJj93pKpRL9owPMzM0iSzIhX/C05QyMDZHN
      5wj5g6zpuoiQP4goiqxdtpqGYD2P7XySXD7HXGIOr9vL9NwMhweO8nsf+wLRSDNup+tkWfXB
      utc872w+RyKVfOt0ES8M7Gbm+TvY6f8kFk3menUnj7+QZzypcvGXvkCbLUOrNcfu23/AaDzN
      gck0JTRkZ4jwymvZtrmZ9iYvXgnQC2AUOPzA7QxNJ9k1kKCEBrUillyCfk8ZfK95Sq9WLUM1
      S77qxpAcuF0gn+kbzGVhepLJUAMNwRDNGmgiLE688uBwWgkEJSZnYqS8GSguMDHtIx8Is7zT
      g92mnKlgYJrZqQB5b4iWZg2r5Rd9izaHAy0QRJ6cpZTyEQMaMad7mUznQ7VaI5PL4nG4cFjt
      aKqGcGJGiyAIeN1eulo6KZZL5Av5M5aTy+fQFJWWhmZUVT1ZhqzI2K22xdcVlVQ2hQFUa1U8
      Lg8hfwCfy/O6z7tvpJ/xmYkLHwCGUUWvVchkClR1kCwaMlBOz5Lo20FP4CqsVisXOUYYGykx
      tmBjWcUgl1ugVJpm4Hgvw/NZBudylFGQbCmSQpSWqAu7x4HXo1ArpdGLMYZ6e+mfTtE/mqIi
      WJAEHbdYoWDXX/M8T6tWg3KJsi5QK5UoJieJSaBbRERRRrHakVUVt1WGSgUhnyNn9VOx2nDK
      Lw3IioCGZlGxOxVS2SzFfBrKKVI5jYpTIiCmSSeqTGd1dENAkFQEScHrdyNTQRbz5HNWqg4r
      Qaf8shCSVQ3Z4URNZ9ELJbLAOV6tyWR6DYahU66U0VQNDZBeMdBrUTW8Lg/lcoliuXjGcsqV
      MpIo4Xa6kUTpZABIooQsyzjsDgQECsUiiqxSrVaRJIlsPsf8QoKavjjNUhREbFYbVs2CRbMg
      CMLJshbP10DXdeLJ+cVWyZv/lZydXp4htzDGvffsYqa5kcjm9UREkQVgDsgf+jFTcpRvtd3A
      h353OZ/tChBQa0w++ziHd/+Y28ufYuMVHfyfD2wgzCjJwcM8+P//FU89/jnuP76F//p4B8nD
      T5HYdydf772O1RuW8Zd/vZUWTYf4ICN3/wXfTGn0nMvJl0uQSbOgjzC2/yiPfuFebkVClK3Y
      /W2svO59tKzZyB9eWY8AnG3M3+XxUatvYm44STaRgmSChK6TnjxK7sd/wqOHh0gncqRKFmwN
      a7AGO/jLf/wDwipELWcr2A1ChKbYELZsjiRQO8vhJpPp3OmGQblaQZYVpNP0B4uiiCIrjE2N
      I56xvxhyxTyyJOO0O191nGEYlMtlUtk0siyjyArpbIZ4Is4f/d3/IJVJMzwxgigK2Kw23nPN
      TVy35Rqu2LgFu9X+srKq1SqpbJqxqXEmZ6cuTAAM/fxWhu0ekk+CQRldr5EK3UDT8tWs6Q4i
      S79IqIpjBS5/Jzdd1Up7nR27pAMxFhIFRgYlVl7RTXt7EI8EEl6c7no2X9zF0bkSYyNjJPAx
      k0wyNZikfd16WjvrCSkiiihQFSQUVUQUhXO7LdbqwC3xvs9/iUyxQgZAr2FUCpTmehmY7WHg
      wUl2r/wcjVloOUtRhXyO9EICp8OOxVoGVUUTVJyeEPWbLmPN2iJarYJezRMbGSUVO8K9jx/n
      ko48dWvgjFO3CgVYSDLvclC2aNgxu39MpvNFQEASJWp67VVTLGExIGq1Gl6XB5fDdZoSFmmK
      iq7rFEtFDOMV5QgCsiRjs1hx2B0AKLKC3WbnsnWXYtU0KtUqNb1GtVplam6Gqdg0Lxx6kW2b
      tr6sVZIvFugd7kMURUL+4IUJgIkXHyJRhoMAqgPZ5mPlNV9iVUs721Z5EU8ZoazZWnGHOtm2
      sREroFAFFsikS8xMSrQtb6MxbMMpAbiwOQKsWtWC9kSFzOwMGTLE02mmJzNErl1OpNmF/0R3
      ek2QUBRxceD2XAJADYAa4KrfWPGL16pFKtkZ4num+N7dgxw8dIgjv/s55MLZA6BULJDLpHD4
      rKiWPKgqCgqSM0SwextX1Duot4LVmOHAT29lMPU8//v5UXyKxLVrzjJfqlSEXIaU3UtFVc0B
      YJPpPBIEkCUJvVY77U2ZYRjohr44A8h2+hlAsFihlytlSuXSqxZrCYAsy2iqdnIWkSxL2Cw2
      rti4hUi4Ab/HR6lcIple4F9v/xZziTkKxQJbN17+sp6IUrnE6InWiNftvTABsPWrt9PQ0s7H
      V59yUYJ4on/q5cf6o40Emxpw8mtC0pDd9dRd8wm2DX+T+nwvozPQ5vFCWyedo0ew2yWO5MBh
      AYtUBeZJJrJMjlfpXN9MsMEBPitN7hQ5S4F8zYMigkUGaGTNmtWsCpT4m+/OkE01EaeNps5x
      YpLEoSM5LrZpYF38KTMLSfLjo1Q612ML+WgGzjScbDKZ3hhFUfC6PMwl42TzOfKFPIqiIEsy
      hmEwMzfD84f2cOXmbbgdp5svvsjj8jAyOcrh/iO8Y8s1J7uCSqUS6WyaQ32HCfoCBDx+XA4n
      yXRycczA4cJpdyAIAhbNgt/j5z1Xv5v9xw5xdPDYy1oTuUKOmfgMO/c+x/uvfy+rOlZcmN4B
      QZQQJRlZ/sV/krTYFSO84jEQJ8bPEU75f3DjcGqE6muM9o8wPTVHtga1WoZ8LsGxY+OUJQVH
      XQgHdtxWCx6fQmx6gng8TqEG1WqBaiVPOlumUj23YdFyOk524ij9UwkmEnnKNdAxMCoFipO9
      TMcrDKVcOB2gOZzgaKQpMI9NnKXv2BypbIliuUBx8jCTMZ3eZISmBgWP2wFCkJZ2Ky5XiYH9
      x4ktZEnXdNCLJJNJJiZn0PxerHY3dhw0NAZwOiVm+o4RW8iSKJbRi5NMTcU4fCxBpKkBn9eD
      gtkCMJnOl5f67VVFpabX6BsZIJlaQDcMxqYnmJ2PkcqkcDucuBxnvq0NeP1oikoml2VqdopY
      Yo6arjMZm2JoYhTDMFAVFafdiUWzYFEtaJrG0MQwI5Oj6LpOtVajVC4yOjWGrtcI+YMvGwCO
      J+dJZdJ43R6cdgc2q+3XoXtYBMJ4/VbaOmv07Omhr2+MZA1qtQSZhUl2PXeMgqTha2vBj4eg
      y0l9xMpIXy+TE5NkalAt5ygXM8wvFCmVz21YtDQ/Tur4Tl4cmObYdIpiDXSjRq2UIXN8F/1j
      RfbNhQn6we71g2cFK5uncInD7Nk5QSxZIF/IkO/dTu+ozu6ZLlZ2aYQCPiDKqo1OAv48Lz62
      i5HZJPFyFWoZpqcmOXJsEEdTBJcnhAcPncub8HkVhvbsZGx2nul8CT3fS3/fKNt3TbNsRSf1
      dUE0zAAwmc4XRVbweXxYNSu1ao0Xel5kOj5LrVbj2NBxhidGmEvECXgD+D3+M5bTXN+IzWol
      mUrSOzpwohLX6R3u5+DxQwDYLDZ8Hh92qx27zY7damPfsYMc7O2hpi/ORsrmcxw83kOlWqG1
      seVlATA2PcFcMk6kLoLf7cNpd7511gGcnURo3TX4upbxoa/fxviOB/nvDxSoICNZfbhaf59r
      rt7E8mVNgET4oi34m4Js+7sfMfNgmS/dJaD4lmHXdJZZIKFyTsuOrV4fSnsH1Z/8Jy/GFvjR
      zAL5ioGOgmQL0LzmWq5950purAerZAU0tn7myzQc6yd779/ynd01srqCZI/QuuEKbnx3N1us
      oJz4jcJXf4lNQ338UfEBtv/7k9ybrVCqqVi9nWjOD/Pnv72SepuMBHgv/x3WRXr509RdPPWf
      u3kgU6MmOfC3rMN143V8bosVt2pW/SbT+SQIArIkccO26xmbGufbd36Pux+7j0wug8/tZ93K
      1fzex75AY10DVsti//2jOx5nfHoCgEvWXsyqzpXYrDbWrVyL0+7i+/fexmw8RiaXJuQLUheo
      48sf+wINobqTzxNa1tpJ0Bfghz+7kyd3Pc2//uBbIAhoisrFqzfR1dLJxlXrkUSJaq1KpVJh
      94EXMAyd67e+A793MYzOYwBYsHoj1HVvQg5Y8TvOfrTqDOBp3URX0Ivbf2rtvFiJKTYvilWh
      q6MZJZYmKaUooaE4w4S7ltFS56PRo5441oeidLK8M4p9Pk95vozk8WG3yYQCAivVCDmrEwrT
      xGJpYrMpCpxlZo0ggr+dOk0k4goRDoWoCirJiky+ArqkoXhaaWuP0tjeiFcFAREQcYbbCGZq
      dLUNUoiVWKioiN52WtuaiHaEcZzSBlNcdbhDBbo6WxgqTUOySK5mwdXQgs3fRmvAil04MSjk
      COMK5OjqamOwGINkhaLoJdLSSiDaRZ1DRLkQj1g1mZawl+6wA14/NV2nrakFm9VKIpUkEmqg
      JRKltTGKpmonp4laNAsO20uzeRar4MX+fDctkWZaGprRFJV4cp6m+kYi4QYa6yLYrbaTn2e1
      WAlJMtGGJnS9RiKVQBBELJqFtqZW6gJh3M7FMQcB4eRTQkVRJOgNoJ14qNx5fBjcW1ytBBN3
      cM+dL3D3j59ngLPMl5c0eOff8MmtTXzx2tYLeJJvHebD4Eymt5+lGwCGDoUJpiaTTE0myfEa
      LYDQSpr9VtpC9jMd9bZmBoDJ9PazdAPA9LqYAWAyvf38GswCMplMJtP5YAaAyWQyLVFmAJhM
      JtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQy
      LVFmAJhMJtMSZQaAyWQyLVFmAJhMJtMSZQaAyWQyLVHncUewcfqfeZIXbv0ePxmFRPnEy5IF
      2eKhfcunuOrKLi69pI2oBOIF2LyqFB9i9tH/j2/Gr+BgdRkPfeWS11lCDagxveM/OHxkiHse
      OshwpkxBV5BsLax+13tpXbuRL24NIwASQHWBxNgx+p66k7uf6mN4NkuspGFrWIUt2MIf/cWX
      abBC1AZUx5k53sPzP7qV+3vmGU8bVG2trHrHu2lZfzFf3lb3i3LJkho5Qv/Pvsttz03QO1si
      L4Vo23w9kRWb+JOPdKMKApY38ws0mUynlVhIMD4zyV99628ZnRpjdj5GS30TV2y6nPdf915W
      ti9HU7WzlpHJZUmmk9zz2P2MTI5wsLeHT77/t1m3Yg0XdXWfPO6hZx5l+4s7uP1nPz5jWds2
      bmXz6o18/sO/CxiUyiWeeeFZ+kYGeGTH46xbsZb2ptbzGQA6Rq1CtZjH1bYNh9VJhxcMKhi6
      QSGxj5lRhefcHpq6vYgXYvtCw8CoFimVKxSq+ut/f3kBynP09BeYzXloWHs5YUFH16sYxSzV
      5BSzew4ytuk63LKBXzZIDe5hfHicXQNgbVlLZ5vMKlFBtvqRrW5kQDQMwCDZv5fJ0Sl6ihEa
      LuqkXhRQagXKuWliL+5hcMNNeBUIaVCc7GF2fIRd03bcbetZ0y5hEStUSVDr28Xh2WXU2UTa
      XNKb/S2aTKYTDMPAMAwGx4cZnRoj4PUT9AZAgEqlgiAI7D96gKa6RkRRRJGV05aTL+SZmJnk
      yMBRNFXF7/FTF6hDVRR0/eV1VX2ojtXLLiKTy77qXMqVMj19RwgHggS8fgQB4ol5+kYHmF9I
      IAgCy1o6cdjs6IZxYTaF77rh80RaO/jkGqiVJsjNj3HXn36Fgz0Sj8YC/MZyD/KFaAK8UYVJ
      WNjPI89VcLV0seUTN7KuXsapJ8j1/pgf/tcgLzzSw/6PX0eXxcAv68zu+jEHB6rcvi/Kp//0
      o6y+qIXL/FCITVFOLzAJKBiAzsT2uzkSs/Jz3sUffWQLa6Iqgal7uP3W4zz90A5233ITK5yL
      AZDteYj+wQI/HGnli59/N+tWhljGHh75z0fZ8+iDPHr1h9kcUcwAMJnOI8MwqOk6zx/cw/DE
      COtWrOHiNZtZ0baMJ3c/xeG+Izzw1ENctu5SNFU7YwAsZFIc6jvMXY/eywff+X7qg3V4XG68
      Lu+rjl23Yg3rVqzhI+/+4Mter9ZqLKRT/P1//ANrV6xmZccKREFkZHKMex6/n4ZgHV6Xh/e9
      42YmZiap1WoXJgBOJSohbG6FG9+9kXifwu6jvUzr3XgR8Vzok3m9tBbw+Pj8n0komgWfz4JN
      AREbrmXLCLvHaTDGmJiCsD8G2iTbf75A3NnONZ//NJctD9DmXvzKNW89qitEqwyyEAemePE5
      g4Q7zNW3XEl7vYOAVUBuvpGN6+IEqoe489khpOUKm30aB184znSljtXvfC8rokHaXBoSG1m/
      YZgWbYrff2Yfnk0NXN3RgYY52GMynQ+lcom5ZJxMPousKLxr63V4XG5kWeaSNZsRgLHpCSZm
      Jxfvvls7T1tOwBvgHZddzaZV6/G6PMQSc0zOTp3cBP6XMTs/S2x+DlmWCfqCdDS1IQgCq7q6
      +UpdA4qsUCqXmJ6bQZLkX00ACKKKJFvw+11oskAtX6AMFLIJhMQ482oUSRQJS/PEElXyFRFf
      Wzt2uYJdqpEYGyNXrpAqVNEREWQNzRUi6LVht6moAmAs9tWnpsfIFSokcmV0RCqpKdLxMtmS
      /lJH+usjWUFVaIpaEAUBFQADvaqjFwtUDIGyrKJKINfyUIgxlVCp2N00ddbjc0o45MUfVFQ0
      UMAKUC1CcZ65BQsVu4tIkxe7FVTJAMmP12OlEhKIzS6QjqjUsBKP1ShYVEKNIVw2FassAS7c
      XheWBhfpI3GyaRd5OHGeJpPpzVbTa+QLBURRxKpZCPoCyLKMALgdLjwuDwGvn0KxSL6YP2M5
      qqLgc3vxuRfv+LP53C9d+b+0q+98MsFsPIbP7cVpd2C1WAFw2Ow4bIt7mWdyGWLzc7xU8gUP
      gDNJ9D1L/0//krsif4fDqvBp29187/40x2Yt3Pztb7DOlWG1c4Fn//1r9IzP82R/nBw2NG+U
      lq2f5MPv7mb9ijB1MqDnwchy8I6/Y//gDPftmyKHDUmWCLsFEi0lpMg5nKSigKK8YmC1Ri2X
      Zn7nDgaSGoftF/HeKIRSCzA+xFCpHY8tylXLZOxnug3PZyA5wWQ5il2L0N4KNgAEQMbhdGOE
      QszvnyHdrlBEY2o8TCkcpqPNis32i6LsDif2cB3y+BTFZIBZwMG55Z3JZDq7arVKJpfB63Tj
      cbqxaL+oHQRBwO/x092xglK5SDafPUtJb4xhGBzqPczQ+DBXX3olkVADovja7f4LHgB6ZZ5i
      ZobdzxwmIW7Dv7yToCCQAeaB4uDPSathflq/me6bQmzxelgeqGEM7mFoZDtPVDbgX+3lCx9u
      wM4CxWSC3ufu4MCLt9A7v4Y/vDJMZmQ/2aFnuXuiFWdkPZ96VzNeRULIxsjsv4uHRIXxN3oh
      RhX0IuMvPMjEyAj3/TyHsmwjV2xZyXINbHoJ0ilS9hT5uUMc+M8Yu2YXqBarlNBwhLux+5r4
      zQ9txqaD8ywfZbM7kP1BWEhTLthJo3HGIWy7Hbx+QgsLaIUCaTjzsSaT6Q3RDYNKtbp413+a
      O3ZREJBEidn5GJp6ftri5UqZxEKCXCEHGHQ0t+GwOX6p916QAKjk0xQySZJJ0Muz5Bem6R/P
      Um7VCDeHsYsCL80SrSYnyGoyY+GNbFjVRXebD79aYjwxzmTPi4wpnyPY3MZl16whyASp4SMU
      nvkRuyenWKg1U7syQD4+TuL4C/QW38fqQAcXX30JTRYd5gYZmf0Zu1LSGwsAvUq1kqecm2dq
      8DDDAxMcmnJx2bYmlm1eQUhmsRuqXKKsVigX88SPzTIyOkcmW6ZgaDjqdezBIlfdtJ5gRT9r
      AMiKgqBZoFRGr1moAMaZDwbNgrVURqrWzn6syWR6w3RDRxDE099xCwKCIFAqFSmVy6/++5ug
      Uq0yv5CgWqsiywp+j/+XuvuHCxQAu/71MyTK8D0A1YFs87Hymj/juiva+fLFUZRT+ieKwWup
      i67ga5/ZgBVQqAJDTI6n2btb5bqvXc+ysI2ICtBIsF7nox+9iqNP5Di8Zx8Tn7YyPD7B6O5J
      Lv34+1nV7KLrRBdJSVSx2WWknADVN3BBuR4G9+zh/m9+nxd9N2Ntfh9/+6ObabSA76WQVxSw
      O7ALEr72Nq7+ws2sDtjwyBXE9HGevuM2ep77Z/7ih5u4uWWeTyw/88elF5JkpsYhfBkWh4Kf
      xS6d015CagFmJhkNB2h3Ok4eazKZ3nyiIKApKpVK+bQ3WrquU61VidRFCAdC5+Uc4sk49z/1
      IG2NraxsX4Ei//LV+gUJgJbLP0CH08e6OkBSERUrwdZW2pvdOEQ4teFk87iwu11vzZkrRgH0
      AoefeILeiSyDwXdw6WWbiUQbCWtgPbWm1Szg8eIrpnFWdKoWDUESkUQZwVpHfX2IcpufB9IZ
      iojg9uGT90HVy2wMlnkAdXF6aLGYJ51O4/B6sNpUjsgpjgAAIABJREFUFDS8/hRJa4qZWJmS
      Rwbr4rdVKhaopBbQ/W0odituzAAwmc4XUZSwahZyhTzlSplypYwkSYiCiGEYZHNZJmYmaW1s
      waK++csy07kMqUyaTDaD1+2hse71DW5ekABovuw3Tq4DeC02twu7y8nZ18z9ihhFMBY4+tST
      9FaaGQ59jE9cvppVLR5e1eNmWQwAb2kQS7WGbtUQRZBEEaz11NUF0dr8pIdzFBDA48crx8lX
      AsTiULZxYvqOQbFQIJNO4/R6sFlVVKx4fWny8gITcxXKLSIvxWWpWKSQTlHze1DsNjy8BYPU
      ZHqbkCQRq8VKrpgnl89RrVYRBAFRWvxXl81nmYxN0dXS+Zorgc9FNpclnU2Tzefwurw0hhpe
      1/t/DeoGCWgn0uxm46VlHr3rEZ7bcYCJMpTL48xNHeUHt/2ctOqgcfMGGqmnLeina4WTvc89
      w+Gew8yVoViYJ5+NMTqZJpc/x/6fmeOw9yfc0b+BSfc2/ttXL6WryYX9dMdaouC9hpuuGafB
      fYBvff0pjg4nSZRKVPO9HDsyxDPPjLFuZQeN4W5gPZdfI1JfP8n9t/2MY+NzzOTSlAfu4Nld
      E3zvYTfXXbmM5Z2tQD0Xb1tNU8TK8z+5lf394xxPZqgmt/Pczn38xw+OsfXKLSzvasPGy1tY
      JpPpzWPRrETqIrjtLiqVMnc+cje9w/1UazWe3P00ew7vY2h8mJZIM9FI85v++bsOPM/QxDDX
      XnY1jXURLJbX18p4y0wDPTsZR7iJ0EWbaXl2GH0syY7HphZnAS0kGbN009DUQEeLBwkJRzBC
      aOU66p47RnFwhqceGcOmqpCbJV+EwjkOi5YLecrJOQrlFPEZmSPPPE5WPDGX/wRBlGhYdz0h
      u0y9w0LdqtWkpis0DR6l9/kkc8cVVCPJxLxGwrWOTa12mnwKoBBcsZaG8RytPccZeKFAslfG
      nh5jRghg6Q6ywicRPjGeYY+uJlyNsa5vmukjOylO2xkQphlO28k1bGJd1EKTVzIrf5PpPBIF
      AVmSaW1sQRAEhsZHyBcK9PQdYWx6nGq1ykWd3bgcLjRlcYBwdGqM7InHONQFw/g9fuaT80zN
      TTMwOkS1tjioe+D4IWbis7gcLnqH+wj/X/buO0qO6z70/LdS59w93ZPzAIMwyIkAcxJFRSvx
      0bJMS7ZlW5Kt57THPvtk66ylfbYkr/ZZXgXLoiRKtCSKoikxiWImSDAARAYGwOSZnpmezrm7
      uruq9o8BQYIINEkAT9TU5xz803P7VnUPpn73/ure+oUihHwBVvSvQNc16vU68XQCwzBY0TeI
      3Wo7YyVSvVEnlljgxOQI2UKOUrnEXDzGQipOo1F/OwSAxcef+Qc24e/v57rnP8ehQym+dc9r
      9gFsWNwHABDoHSLQHmTdw5/nxIk8X727itS0Aa9HYVs75N/kTKxSKpJdmKdeH2Xy8D4mDz9w
      RhtRsfLOf3oHO9plWlwyvTfcgvXwAcpH7+A/fxBjOlenLHtpW/dewv3v5DNbvKc2anVc9WGk
      o/vJH76de374n0zlDDRnH0M3vZ/eD23n6pZXRvPuNe9imfsQH5v8Bt958CmOxVRKcjP9226m
      ffsHeN+QFculeL6SybSECYKALElctn4LbZEW/u5rX2AiOkksuUB/Zx/XbbuaW9/9EZoCoVMp
      oBcP7mF8ZgKAa7ddTdAXZDw6yS93PsK/3/09SuUSunHm4u1rtlzJljWbGOxdTq1WI18qMD0/
      g9vpZqCrH6fdccZ7qmqVPUf28o0ffZsjo8NUqpXTz994eRvZBadSyeUoJuLUAv1YbDaazjy/
      U2qlDNXMLGlLJ4rFRpvvNWtmjQbQIBONUq41yFcbaIiIshWrO0TQ58BpV1AEQK+BUWNhepZq
      TaNY1xEUJ5Io4LKolEQfmqCwQnqOJx87yuOPHCbK4rM+z0qywLZPcfNyC+9faWU8oaLp5/ja
      BAFfxyrcFvDaAEOlVi5TTCXJlOuomo4uyFgcfmSbk65mFwInc3GGSq1SpphMkC7VqWlgSDYc
      Xj9Wl4sWz+J3snhZ12hUy1QzcRIFlUrdQBcUbC4fFruL1pAdURAuWI6vPJ1DjZUuUG8m02+W
      eqNBra4Sjc2h1lTqjTo2ixWPy0PQH8RmsZ5ampnKplFrKgAelweXw0mxXCJXyBFPJxYf/naW
      y7LH5cHpcNLS1IxuGGiaxkJyAUmSCAebEEURUTj9L17TNHLFPPFUnEq1csaD5S5iAPg1p9dh
      4Vc8+dgRHnvkCFHOs2FKUmDbp3nPuggf2vLGbrL8pjADgMn0m2fpBgDTG2IGAJPpN8/bYBWQ
      yWQymS4GMwCYTCbTEmUGAJPJZFqizABgMplMS5QZAEwmk2mJMgOAyWQyLVFmADCZTKYlygwA
      JpPJtESZAcBkMpmWKDMAmEwm0xJlBgCTyWRaoswAYDKZTEuUGQBMJpNpiTIDgMlkMi1RF7Ei
      WI705ATRA/s4moPKy9VWBBlRseHvWE9Pd5D2dj8+AS5F8apGOUNp9Gl2l7tY0EN8dHv7G3p/
      NX4CNTbMgwezVOtnrx4giBK91/wuHR6DHp9BKbqX+EKaQ8fmydehIVpQfF30Le+hpS1Cl+tV
      MVjPUUzGiR46wPF4mbwKuuIj3LcMX0s7W7sWS88vvqNGNRsnfWIvB2bypIoaddGJv60Pd6iN
      y4eakATh7VDyzWR626tUK+SKeXbuefZU6UWv20tXaycr+pbTFAghS+f/a1RrNapqheGx42QL
      OWLJBdavWEtzU4RIMHyqXb1RZyEZZ3R6nPGZcSrVKrV6DUVRsFttrFuxlrZwK5HQ4nsqaoVc
      Ic+ufS+QyWcoloo47A6cdufFvD5kSY7vZt9d3+LOCUjXTr4s2ZDtfgaudHD9dctxtvrxSpem
      cLlWSpPddxcPxq9hX2PlGw4AamyY7L67+M53RsmWz14/TFSsvLPnd9nRbtDj0ylOPcfogRF+
      +tPdTJWhKrlx9l3DzR+wsMnTdEYAyMeGOfLQD7nnQOL0kpCbvWzucr3qe1KpZqaJPvtT7n16
      +vSSkKslNg01YeFtU/TZZHpbK1fLzMfnuePn/3GqJGRPWxfXbL0Kr9uD3+N73QBQq6tkCzl2
      7nmWsZkJ9h07wB995BNsXLXhtADQaDSYmp3mkWcf46GnHyaZTVEsl3DaHQS8Af7olt9n69rN
      hINNCIJAuVJmLj7Pnff/mNGpMebi84QDIZpDkUtzfdj2qW8Q7ujmlpWg12KUs/P88p+/zKHH
      38MDx67jB59YgVX59c9GuVe8A2f/lfzkXRr6q+voVJJox3/Mtx6o88ywyOVD0F08CEde4PPf
      nMPatop3/q+/YVMQ3LUUiee+z8/3Ps2/PHCEtm/ehl/UaRJ1hn/0jxyMyfzA+DCf+L82srzV
      gn/hYe67bx8v/tNj3LPs6wy4YL0P0k98nZfGCnzlwBpu+aP/zm39QXo5xM57n+PgPQ/yrWV3
      sqFZ4foey7k/kMlkekt0XUfTde599D4molPcsP1a1g6uobejh+f2Pc9EdJL/9/tf4+8+/X/S
      2tSM0+E8az+x5ALPH9jNLx5/gBu3X0tnawc9Hd20NDWf0bZQKmK1WOnv6uPbX/g6Hpcbt8NN
      tpAlkU7y//3Hv2Fg0NA0elo72X14Lz99+B5++1230BZppau1g1Q2RTKTujQBwOLy4/Q10dQE
      el2kahUYaLczY6jEZ5OUTl5M32St9ktGVGyIio3gabWNG9SzZeL5DJK7HWtHmDY72DMFSslZ
      EnKAZneEvtYmmj3gaMgofV0ER3J4shlmsiDYqzQ5i8yP58mpQfzd/USaW2iJyLiVAdqC83S6
      4oxE8/ibRfBJxGeiZDMycvNmIs2tdER8NFGgM3KIcrPGs5Nx2iweGj1BJC7NDMtkWmo0XaNc
      qZAvFlBrKsu6++ls6aClqZn+rj4KpSIGkC/m8Tjd5wwAFsVCUyDEyv5Bulo7qdVrxNMJJFE6
      a1u/109fRw/tzW24HE6cdidOuwOLYjl5DIGKWqFYLlFv1LEoFtoiLXS2tNMcimCzWrFZbJc+
      QyAqQexumauvHuLIbpniwUkSxg50fv0DwNmpVMppDuzaTTEyhKtrByttkCtlSU6Oke/5KN29
      XWwNKYvNLR5CW69j5Z4foTdeYO8UiOEMA84pDu83KEdCbPudrXQ2QcBmQOvVrF5xiFA1wxdf
      ihJeY4FuO8cPTpCQuxi88nr62qx0uGVgiBWrDtNtGedrLx6ly9qNujGIHTMAmEwXQ61eI5lJ
      UqqWkWWZKzddjqIoSKLIusE1lMoljk0cZyEZR5GVU3n51wp4/exYv40d67cBMDMf5cjo8Flv
      jvo8XnweL32dPae97na5QYBl3f14nG5qtRrJbApRlFjes4y+zl7CgaaTxwvgsDl+fVLE6RPP
      MPvMHTzV9MfYrTLvsj7FQ7vKTKUtbP/LP2fAmafPXuSZ793ORDzHS9EcVWwo7gjNQ+/k+u3d
      DHQFCEiAXga9woF7vsvIbJpnRpJUsSHoKg41xfGgCsELdOLxl8hPjHH//m5abu3kqu1tADi8
      PuTOHlyP7qNolNgZX8aQT8IrizQqDmxOHV9ziSNTCXrrC6BEma11YrG2sqYL7LaXDyDhcnsI
      NTWRGp8n122hgpW52SbK/mZ6u23Y7a+kzxwuN7amCPJMjGrWTwzoAMxEkMl04TUaGvliAb/b
      i9vhwmqxIoiLF21BEAj4AqzoXU61VqVUuTg1tRtag0q1wuETR4kuzDK7MEd/Zx8r+wcplUuM
      zUyw98g+dqzfhq7rNIci1Bt1avXapQ8Ahl5Hb6hk0kXqegjF6cACqMUUuam9nCiMY7U5GHIn
      SKQa5IoOarpBtZiiXJzhxPgss9ky6ZxKnRKSalAfOcZkjwer20mgyUqjkkErzXNibIbJRIFE
      toQuqoiGhqFr1M9+//aNfhIAqukZCsk5Zhqt9Ll99EYW80OS3YM11EmbPIZUnufEyAg2n4xP
      MdDqJVKlClVJo1RWqVUqoFao6g4k0Y7LCYsTv8X/SFarDafLTa1QoqY2qGFQKdtouK24nBLy
      q2aJstUKLjfWfBGqKqVTZ2oymS403dCpNWpYFAsWBSTp9JSNVbHgcXmoqlWqavXCHVfX0XSN
      aGyWcrVCoVRgdHqMVDaNz+3F7/Hid/swDLBZrYiixER0kopaIZVNoWs6al299AFAry9Qyk1z
      330vstDZRcvGtbSIIlkgDpQP38Oc3MXtvTdzy+8NsnZZiJBFY3bnEww//xN+WvsEm3b088UP
      byTCFJmxwzzwj19g5xN/zIOjO/j+bf1kj+4kvfcuvjlyI2s2Lud/fOEKuq06JMeY/Nnn+UbO
      wqG3/EkMQGfipRc5NhEjufUTdPa0cfnJmYXYNIjY1MOnbv4qB46+xI//5g5uVyXqkgNn2wpC
      +gRuQNM0dP38l2i3x4sj0gqpDGrJQxY7Z1+ECrg9QAvtyXHsxTJZ4ILEO5PJdAbDMKg3Gsjy
      YtrntURRRJEVpudmXncV0Bvx8tLOz/zDXzAyNUo2n+OqzZezamAlf/nxz2KzWLFarTgdTgxD
      R5EVvvr9rzE1O006l8Fpd+Cw2S9NABh5+N84YfcwGwBDaKAbUG1+P12rN7B1VQRZeiXPVXev
      xte0jA/d2M+yVhcuSQdipJNlxk9IrLlhDct6Q/glkAji8bWzY8dKhudVpsYmSOFnLp1i9kSK
      ZVu20D/QTLNFRBEFGoKExSIiiQLnvoL+F2kFaExz/ITG1IKPrTcN0hr2vSrVIgMCzRvfg6U3
      T2BDhqomoAsCslNgbuf9pI5nGLVakeXz/xrK5RKVTAo8a1BsVlycZwdfpQyZFEmvG9VuO39b
      k8n0lgiCgCxJJwdyZw61dMOgoTUI+Px43d4LdlyLYsXr9vKnv/MnZAs5ypUykihiAHfe92PW
      LF/NYO9ygr4AAa+fNctW8xe/92cUS0XUmoosyxjGJVom3rr+HQTbOnjvACBKCKKEzRXC7bTg
      dFh49aTJ3beZUMcg161tQQQEGkCeUrFGPCbR2d9FS8SBSwJwYXf6WT7YjiVap7iQoEiRdKFI
      PFai+R39NLd58J/8lJogISsigshbDgCluRESu77Jg5lByr5uPndTJ80KKKdaSICEv3cDfqBv
      48mXG3nIPcVPdnk5MtfM0IoQLcEqhCu0W56mploYGYO+FvA7DEAjlVwgPj5KaOAPCDZZ8GOj
      oyvGgsXGidEyl7msYF/8FkvJBNXxEdIrbkSOhOjh1edkMpkuJEWW8Xt8JLMpKtUylWoFRVaQ
      JAnDMEikExw4fogtQ5tOW8t/IY6ryDI3XXEDhmFgGAZqTaVYLvHgU7/kxOQow+Mn+Phv/Q4u
      hwuXw0Vna8ep9+u6TrFcvDQBwBnuItjez7Jlr99WVhRkReH0TJodq03G7dWZjKfIWTWqLW4s
      VGmoJdLzaRpiC1aPGysW7BYFh1OikMtQLIrUdBeyUUfTalTUBpr2FrPiRpFKIcPsiXk09+VY
      w+002QRspzVqAA1KRQFRErHYFESjhqYWyU6MkqhIJC1tXBGQ8bmcYAkRCakklQIzk0kKPg+q
      VUBR46RSZaZjBpF1PjxuBRELoYiVQk1jYXqOXH8LJY8VBwXSqSzJmSze5jBujxsb5gogk+li
      kUQZp31xaWe1phJLLhDwBnA7XaRzmcV/2TQOmwOH3fE6vf3XFEoFGppGo9HA43IjSzKSJKEo
      CoqiUNca1Ot16loD3TCo1+uo9Ro2ixVRFBEEgWw+SyKTejtkBySgg3Czi1VrGzz36C727z9B
      ogGNxgKZ5DgPPriHkmwnsnoFzTTR5vfR1etkeP9exkbHyDagpuZQyxliiTIVtfHWTkkbIRmb
      YOcTaSI9y1m9eS0BXruMtQQsMD2WYi5aQNVAb2Qpp6bY+aP7OFy0Mz14HVd0QI8vCKxg/RaB
      UCjO0w/uZCKWJVUp0Yg+zL6DC9z7rIvtm7vp7mgDmhjaOEAkbOHIow9wfCbGZKGCVtjHgf3H
      uPfBSTZsWkt3Vxt2zBSQyXSxWC0WIqEILruTRr3BI7seZ3JumoamsfvwSxwdHWZ2YY7WcMtZ
      N3W9GccnRth3dD9P7d5JKptGrakAlCsVkpkUO/fsIpVLE/QF0A2NXDHHRHSSUmVxT4Bu6Ow5
      so9fPfvor88y0PMTCSzfjCPo4cYfvEBh/4t87dBdLN7etNBovZUNm9fRMdAMiAT71+JwGWy4
      /VHKO0X+6SUHVncbVqFCuAQ5mbe0LrJyZDexqTgvspkbewMM9J+tMx2oMbfrLmaTBYbzKrpo
      YCBS5yoGtu7gst4VeAEJARDpvPZWtLEZ3vHIkzz93V08hoBsNBACg7TdegPXtoDvZD7Hve59
      DHom+HhsJ8P3fZ0994ookoFgbUW4/JN8YJ2NZoc59jeZLiZBEJBEkR0bL6OjpY0HnnqY5w+8
      iK7rCIJIV2sHt9z8YcLBJmzWxRzBc/teYCG1AMDQstX0dfYyOj3O/uEDPPbckyeXjC4+WsLl
      cGGzLub7V/evpL+rl+U9y5mLx9g3fICHn3mURqOBgYEkSsiyTEdzO6v7VzG0bBWKpJDKZnjp
      yF6+/dPbKZZLGLqBIArYrBd1I5iEZHFg9wVxWSXsr5OIFhUrFlcQj8OCy/rqMasACNhDHdgD
      HlZ6n2B4Ns2BiTQVHFh8bbRvuZnuzlaGOhcflmYPtGJ3ifTZH2d8ocje0SpSSMfjUvC0+HFY
      HQScCjTKVKt1KtX666+UsbqxWyScVhktn6dRF6kFBog0uWgLnrlb7+Vzb2RnyMwlODqepibb
      kRwBmlffRFtPD2uH2k6mjRY/o7dnLS0NmdWe53nwaIpo3kBzdLGit53OdRvpcb+SzrE2ryBU
      g83tTzH6wgRTcZWyFKZn01palm9kZUTCcimesGcyLWGCICAIAt2tnciSTFWtMj0fJZFO0N3W
      xbLuftYNrsHlcKKcXOyRzKaIxuYA6GnvBqBYKjIzH2X34ZcoVysY+uJNymQmdepYsiRhs9pY
      t2IdkihSqVY4OnaMQqlAvV7HYXfgdXlYu3yItkgr7c1tiKJIQ6uTLxY4PHKUVCZNQ2vQ1dpJ
      R0sbgmEYS3OZuKZC9Mfcc9eL/OwnLzDKeZZLSla46X/y8Ss6+PT1Pedq9RutPJ1DjV2cjSwm
      k+l/j7dJCugiEGXwrWfVFc1IwY1kOM/CIFGG3m7Wdngu4QmaTCbTxbV0ZwCmN8ScAZhMv3nM
      BSImk8m0RJkBwGQymZYoMwCYTCbTEmUGAJPJZFqizABgMplMS5QZAEwmk2mJMgOAyWQyLVFm
      ADCZTKYlygwAJpPJtESZAcBkMpmWKDMAmEwm0xJlBgCTyWRaoswAYDKZTEuUGQBMJpNpibqI
      9QBiTO95gUO/uIeH5yFXO/myZEW2umlf9wG2bO5i3Zp2WiQQL0Hxqlo2SurZf+MnmU2c0Lr5
      +m1r3lQ/h374WYZnsjxw7LU/CSIpfj74D5+jzwmDHtDUGLmFeaYPHWDPgSMka1bKmz/Ne1Z7
      2dz1miLRWozkxAgHH/wFT45kiRUNNFsb/duvpnXFEB/dFELk5ahdpjA3xvRTd3PfvgUm0zUq
      YpCOoe2Ee1fziZv7UQThNXWKTSbTxZAr5Igl4/zbXd9hLj5PKpumtamFjavXc/32a+nr6MGi
      nL8ObalSJl/M89iuJ5iNz3F8coTfuv69DPYsY6C7/7zvm56f4c5f/JjxmQluuuIGNqxaz+qB
      lWe0rdVrpHMZ7rzvxxwdPXYxZwAq1Xyc5NgR5tJVEuXFVw29RqNWIDF+hOmZeY7HylyqkgRG
      XaWWHGN6Ps7wXPFN9NAAVNKTwyxEZ4gWQD2tjJhx8h8YJ9tmZqaIR2eJJvPEZ0dZiI4wlqyR
      r2pnvK8cHyc5O8GxqQzZcp2apqFXEySi04wfHSOpQvFkPft6Nkp2YZqjowskCyrluobRyJON
      zRA9dozZgk62es4SNyaT6QIwDAPdMFhIxZmenyGeSlCuVNANg2why3wixsjkKBW1iqadu/Ds
      4oU5zej0GKlchnQuSyy5QLaQo1ytnPN9uq5TqVaYjE4xNTfNTCzKfCJGsXzm9c0wDNSayuzC
      HDPzUabnpi9NRbB1H/sibT39fHwtaGqUUmqau//2LznwXIZ7xy1s/8wQ0qWYArxlJSDLwpyO
      GNzM5bf8Ex9fA92+c7d9+t/vIC4GmFt+I22RXfgaKvEz2hqAztgvvsG+uJ27eRd//Rc7WNtl
      ITR3D3fecYQnv/kID1+1lRVu2BKA3PM/4OBYhf/n2Ao+/SfvZv3KMMvZzS+/9zC7H76X/9h0
      DVvaFN7Vb84BTKaLxTAMNF3nV888xkR0kis27WDr2i2s6F3OY88/weETR/juPXewrHuAtkgr
      bqfrrP0kMyl27XuBux/+Tz5y0wfoau2gvbmVcKDpvMdvaBrziRj3PnYfTYEQ7c1t5z3XZCbF
      /U8+hMViZfWy1Ze+JKQo+7G5dHZcvpL5mMzu8SmSxiq8iLgv9cm8YRUgTTploWyxYLWCeM45
      lB2Q2PSR26gKFsqeFlJFB/GUepa2WSDB0YMGGWuATVdvpD3kwWcTkZp3sGJ5DCl7lBf2zeLs
      k9kSUDhxZIpkyc/A9qvoaQnR5rQhspLBFcN4KpP8895jNOthqv2dWDBv9phMF0OtXieTz1Cu
      lpFlme3rt9EciiBLEkMDq6hUK4xOjxNPJ7BYLOcMAD6Pj61rNtMSitDV1kk2nyW6MIsgnH9g
      fHjkKNHYLOFgmJAviM1iIVvInbXtTCzKTCxKqVKiu60Lh9156QOAIDlRrA36+ppxpUVq6Qwl
      A6yNGvZ6lZpoRxAELNSo1Q00Q0BxOJDRkQSDWrWKrhvUdR0QQBARZQsWRUISxcV7CcZiSqWh
      VmnoOnVtsW2tVKZc09HebGbEqAMlykWFWk3GqsC5fz8WwELnhi2nXjngtFDInK3fMhhx5mdF
      Ki1uepZ14nOBQzbA00dLswOxQ+Un02lSASsGNhZmsxQVL5EtAwQ9NnxWCWgm0hzEM+Bhdtc8
      6U4b9ZNnYjKZLjxNa1AsF2loDWRZpre9G4tiQRAEWsMthANN+D0+CqUChdK5084Om53utk66
      2zoBEAURUTj3sM0wDAzDIBqLksykCPkChPxBFFk5IwC8nGJPpJOkMmlAIOQPEfD6f32KwscP
      PsTwz/+Bu9u+hMuu8AeOn3H7L/IML9h477e+znpPljXuLA994XMcmknx2EiSEg6s/i66r/g4
      t757FRtWRGiWAb0IRpFdX/979o3FuHfvHCUcSLJExCuQ7q4gnXumdG51Fep58vUQouSjKQiK
      cgE+fCEHmXEm1AGcth52DMLiOEEAZLzeAGJbKwv7Zsh0KpSxMjnWhhrpYPUKJ+5XDSrcXh/u
      9k6UsSnKg15mgD4wbwabTBdBvVEnm88R8gUJ+oI47K8s7BAEgUgowqbVG6hUK+SLZx+ZvxmV
      apVCqcDzB17E5XDxyY98guGx4yykFs5oq2katXqNh556GEEU+cMP/R6lSol8sXDpA4DeyFMr
      JzhyYIJ8LYinsw2fIPByufHa3D5S1gDPNg3Svd1Nr8XDGq+OfeE4c0f28FJjGVKvjfdd5sVC
      mXq1RiL6OKPHbWQaCh9dH6AcG6Eyt4+nEy1ooS7e+Tt+nLKMUM3SmHiaZ+wyiTdz8o0GVCtU
      jDT56EEWfvptMi4Rt0VBsfto6h3EG2llW/fiFflCpV2sdjt4fFAs0VAdlLFyzkmMzQ5uD/5i
      GUWtUebl29Imk+lCMwyDhqYhSdJZ0zWCICAKIpl8FqfdcZYe3twxk5kkR8eG6WhuJ+gPYLfZ
      kSTprO2zhSxTs9N4PV5cDhcBr596ow5c1GWgZ2doeWqVOAf2T5Dv3ISvuxOvIJy6SNVmXyIr
      d7FTvplb3jnI2mUhQhaN2UPDzD9/P7u1T7AINqSVAAAcC0lEQVRpoJ8PfngjEabIjB3mgX/8
      AnuPDVAohRcDwNwJ0nsf4ImFG1mzcTkf+fgVdFt1SI4x+bOXGM29yQCgNaBapWKkmJ+ZIfrj
      A7yAhCjbcQZ7WXnjb9G91s2WbhcX8pa23WbH4vFBsUy9Jp//om6zgceHvzCORVUpw7mDhclk
      eksMQNM1RHExBf1aoiAgSRK5Qu6c+f83fEzDIJFJsvfoftYNrqE13ILT7kA+RwDI5HMcHTuG
      3+MjHGwi6A+SyWeBSxQAnv/XT5LVRO6UAIsd2ealc/3fcuXlg/zhpl4s8iuXy2roOiIdK/jc
      723CZ5GxSRowxux0nn3PKdzw1zeyosVFqwIi7TQ169z621czsqvEsd17mbnNylQ0ytRzUS77
      4AdY3eVjwC4hIVETFewOCbkowLlXZJ2bcxAc/Xzx7pvRjZMXVk2lXoyTOXAXd/3qIZ65/+eE
      O/6d1T7YGLww318ul6E4NwPhzdhcFgKcZ3aRz0EsylQkRI/bRQA4+38Lk8n0VomCgEVWqDfq
      1M8yKtN1nXqjTluklUgofEGOefD4YabmpqmqKkPLVxMJnrvf6MIsY9PjHDx+mN//0G20hVtP
      +/klCQC+rlW4rC56vIBsQ7a5aVvVS2+rnyaHfNpo2eL24fD48DksJ1ev6ICGrus06gJWqxVF
      UZAEAAlBkrDbLYiGgVZvoKPT0DQadR3FakOxWHglvgiL07Q3OzwXZUDG7bO98ppep2EXUHr6
      afa8SLMQJ1OEyhuZ7ckKOFy4pDyyViSbg4YTkBdvZqtqlVKxiM3twmqzoGDD5S5TsJTJ5hrU
      A69sD6urVbRigbq3DdFuxYW5AshkulhEUcRqsaCqVepag0ajgSiKp9JBFbVCKpsiHAxjtdhe
      p7f/mhOTI4zPTHBicpRHnn0cr9uDIAiMTo+TyqRYSC7gsDuoqlUEQWRsZpyRqTGeeOFpAl4/
      iqKwkIyTzmUuTQAYfM9nT+0DeD2eUBBvMMCFyZZdAqKC7PTjX3MNK18YRp5NMZmD8htZ0+pw
      gqOFiDJHueZhZhbWd3LyTrBOuVgknU7hj4RxuyzYsBNpTtGQXYxFVaotVnAvXuYrpRKVVBKt
      pQmrx00T5gzAZLpYJEnC5XCRKxUolUvU6jUURUGWZAzDIJvPMTo9TkdzBw6b/YIc84kXn2Zk
      cpS9R/fzq2cfPWubl47up6WpmSs27uDI6DBP73mGp/c8c0a7X5tVQOcmAh2Em12sWlvn2488
      S2VVB0PhQQLEKCbGefa+Fyl6Pkxk9UoihKgHfNDr4MH9e7CpHWT6BnBoWarlNHPxEpVq4019
      8vL8CUrRY+xXhvB5PaxsD2KTGhjVNIXD97P/eIkXoh3siIDnDW1qCAIONmwVOFaK8/B9T7H6
      g2uwtyl4E0+w98ACLzzjZvvfddMTEQCRoU3L0Obg3l/dx7HI5VitAToY5sC+YQ4/Oc6Gd62j
      p8uFjTc/4TGZTOdntViJBCO47E6y+SwPP/Moq5etorutiz2HX+LI6OI6/dZIC63hlgtyzL/6
      +GepqFVK5dJprx8dO8ZCKs5sbJata7ewfsUaPC4P5WqZP7/tM6e1jS7Mksyk3g4BQADsuIJB
      wgPtiIcnKMxUOXEcfCxQmo8ylrPj6vLj7Axiw4rHGyDU1Yk0MkZ+psyxYxousUYjvUCqrKHq
      xpsKAEZDRVdzJOKTFNMOlHICi9jAqGQojM6S0lw0Qj5aPOCRK6CWmZlOUdN06sB0vEwsV6Nq
      HWd2MsUxwwGeNgIumbDHTXN/G8l5HWFyhOiYFbmg4E2NM1dUyNq62RxxEDoZWAKdvQTrWbzD
      48Qmw9g0HyVhhIlkndl6iMFOP80B2Rz9m0wXkShKWK1WmgIhSpUSI9NjiKJIvlhgeOw42XwO
      v8eHx+U5NQPI5LOotcUNoW6nG6fdceo5QKlMCs3QWUjGmYvPI0kS+UL+ZFsXDruD3o6ec644
      cjsXF6D0d/Wy6izPAnpZcCrAXHz+7RIAZMJrryG8Zj0f+vvPcei5FH93x6v3AXyGW69a3AcA
      EF51GeGBLi7/689zYjjPX9xeRWragNejsK0d0lbgTaTj7H4/Vrmfxje+zd6ZON8YjZFXQZPs
      2CJDbL3p/VxzyyZubgEhNwqxvXzp07czlS4xd1pPf82//AQQJLj5y3x0ext//o4++t//aRxH
      96NN3c49X/kuUzkDzdnH0E3vp/dT23l/1yujed/221jbcoi/Tn6D7/zwYX4UUynJzfRvu5n2
      d97K719mx/I6uwhNJtNbIwoCoixz0xU3MD03w9997Qvcce+dxJIL9Hf2cd22q/nUb/8RbeEW
      rJbF3TiP7nqc8ZkJAK7ddjWbhzZydHSYX+58hH+/+3uUyiV048y1e9dsuZItazbxV5/47+dc
      8vlGCcZFexJbkdz8HIkTxyh1X43D7WEgcO7W5dQ0+en9TDo2Y3P6WNf+mnyZoYJRY3rfXjIl
      lbl8lQYyktWFKzJAb4ePoNeOXQS0Emhlju3ZT65cI1HWEOxBLIpIk6NESmqnJnt4Z9s4L+2e
      YM+L48Q5z3JJUYbVH+LyXhvXDNgZP36CfKlCIl+hroEhyEh2P01tnXgDIfrDVoRaBqGW4vln
      Ryiqdcpn61cQoX0TfWEnq9rcoBcpZ9PEx0aYSlcp1sCQ3fjbO3GHwqxucSDwchCoUytkyE0f
      YyRWIlfRqIt2PE3tOP1NrO3zIwrCBYvw5ekcaqz0+g1NpiWoqqqUKiX2Hd1PoVykUq3icblp
      aWqmt70Hj8t96qI9GZ0iXyoA0BpuJuQPkcwkiS7McWJylEajcdYHZLY0NRPyB1m9bOVZdwkn
      0slTG7xamiI0nec5QvligXK1fDEDwK85vQbRn/KL/3yJe+/ezTjnWRkqW+H6z/Ox7R188pqu
      S3eOv0bMAGAy/eZZugHA9IaYAcBk+s1jLhE3mUymJcoMACaTybREmQHAZDKZligzAJhMJtMS
      ZQYAk8lkWqLMAGAymUxLlBkATCaTaYkyA4DJZDItUWYAMJlMpiXKDAAmk8m0RJkBwGQymZYo
      MwCYTCbTEmUGAJPJZFqizABgMplMS9RFrAhWppiIk56aJFqG2svVVgQJUVJwBrtpanITDDhx
      CHApildpagl1YZhxtYms4ebyZeepUHM2ugq6SmxikkK5SiJfpqGDgYSouPA1t+L0+ekOWE4V
      bqnMHiSdrzCyUDmjO0EQiay6koAdwk5AL1Mt5EnPTDGXr1GpGxiSE0+kBYcvQH+T7ZWCMHqJ
      arFAanqaWEGlUtdpIGHzhFEcflb1h5AEAcUsCmYyXXS1eo1ytcKx8eOUK2WqNRWnzUHIH6Qt
      0orb5UYSz1/Fq1avUVWrDI8fp1QpU1WrOO0OnHYHq/pXIssKiiwTSyyQyCSZmY+es6+QP0jA
      66e3owdN16nVa5yYHKFYKlIsFxEFEVmWL2YASDB36BGe+863uHMC0rWTL0s2ZLufgSv/mOuv
      W84VO/rpli5N4fJGPkbiia9ye/wa9jVW8sTfbn+jHUA9wZ57vs3RiVkePTK9WBJSsGHzLmPD
      ez9M/6at/Mm2AAIgAald32bXoSm+9ODcGd0JkszNX36e7W3wjj5AT5Ke2s9zd9zOPQcSp5eE
      3Lydv7q25VS/NOKkpw7zzPe/zwNHFpjKVinhIrL6HQR6t/BPf3UNThG8ZlFgk+miK5QKTM/N
      8MVvfomJ6CSx5AI9bV1cs/Uqbrn5Q6zqX4FkPf8fY6FUZD4R439+6yuMz0wwl5int72b3o4e
      vvx//N943V4U2c2Lh/bwxAtP8f177zxnX9dsvYrt67fxZx/7EypqlWQmxb/e+U2OjZ/gxMQI
      FsWC2+m6NDWB19zyP/BGWnlHL+iNNGoxze6f/ZCRF2/kpbjAV36rB4v8NshG1StQTFLvvZn+
      ZTIbPubCIRkIao7SyJM8c2IvL+4bZf3KP6XdAt02SMbnUG1NtL//D/noJj9dAcsr/QkCwX7w
      2XTAYOKh2zkyW+Pnxg1c/6nltAZlPJk9vLD3GCe+e5hHV/093Q6dQbfB2C+/y/Csyv3GdVzz
      yX7aI07c+gLje/Yzf/x2vnxvJ5f3+/jg+tD/tq/LZPpNpxsGuq7z+PNPMTk7xba1W7j1XR8h
      EoowPDZMrpDnh7/4EZ/93c8QCTZht9nP2k+5UubwyBEefOphrt56Je+//j10tnQwPH6MdC7D
      9//zh1y77Wq2rNnMZeu2Mti7jPdf957T+tB0nWKlxF0P3s3moY2sWb6aRqPBsbHjPPDUL1m7
      fIgrNm6nq62LWk2lVClfmgDg61pNW08/W9aCVotRycySvP87PJ9NcGQkiWp0I3JR81EXiAgo
      uJp7cXrdDAyE8VoMxGqCnHyQ/YdSlEbixFXwiRqgUyyUqdOMu3Mtq9aFWdl8tmr0DUBl4cQY
      8byHnO9aulatZ3W7BV88xcyRl5iMjzOSUHEEDQbdBunJEyTTTtKuG+hYsY61vV4C2jTK9CGk
      49P8cjRFt1emTgiZSzPDMpmWGkPXqdVqzMXnWUjG2TS0kXWDa+jr7EWRZQ4eP8SB4wfJl/J4
      XO5zBoBSpUQ6myG6MMuODZfR1dbFyr5BZEliPDrB03ueZW02Ta1WI+QP0hQIsax74LQ+KmqV
      TC7Lsy/tojXcQku4GU3TyBZyTEQnWb1sJT1t3axfuZZypUI2n73011zJ0ozTZ+d9799GdLfC
      EwePMadvJAj82o9Vne3gbOeGyGted7gJbt1M76M7yTYSFMqgymUgTzymU7BKuJY7z5MDTABT
      vPiMTjnSzI1/dj0DrRB2GND9PrZsnKZTfIEvPjWGbY3MlS1WpicKVKwRNt18Pd1hCFsA+ujt
      66Kp3sFXHh8h1S4Sp5swoFzEr8VkWqqqtSqxxAKFchFFUXjvNTejKAqyJHH5hssQgKm5aaLz
      s2BAwOs/az9Hx46TLxVoDbewZWgT4WAToiiydc1metq72fnSLgqlAvOJeXo7es7aRyy5QCy5
      gMViIRIMs6xrgIVUnFqthkWxMDSwis6WDiRRwu10YbVYfn0G3fnpA2QOPsg+3wewKhLbLft4
      7mCVWF5mzW/fSoetRJutzIH772cuU+RYvEgNK7IzQLDvMjYPtdDR7MEjAXoVDJWRJ+9nJpHn
      wHSWGhaMWhEpnmPKWQfPWz1jA9CpFxOUMrMce+ZhjtVDRFdt50MBCFsaQIVqxUCXZVwuJ5J0
      jjRXpQLlOIl6M5IlxPJmsFpf/qGI3eHE5/OTi6UolZpQCdC9rJl6Qea5A/uJt/cS9jhw6Qli
      sSQzx9N0DQ3S0hrGy8l7BiaT6YLTNI1SpYTb4cJmsaIoyqmBniAIeFweutu6qNVrVNTqOfup
      VCtYZIW2cAuKoiCcXBUjyzJ2m33xdVmhUCpiYCC8ak5vGAaGYTA+Pc70fJQVfYOE/EEEQcDt
      dONyunDaHYxNj1Or11k9sBK1plIoFy99ADAMAwzQ9Vdq0QtAJTlJavfPeKZ1M067hVWOXex+
      ssDxuA3be/8bDqFKq5Jl/MXHOBJN88RoijJ2LP5OOre309Tqwd/kxiMJGEYNtAKzB57m4FiM
      +/fPU8aJJIuEPQbJrgbSWwkAho5u6Oi6Rq2copCYZXjXAWZd7yLTvZJeN1jQAJWaaqA7BGwW
      GTBoaNrir05YXM8jigLUVYRijrzmwyl5CQZeHrEvtrHabDhdLsr5PNVqkDpuIm1BYrMC8dEx
      soUw+ZqCTUuRTueZmS3TvLGdYNCB6y18TJPJdH66rlNVVexWO3arDUU+fa7tsDuIBMPUG3Vq
      NfWc/ag1FVmWCfqCyJJ0KgBIkoRFUQh4A0iSREWtLI49X5PTNQyD+USMmfko1152NR63B0EQ
      cNjsOGx27DY784kYkiSzvHeAilqlUCxc+gCg12Yppae5+wdPEO38MJ1XXkanKJIFUkBxz+1E
      5S6+1PsBbvnLQT67LETIojG78+fsff4n/Jv6CTbd2M/3vr2RCFNkxg7zwD9+jof0P+aufTv4
      /m39pPY+SHrvXfzD4RtZs3E5//rlK+i26pAcY/Jnn+cbORuH3sqHeP6feXz3CH9zx17AjsXT
      TNu1f8YtNw1x2ZqOk5MLFciRTeuMDj/F7p3beAgQJAs2byfdW26iZflG/sfHhrAAZ7sz8DKf
      L4C7vQseSlIpNJECWt/7ObaP7MWf/BLf+Nt/5u/ji8us3Gs/hGPwS9z1gQjKpVhbazItYbph
      UGvUT478z5zhS6KIIiuMTY8vDn7PoVgpIUsyHpcH8TWpYsMwUGsq2XzurGnkSrXC7MIc2XwW
      A4OtazYjnjwXURTZuHoD61as5Su3f5VfPfsYv/1Xv4fDZifgC1yaADC750GSoyH+4wjoeolG
      rcqsfzuR7gE6l/uQxFcuVJqjG5evnys2ttIWtGMTDSBDIa8yHxXpGeqlvT2MSwQRDw5niFWr
      OjlcrVOYi5EnTKqQZz6ap335IK0d7QRkAVkQ0QQRWRYQRUA/5+m+vpaNdK7v4tb6cvRGAwMB
      wzpB/LDGo1NzXPfurbglJ165hfXv/SDthQr9OoABRh2jmiFZjlI8mOOFyUG60Fh2nmu1qlZR
      i3lw2JEtEjZU4nsfZ2E+wX7LNlZfbWNQELBRoqiKVKrP88DebvrDDtZ1uF/ZO2AymS4ogcWL
      vK7rZ73AG4aBpmu4nW6cDuc5+7HIyqkL/Zn9CEiShM1ixXGWm8jlaoUTkyPYbHbabXZE4ZUE
      kaZpxJILjEyN4XV5Wb9iLX2dvQiCgCSKlyYAjD1+B+kaPANgcSE7Aqy87jPcONjHVVvDvDo1
      XnetJNC2gvdd24cdUGgACbLpClPjMqtuW0VfxIFfBvDj9rWwddsgv3hUJTM7TYYO5tMZpsaz
      9N62gd5OD5GTKy91QcZilRbTLm8lAHRfy7Ju+MsroF6KU05HGXn8u9zzwjQHZlz03LCVdosP
      r+zjqj/41KveWEerZiiN3s+Pf7CTZ58b5ZHr/4ArAxrLwuc+XKVcppBNg8eFYpVwoXLo6Z8x
      WvTyrPs2PvmuAVZ3OggS4/D9P2Hi+Uf41lM7uHldmDUdbvMegMl0kQiCgCzJaFqDs43vX14m
      6vf68Ljc5+zHolhObQQzjNMvToIAiqxgt9lxn6WPYrnIgeOH6G3vIRKKIEmv/MU3NI2puRl+
      ufNXrBtcw9oVa7hs3RaKpRKZfObSBIAtn/wXmto7+eAgIIgIooTF5sFul7G9ZhOYv62ZYEsE
      F2+PUatsD+JucTD0gT8gU/gPWvNP8+xR2NYKvZ1ntEa0BnEt+zDbNs3QbAxzdyJNIaBAazed
      1idRqzLHRqC3DfwOA9DI5zPE52M0dbTh8zewc5T9z9spBlq4/DNDdEUUfIoAtLBs0wZ6OiW+
      +zdPklXWc+DaTlZx/hSTyWR6c2RZwev2kMplKFfKVKoVFFlBkiQMwyCRTrD/2EG2rd2C23nu
      AOBxeZiJRTk+cZwb1etxO3VEUVy8WVsqcmziOOFgEwGP/9T9AYCFVJz5RIx4MsFVm69gZd+K
      0/odnRpjPj6PWlPZPLSRtkgroiDidrqwKMqlCQA2XxhPUzvt7a/fVpJlJFl+1UOKBMCJ3a7g
      C+gcn1ugSQ5QafFipUK9WiA+naAutmD3+7BjxWm14HLLZNNJ8j5QdQ+yUUNrqJQrdTTt3Lm4
      82mUCzTKefIWP4os47JZkAVxcRRAA62ho6oGhgBGrQj5PNNVJ4qi4PfYsIgg6BqGmqVcbpAr
      yVgtErLFCYpAc7hOwlpgeixG3uenahGxVGdJJEqMzQm0bvPj9ZQRKSAIKppWpVSoUm+I6IaM
      hEatWqFSyKPKXnRJNPcAmEwXkSxJOO1OREGgVq8xE5ulyR/C6/aQSCdJZlKks2lcDicux7mX
      ZPg9PuYT8+QKeZLZFIqi4HN7SWZSzCdiqLUakiSdkUZKpBPkCnkCPj8epxuH/fQUkSiKaLpO
      qVqholZR6zWsFiuGYaAb+tvhYXAi0EYo4mRwdYPdT77IoUOjJBvQaMTJpiZ55JF9lGU7TSuW
      ESZEi89LR7eDE4cOMDE+Qa4BdTWPWsmykKpQURtv6kwqC1Ok9j/JSxPzHIsXqDRAMzSMegk1
      eoCpuRqH4yGCfnCoMzDxNA/vGWfn8TgZVaeu6xiNHGr0EQ4Nx3n0gIPWZi8eVwuwnDUbBQLB
      JLseeY6peI50tURj7nEOHknw4AtOtqzvpLOtFQgTak4gSdPse36chXSFkqZBI0f0+DH2P7mL
      9EA3QlOQdt4OG+xMprcni2IhHAzjtDtpNBo8+eLTTMeiNDSNvcP7OT5xgvlEjOZQM5HgufO8
      fZ09uBxOEukkB08cZmRqFE3XOXj8MM/tfwEAl91F+DV9HB4dZi4xz6ahjTQFm7BarKf9POD1
      I0kSiXSC4xMnmIhOohs6an1xZvE2uTaIBFdehquliXd953HSe57hyy9+DwMDRDti+21suWwT
      3QOtgEho2QZcfoUt33yIwhPw+Z1WLN5O7FKNtjpkZcDyesc8k2KXcAYUJn75HdL5Kj8t1mno
      i6tyJUHB2rqezo918Y428NT8oPYT2f0Ic4fyfPWnBdS6hq4DhoQSXkPzR27mv622ErAt3qbt
      fsdtMDpF6qFHePybj/GALiAhYm0bouO2dy/2qzgAhcs++ru0TsWoPfdDfv6/6tylGxiShCi7
      EeSr+dPbLqM/7MCN+chXk+lieflm6tVbrqCnvZufPXIvT764k9rJkXZ/Zy+/+76P0hyKYLct
      JmJ37nmW+UQMgHUr1rCsewC71c7K/pXc+u5beHjnI/zisQeoN+o4bHZ8bi+3ve+j9HT0nFpp
      pP7/7dxNaxNBHMfx7z5ld7JJNg+NaZNsUw1t4ja14qG3CqIH34EHT559Ib4VLehB8CIiihZR
      6sVTKWKx1mrSYJpsErJN0nhIKYJtULFI637Ow/A/zTDz/83sf+Xw4dM6uqZzZeHyoVdM0UiU
      C4USN7nBi5VlHj59RLvT3q/7WD+D09CERXjcJm5qRPTRoxXdRMRtkpYgZv7YthwujkZsAsMy
      KSafsfalxdrHGh0EmpUmU5gnl03hpIMAGNFxDFNiOvac9e0mG1sesmcRCWlkU2nGdAs9qEO3
      QbPZwXU7dEdWJ4GZQPRlzIiF6rl0G3UqZZdODwayQSA8RSE1SdYpkTVB1gRoYyQCu+z06tTK
      ZeqdHr2Bhips8rM50sUS+bh60KQN2w4pT8ZJrrC5WqXqDtgTNjMXbey5ueG8qIBKaqZEXzE4
      +26VcqVGpdnFUwXRbIZQLM+lwhliAelP9jmfz/eLJElCkiQy4xnk/chnuVphu1YlNzGJFbaY
      nXYICoGqDJfbZrvFTmMHAG93GN9WVZWxaAInX+Txyye4LZfKt23OZacQhqCYLxAKhg7inXuD
      Af1+H10LYAaDxKNxAtrP7/31QIBkLMFs/jzLb1/RaLp8rmyhyArCEEiDUeHU06zvweZdHiy9
      4f6917wH+keNVXS4fodbiza3rx3+DPu0a2/U8b62/nUZPp/vLzohV0DHQFYhtsD81RymvUid
      EclQWYHJPE7m6C6+z+fznTT/7wnA91v8E4DPd/p8B6/hCTzheoNgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Worst 10 Products Ranked' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
